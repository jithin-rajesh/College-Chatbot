{
    "header_info": {
        "institution_vision_mission": "Vision: To be an Institution moulding globally competent professionals as epitomes of Noble Values. Mission: To transform the Youth as technically competent, ethically sound and socially committed professionals, by providing a vibrant learning ambience for the welfare of humanity. DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING",
        "department_vision_mission": "Vision: To be a Centre of Excellence in Computer Science and Engineering providing quality education and research for the betterment of the society. Mission: To impart sound knowledge in theoretical and applied foundations of Computer Science and Engineering, and to train the students to solve real life issues to effectively define and shape life.",
        "peos": "PEO1: Graduates will be successful professionals in Industries of core or interdisciplinary nature or entrepreneurs, demonstrating effective leadership and excellent team work. PEO2: Graduates will expand the horizon of knowledge through higher education or research, leading to self-directed professional development BTech in Computer Science and Engineering (AI) 2022-2023 PEO3: Graduates will demonstrate competency in AI & ML, professional attitude and ethics while providing solutions in societal and environmental contexts",
        "pos": "Engineering graduates will be able to: 1. Engineering knowledge: Apply the knowledge of mathematics, science, engineering fundamentals, and an engineering specialization to the solution of complex engineering problems. 2. Problem analysis: Identify, formulate, review research literature, and analyze complex engineering problems reaching substantiated conclusions using first principles of mathematics, natural sciences, and engineering sciences. 3. Design/development of solutions: Design solutions for complex engineering problems and design system components or processes that meet the specified needs with appropriate consideration for the public health and safety, and the cultural, societal, and environmental considerations. 4. Conduct investigations of complex problems: Use research-based knowledge and research methods including design of experiments, analysis and interpretation of data, and synthesis of the information to provide valid conclusions. 5. Modern tool usage: Create, select, and apply appropriate techniques, resources, and modern engineering and IT tools including prediction and modelling to complex engineering activities with an understanding of the limitations. 6. The engineer and society: Apply reasoning informed by the contextual knowledge to assess societal, health, safety, legal and cultural issues and the consequent responsibilities relevant to the professional engineering practice. 7. Environment and sustainability: Understand the impact of the professional engineering solutions in societal and environmental contexts, and demonstrate the knowledge of, and need for sustainable development. 8. Ethics: Apply ethical principles and commit to professional ethics and responsibilities and norms of the engineering practice. 9. Individual and team work: Function effectively as an individual, and as a member or leader in diverse teams, and in multidisciplinary settings. 10. Communication: Communicate effectively on complex engineering activities with the engineering community and with society at large, such as, being able to comprehend and write effective reports and design documentation, make effective presentations, and give and receive clear instructions. 11. Project management and finance: Demonstrate knowledge and understanding of the engineering and management principles and apply these to one‚Äôs own work, as a member and leader in a team, to manage projects and in multidisciplinary environments. 12. Life-long learning: Recognize the need for, and have the preparation and ability to engage in independent and life-long learning in the broadest context of technological change.",
        "psos": "PSO1: To apply Algorithmic Principles, Programming Skills and Software Engineering Principles to design, develop and evaluate Software Systems of varying complexities. PSO2: To apply knowledge of System Integration to design and implement computer-based BTech in Computer Science and Engineering (AI) 2022-2023 systems PSO3: To solve real world and socially relevant problems using AI and ML techniques BTech in Computer Science and Engineering (AI) 2022-2023 DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING B.Tech. Programme in Computer Science and Engineering (Artificial Intelligence) For the students admitted from 2022-23"
    },
    "credit_distribution": "Not Found",
    "semester_courses": {
        "SEMESTER I": [],
        "SEMESTER II": [],
        "SEMESTER III": [],
        "SEMESTER IV": [],
        "SEMESTER V": [],
        "SEMESTER VI": [],
        "SEMESTER VII": [],
        "SEMESTER VIII": []
    },
    "electives_honors_minors": {
        "programme_elective_I": [],
        "honors_basket": [],
        "minor_basket": []
    },
    "detailed_course_info": {
        "Semester I": {
            "courses": []
        },
        "SEMESTER I": {
            "courses": []
        },
        "SEMESTER II": {
            "courses": [
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objective of this course is to familiarize the prospective engineers with some advanced concepts and methods in Mathematics which include the Calculus of vector valued functions, ordinary differential equations and basic transforms such as Laplace and Fourier Transforms which are invaluable for any engineer‚Äôs mathematical tool box. The topics treated in this course have applications in all branches of engineering.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Compute the derivatives and line integrals of vector functions and Apply learn their applications CO 2 Evaluate surface and volume integrals and learn their inter- Apply relations and applications. CO 3 Solve linear ordinary differential equations. Apply CO 4 Apply Laplace transform to solve ODEs arising in engineering. Apply CO 5 Apply Fourier transforms of functions to solve problems Apply arising in engineering.",
                    "syllabus": "Vector Calculus ‚Äì Derivative of vector function, Gradient, Divergence, Curl, Line integral, conservative fields, Green's theorem, surface integral, Gauss divergence theorem, Stokes' theorem. Ordinary Differential Equations- Homogeneous and Non-Homogeneous linear differential Equations, Euler-Cauchy equations. Method of undetermined coefficients and Method of variation of parameters. Laplace transforms: Laplace Transform and its inverse, shifting theorems, Laplace transform of derivatives and integrals, solution of differential equations using Laplace transform, Unit step function. Dirac delta function, Convolution theorem and its applications. Fourier Transforms: Fourier integral representation, Fourier sine and cosine integrals. Fourier transform and inverse Fourier transform. Fourier sine and cosine transforms, inverse sine and cosine transform, Convolution theorem. B. Tech in Computer Science and Engineering (AI) 2022-2023",
                    "textbooks": "1) H. Anton, I. Biven S.Davis, Calculus, Wiley, 10thEdition, 2015. 2) ErwinKreyszig, Advanced Engineering Mathematics, JohnWiley&Sons, 10thEdition, 2016.",
                    "references": "1) George F Simmons: Differential Equation with Applications and its historical Notes, McGraw Hill Education India, 2nd Edition, 2002. 2) HemenDutta, Mathematical Methods for Science and Engineering, CengageLearning,1stEdition, 2020. 3) B.S. Grewal, Higher Engineering Mathematics, Khanna Publishers, 44th Edition, 2018.",
                    "course_plan": "Module Contents No. of hours I Calculus of vector functions: Vector valued function of single variable, 12 derivative of vector function and geometrical interpretation, motion along a curve-velocity, speed and acceleration. Concept of scalar and vector fields, Gradient and its properties, directional derivative, divergence and curl, Line integrals of vector fields, work as line integral, Conservative vector fields, independence of path and potential function (results without proof). II Vector integral theorems: Green‚Äôs theorem (for simply connected domains, 12 without proof) and applications to evaluating line integrals and finding areas. Surface integrals over surfaces of the form z = g(x, y), y = g(x, z) or x = g(y, z) , Flux integrals over surfaces of the form z = g(x, y), y = g(x, z) or x = g(y, z), divergence theorem (without proof) and its applications to finding flux integrals, Stokes‚Äô theorem (without proof) and its applications to finding line integrals of vector fields and work done. III Ordinary differential equations: Homogenous linear differential equation of 12 second order, superposition principle, general solution, homogenous linear ODEs with constant coefficients-general solution. Solution of Euler- Cauchy equations (second order only). Existence and uniqueness (without proof). Non homogenous linear ODEs-general solution, solution by the method of undetermined coefficients (for the right-hand side of the form ùë•n, ùëíkx, ùë†ùëñùëõùëéùë•, ùëêùëúùë†ùëéùë•, ùëíkxùë†ùëñùëõùëéùë•, ùëíkxcosùëéùë• and their linear combinations), methods of variation of parameters. Solution of higher order equations- homogeneous and non-homogeneous with constant coefficient using method of undetermined coefficient. IV Laplace transforms: Laplace Transform and its inverse, Existence theorem 12 (without proof), linearity, Laplace transform of basic functions, first shifting theorem, Laplace transform of derivatives and integrals, solution of B. Tech in Computer Science and Engineering (AI) 2022-2023 differential equations using Laplace transform, Unit step function, Second shifting theorems. Dirac delta function and its Laplace transform, Solution of ordinary differential equation involving unit step function and Dirac delta functions. Convolution theorem (without proof) and its application to finding inverse Laplace transform of products of functions. V Fourier Transforms: Fourier integral representation, Fourier sine and cosine 12 integrals. Fourier sine and cosine transforms, inverse sine and cosine transform. Fourier transform and inverse Fourier transform, basic properties. The Fourier transform of derivatives. Convolution theorem (without proof). Total hours 60 B. Tech in Computer Science and Engineering (AI) 2022-2023 Year of Course Categor Credi Course Name L T P Introductio Code y t n ENGINEERING CY0U10B BSC 2 1 0 3 2022 CHEMISTRY-B i)"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of the engineering chemistry program is to expose the students to basic concepts of chemistry and its industrial as well as engineering applications. It also let the students to familiarize with different topics such as new-generation engineering materials, storage-devices, different instrumental methods etc. ii)",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1: Solve various engineering problems by applying the basic Apply concepts of Electrochemistry. CO 2: Apply the basic concepts of UV-Visible spectroscopic Apply techniques in the analysis of organic compounds and in conducting polymers. CO 3: Interpret IR and NMR spectrum of simple molecules. Apply CO 4: Explain the use of analytical methods such as TG, DTA and Understand SEM for analysis of chemical mixtures and characterization of nanomaterials. CO 5: Examine the various types of hardness in water and their Apply elimination. iii)",
                    "syllabus": "Electrochemistry ‚Äì Cell prototypes, Nernst equation and its uses, different types of cells and applications of electrochemical series. Fundamentals of corrosion and its prevention. UV-Visible Spectroscopic Technique and Polymer Chemistry: ‚Äì Types of spectrum, Beer Lambert‚Äôs law, Principles and applications of UV-Visible spectroscopy, instrumentation of UV-Visible spectroscope, Basics of polymer chemistry, BS, ABS, Kevlar and conducting polymers. IR and NMR Spectroscopic techniques with applications: - Principles and applications of IR and NMR spectroscopy, Chemical shift, Spin spin splitting. Thermal Analytic Techniques and Nanomaterials: ‚Äì TG, DTA techniques; Classifications of nanomaterials, synthesis, properties and applications, SEM. Water Chemistry‚ÄìTypes of hardness in water and its elimination, Reverse osmosis, DO, BOD, COD and its significance. iv) (a)",
                    "textbooks": "B. Tech in Computer Science and Engineering (AI) 2022-2023 1) D. Harvey, N. Rutledge, Industrial Chemistry, ETP, first edition, 2018. ISBN: 9781788820554 2) P. W. Atkins, J de Paula, Atkins' Physical Chemistry, Oxford University Press, 11'th edition 2014. ISBN: 9780199697403 3) M. Arif, A. Fernandez, K. P. Nair, Engineering Chemistry, first edition, Owl Books,2019. 4) S. Chawla, A text book of Engineering Chemistry, second edition, Dhanpat Rai & Co. 2013. 5) Roy V., Engineering Chemistry, Second Edition, 2019. (b) OTHER",
                    "references": "1) C. N. Banwell, E. M. Mc Cash, Fundamentals of Molecular Spectroscopy, McGraw-Hill, 4th edition, 2001. ISBN: 9780074620250 2) , H. H. Willard, L. L. Merritt,Instrumental Methods of Analysis, CBS Publishers, 7th edition, 2005. ISBN: 9788123909431 3) A. J. Peacock, A. Calhoun, C. Hanser, Polymer Chemistry: Properties and Application, Verlag GmbH & Company KG, 2012. ISBN: 9783446433434 4) C. Binns, Introduction to Nanoscience and Nanotechnology, Wiley, 2010. ISBN:9780471776475 B. Tech in Computer Science and Engineering (AI) 2022-2023",
                    "course_plan": "Modul Contents No. of hours e I Electrochemistry and corrosion: 9 Electrochemical series and its applications. Free energy and EMF -Nernst Equation ‚Äì Derivation ‚Äì single electrode and cell (Numericals) ‚ÄìApplication - Variation of EMF with temperature. Potentiometric titration - Introduction -Redox titration only. Lithium ion cell - construction and working. Corrosion-Electrochemical corrosion ‚Äì mechanism. Galvanic series- cathodic protection II UV-Vis Spectroscopic Technique and Polymer Chemistry: 9 Introduction- Types of spectrum - electromagnetic spectrum - molecular energy levels - Beer Lambert‚Äôs law (Numericals). UV-Visible Spectroscopy ‚Äì Principle - Types of electronic transitions ‚Äì Energy level diagram of ethane, butadiene, benzene and hexatriene. Instrumentation of UV-Visible spectrometer and applications. Copolymers - Definition - Types - Random, Alternating, Block and Graft copolymers - ABS - preparation, properties and applications. Kevlar-preparation, properties and applications. Conducting polymers - Doping -Polyaniline and Polypyrrole - preparation properties and applications. OLED - Principle, construction and advantages. III IR and NMR Spectroscopic techniques with applications 9 IR spectroscopy ‚Äì Principle - Number of vibrational modes - Vibrational energy states of a diatomic molecule and -Determination of force constant of diatomic molecule (Numericals) ‚ÄìApplications. 1H NMR spectroscopy ‚Äì Principle - Relation between field strength and frequency- chemical shift - spin-spin splitting (spectral problems ) - coupling constant (definition) - applications of NMR- including MRI (brief). IV Thermal Analytic Techniques and Nanomaterials: 9 Thermal analysis ‚ÄìTGA- Principle, instrumentation (block diagram) and applications ‚Äì TGA of CaC2O4.H2O and polymers. DTA- Principle, instrumentation (block diagram) and applications - DTA of CaC2O4.H2O. Nanomaterials - Definition - Classification - Chemical methods of preparation -Hydrolysis and Reduction - Applications of nanomaterials ‚Äì Surface characterisation -SEM ‚Äì Principle and instrumentation (block diagram). V Water Chemistry: Water characteristics - Hardness - Types of 9 hardness- Temporary and Permanent - Disadvantages of hard water - Units of hardness- ppm and mg/L -Degree of hardness (Numericals) - Estimation of hardness-EDTA method (Numericals). B. Tech in Computer Science and Engineering (AI) 2022-2023 Water softening methods-Ion exchange process-Principle, procedure and advantages. Reverse osmosis ‚Äì principle, process and advantages. Dissolved oxygen (DO) -Estimation (only brief procedure-Winkler‚Äôs method), BOD and COD-definition, estimation (only brief procedure) and significance Total hours (Approx.) 45 B. Tech in Computer Science and Engineering (AI) 2022-2023 Course Code Course Name Category L T P Credit Year of Introduction ES0U10B ENGINEERING GRAPHICS ESC 2 0 2 3 2022"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "Aim of the course is to enable the student to effectively perform technical communication through graphical representation as per global standards. The student will be able to apply the principles of projection and will be introduced to the fundamentals of Computer Aided Drawing (CAD).",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Construct the orthographic projection of points and lines located in Apply different quadrants. CO 2 Prepare multi view orthographic projection of solids by visualizing Apply them in different positions. CO 3 Construct sectional views and develop surfaces of a given solid. Apply CO 4 Prepare pictorial drawings using the principles of isometric and Apply perspective projection to visualize objects in three dimensions. CO 5 Convert pictorial views into orthographic views. Apply CO 6 Prepare multi view projection and solid models of objects using CAD tools. Apply",
                    "syllabus": "Introduction - Relevance of technical drawing in engineering field, BIS code of practice for technical drawing. Orthographic projection - Projection of points and lines in different quadrants, traces of line. Projection of solids in simple position, axis inclined to one reference plane and axis inclined to both reference planes. Sections of Solids - Sections of solids cut by different section planes, true shape of the sections Development of Surfaces - Development of surfaces of solids and solids cut by different section planes. Isometric Projection - Isometric view and projection of solids and their combinations. Perspective Projection - Perspective projection of solids with axis perpendicular to the ground plane and axis perpendicular to picture plane. Conversion of Pictorial Views - Conversion of pictorial views into orthographic views. Introduction to Computer Aided Drawing - Creating 2D drawing and 3D models of various components using suitable modelling software. B. Tech in Computer Science and Engineering (AI) 2022-2023",
                    "textbooks": "1) Bhatt N.D, Engineering Drawing, Charotar Publishing House Pvt. Ltd, 53rd Edition, 2019. 2) John K.C., Engineering Graphics, Prentice Hall India Publishers, 1st Edition, 2009. 3) C. M.Agrawal, Basant Agrawal, Engineering Graphics, Tata McGraw-Hill, 1stEdition, 2012.",
                    "references": "1) G. S. Phull, H. S.Sandhu, Engineering Graphics, John Wiley & Sons Inc Pvt. Ltd, 1stEdition, 2014. 2) P. I.Varghese, Engineering Graphics, V.I.P. Publishers,21st Edition, 2010. 3) Anil Kumar K.N., Engineering Graphics, Adhyuth Narayan Publishers, 4th Edition, 2009.",
                    "course_plan": "Module Contents No. of hours Introduction: Relevance of technical drawing in engineering field. Types of lines, dimensioning, BIS code of practice for technical drawing. Orthographic projection of points and lines: Projection of points in I 8 different quadrants, projection of straight lines inclined to one plane and inclined to both planes. Trace of line, inclination of lines with reference planes, true length of line inclined to both the reference planes. Orthographic projection of solids: Projection of simple solids such as triangular, rectangle, square, pentagonal and hexagonal prisms, pyramids, II 9 cone and cylinder. Projection of solids in simple position including profile view. Projection of solids with axis inclined to one of the reference planes and with axis inclined to both reference planes. Sections of Solids: Sections of prisms, pyramids, cone, cylinder with axis in vertical position and cut by different section planes. True shape III 9 of the sections. Locating the section plane when the true shape of the section is given. Development of surfaces: Development of surfaces of the above solids and solids cut by different section planes. Finding the shortest distance between two points on the surface. Isometric projection: Isometric view and projection of prisms, pyramids, IV 6 cone, cylinder, frustum of pyramid, frustum of cone, sphere, hemisphere and their combinations. Perspective projection: Perspective projection of prisms and pyramids with axis perpendicular to the ground plane, axis perpendicular to picture plane. V 5 B. Tech in Computer Science and Engineering (AI) 2022-2023 Conversion of pictorial view: Conversion of pictorial view into orthographic views. SECTION B To be conducted in CAD Lab) Introduction to Computer Aided Drawing: Role of CAD in design and development of new products, advantages of CAD. Creating two- dimensional drawing with dimensions using suitable software. (Minimum 2 exercises mandatory) 8 Introduction to Solid Modelling: Creating 3D models of various components using suitable modelling software. (Minimum 2 exercises mandatory) Total hours 45 B. Tech in Computer Science and Engineering (AI) 2022-2023 Course Course Name Category L T P Credit Year of Code Introduction ES0U10D BASICS OF ELECTRICAL AND ESC 4 0 0 4 2022 ELECTRONICS ENGINEERING COURSE OVERVIEW This course aims to equip the students with an understanding of the fundamental principles of electrical, electronics and communication engineering. COURSE OUTCOMES After the completion of the course, the student will be able to: CO 1 Apply fundamental circuit laws and principles of electromagnetism Apply to solve simple DC electric circuits and magnetic circuits respectively. CO 2 Describe the fundamentals of AC generation to perform simple AC Understand circuit analysis. CO 3 Describe the principles of passive components, semiconductor Understand devices and its characteristics. CO 4 Explain the working of electronic circuits, instrumentation, radio and Understand cellular communication systems. SYLLABUS Basic concepts of DC circuits: Ohm‚Äôs Law and Kirchhoff's laws, Star-delta conversion, Analysis of DC circuits, Mesh analysis, Node analysis. Magnetic Circuits: Basic Terminology, Simple Magnetic circuits, Electromagnetic Induction, Faraday's laws, Lenz's law, Self-inductance and mutual inductance. Alternating Current fundamentals: Basic definitions, Average, RMS values, AC Circuits, Phasor representation, Analysis of simple AC circuits (R, L, C, RL, RC, RLC Series circuits) Three phase AC systems, Generation of three phase voltages, star and delta connections. Introduction to Semiconductor devices: Evolution of electronics, Resistors, Capacitors, Inductors PN Junction diodes and Bipolar Junction Transistors. Basic electronic circuits and instrumentation: DC power supply, Full wave bridge rectifier, Capacitor filter, Simple Zener voltage regulator, Amplifiers, Public Address system and Electronic Equipments. Introduction to Communication Systems: Evolution of communication systems, Radio communication, Principle of antenna and Mobile communication. B. Tech in Computer Science and Engineering (AI) 2022-2023 TEXT BOOKS 1) William H. Hayt., Jr., Jack E. Kemmerly, Steven M. Durbin., Engineering Circuit Analysis, McGraw-Hill, 8th Edition, 2012. 2) Kothari D. P. and Nagrath I. J., Basic Electrical Engineering, Tata McGraw Hill, 2010. 3) Fitzgerald A.E., David Higginbotham E., Arvin Grabel, Basic Electrical Engineering, Tata McGraw Hill, 5th Edition,2009. 4) Boylested, R. L. and Nashelsky, L., Electronic Devices and Circuit Theory, Pearson Education, 10thEdition, 2009. 5) Wayne Tomasi and Neil Storey, A Textbook on Basic Communication and Information Engineering, Pearson, 5thEdition, 2010. REFERENCES 1) Paul Breeze, Power Generation Technologies, Newnes,3rd Edition, 2019. 2) Allan Hambley R., Electrical Engineering: Principles & Applications, Pearson Education,7thEdition, 2018. 3) Mittle V. N. and Arvind Mittal, Basic Electrical Engineering, McGraw Hill,2ndEdition, 2006. 4) N.N. Bhargava , D.C. Kulshreshtha , S.C. Gupta, Basic Electronics and Linear Circuits, Tata McGraw - Hill Education, New Delhi, 2nd Edition, 2014. COURSE PLAN Module Contents No. of hours I DC circuits: Review of Elementary concepts of DC circuits, Current and 9 Voltage Division Rules, Star-delta conversion (resistive networks only- derivation not required), Numerical problems. Analysis of DC circuits: Mesh current method, Node voltage method. Solution of network equations by matrix method, Numerical problems. Magnetic Circuits: Review of Magnetic Circuits, Series magnetic circuits with composite materials, Numerical problems. II Electromagnetic Induction: Faraday's laws, Lenz's law, statically induced 9 and dynamically induced emfs, Self-inductance and mutual inductance, coefficient of coupling (derivation not required), Numerical Problems. B. Tech in Computer Science and Engineering (AI) 2022-2023 Alternating Current fundamentals: Generation of alternating voltages, Basic definitions, Average and RMS values of sinusoidal waveforms, Numerical Problems. Power Generating Stations: Solar, Wind, Hydro-electric and Nuclear power stations, Basic concepts with block diagrams only. III Analysis of AC Circuits: Transient Analysis of RL circuit, Steady state 12 Analysis of RL circuit, Phasor representation of sinusoidal quantities, Complex forms. Analysis of simple AC circuits: Purely resistive, inductive and capacitive circuits; Analysis of RL, RC and RLC series circuits, active, reactive and apparent power. Illustrations using simple example. Three phase AC systems: Generation of three phase voltages, advantages of three phase systems, star and delta connections (balanced only), relation between line and phase voltages, line and phase currents, Power in three phase circuit, Numerical problems. IV Introduction to Semiconductor devices Evolution of electronics ‚Äì Vacuum tubes to nano electronics (In 1 evolutional perspective only) Resistors, Capacitors and Inductors: types, specifications, standard values, 2 colour coding (No constructional features) PN Junction diode: Principle of operation, V-I characteristics, principle of 2 avalanche breakdown and Zener breakdown Bipolar Junction Transistors: PNP and NPN structures, principle of 5 operation, relation between current gains in CE, CB and CC Configurations, input and output characteristics of common emitter configuration. V Basic electronic circuits and instrumentation Rectifiers and Power supplies: Block diagram description of a dc power 3 supply, working of a full wave bridge rectifier, capacitor filter (no analysis), working of simple Zener voltage regulator Amplifiers: Concept of voltage divider biasing, circuit diagram and 5 working of common emitter (RC coupled) amplifier with its frequency response, block diagram of Public Address system. Electronic Instrumentation: Block diagram of an electronic 2 instrumentation system, functions of various equipments (multimeter, DSO and function generator) VI Introduction to Communication Systems B. Tech in Computer Science and Engineering (AI) 2022-2023 Evolution of communication systems: Telegraphy to 5G 1 Radio communication: Principle of AM & FM, frequency bands used for 5 various communication systems, block diagram of super heterodyne receiver. Principle of antenna: Radiation from accelerated charge Mobile communication: Basic principles of cellular communications, 4 principle and block diagram of GSM. Total hours 60 Suggested Simulation Assignments for Basic Electronics Engineering (1) Plot V-I characteristics of Si and Ge diodes on a simulator. (2) Plot Input and Output characteristics of BJT on a simulator. (3) Implementation of half wave and full wave rectifiers. (4) Simulation of RC coupled amplifier with the design supplied. (5) Generation of AM signal. Note: The simulations can be done on open tools such as Proteus, QUCS, KiCad, GNU Radio or similar software to augment the understanding. B. Tech in Computer Science and Engineering (AI) 2022-2023 Course Course Name Category L T P Credit Year of Code Introduction HS0U10B PROFESSIONAL HSC 2 0 2 -- 2022 COMMUNICATION"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objective of this course is to equip students with the necessary skills to listen, read, write, and speak so as to comprehend and successfully convey any idea, technical or otherwise, as well as give them the necessary polish to become persuasive communicators. The course aims to enhance the employability and career Skills of students and orient the students towards grooming as a professional.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Demonstrate effective communication skills through writing and Create making presentations CO 2 Analyze a variety of textual and audio content for specific needs Analyze CO 3 Evaluate a given technical/non-technical topic Evaluate Create professional and technical documents Create CO 4 Apply Communicate proficiently in interviews and exam situations and all CO 5 social situations",
                    "syllabus": "Communication Skills: Introducing yourself and others professionally, elevator pitch, recommendation letter, e-mails, netiquettes, telephone etiquettes, demi-official letters. Business Communication and Technical writing: Product description, narrating an incident, report writing, agenda and minutes, memo, asking for information and giving information, explaining processes and products, giving instructions, planning a course of action. Creative Thinking, Critical Thinking Skills and problem solving: Expressing opinion, GD, Arguing, reading critical texts (general and academic) and summarizing, listening and responding, Negotiation strategies and decision making skills. Presentation Skills: Oral Presentation Skills (Proposal presentation), Power point presentation (Projects). Interviews: CVs and Resumes, Job application, Types of interviews, successful interviews, B. Tech in Computer Science and Engineering (AI) 2022-2023 interview etiquette, dress code, body language, telephone/online (Skype) interviews, one-to- one interview & panel interview, FAQs related to job interviews.",
                    "textbooks": "1. Meenakshi Raman and Sangeetha Sharma (2018). Professional Communication, Oxford University Press, 3rdEdition, 2018. 2. Meenakshi Raman and Sangeetha Sharma, Technical Communication: Principles and Practice, Oxford University Press, 2nd Edition, 2011. 3. Ashraf Rizvi M., Effective Technical Communication. New Delhi: Tata McGraw Hill Publications, 2007.",
                    "references": "1. English for Engineers and Technologists (Combined edition, Vol. 1 and 2, Orient Blackswan, 2010. 2. Stephen E. Lucas, The Art of Public Speaking, 10th Edition; McGraw Hill Education, 2012. 3. William Strunk Jr. & E.B. White, The Elements of Style, 4thEdition, Pearson, 1999. 4. David F. Beer and David, Guide to writing as an Engineer, John Willey. New York, 2004. 5. Goodheart-Willcox, Professional Communication, 1stEdition, 2017. 6. Training in Interpersonal Skills: Tips for Managing People at Work, Pearson Education, India, 6th Edition,2015. 7. The Ace of Soft Skills: Attitude, Communication and Etiquette for Success, Pearson Education; 1st Edition, 2013. 8. Anand Ganguly, Success in Interview, RPH, 5thEdition, 2016. 9. Raman Sharma, Technical Communications, Oxford Publication, London, 2004.",
                    "course_plan": "Module Contents No. of hours I Use of language in communication: Difference between technical and 4 literary style. Significance of technical communication Vocabulary Development: technical vocabulary, vocabulary used in formal letters/emails and reports, sequence words, misspelled words, compound words, finding suitable synonyms, paraphrasing, verbal analogies. Technology-based communication: Effective email messages, Netiquette, editing skills using software. Modern day research and study skills: search engines, repositories, forums such as Git Hub, Stack Exchange, OSS communities (MOOC, SWAYAM, NPTEL), and Quora; Plagiarism B. Tech in Computer Science and Engineering (AI) 2022-2023 II Reading, Comprehension, and Summarizing: Reading styles, speed 6 reading, critical reading, reading and comprehending shorter and longer technical articles from journals, newspapers, identifying the various transitions in a text. Interpreting data in tables and figures Comprehension: techniques, marking and underlining, Note-taking and note making, recognizing non-verbal cues. III Oral Presentation: Voice modulation, tone, describing a process, 10 Presentation Skills: Oral presentation and public speaking skills, business presentations, Preparation: organizing the material, Self-Introduction, introducing the topic, answering questions, individual presentation practice, presenting visuals effectively. presentations and Technical presentation including Slide presentation Debate and Group Discussions: Difference between GD and debate; brainstorming the topic, questioning and clarifying, GD strategies, activities to improve GD skills IV Listening Skills 5 Listening: Active and Passive listening, listening for general content to fill up information, intensive listening: for specific information, to answer, and to understand. Developing effective listening skills, barriers to effective listening, listening to longer technical talks, listening to classroom lectures, talks on engineering /technology, listening to documentaries and making notes, TED talks. V Interview skills and Formal writing: 11 Interview Skills: types of interviews, successful interviews, interview etiquettes, dress code, body language, telephone/online interviews, one- to-one interview & panel interview, FAQs related to job interviews Formal Writing: Letter Writing (formal, informal and semi formal), Job applications, Minute preparation, CV preparation (differences between Bio-Data, CV and Resume), LinkedIN profile and Digitizing career Portfolio Common Errors in Writing: describing a process, Statement of Purpose, Instructions, Checklists. Analytical and issue-based Essays and Report Writing: basics of report writing; Referencing Style (IEEE Format), structure of a report; types of reports, references, bibliography. Total Hours 36 Lab Activities Written: Letter writing, CV writing, Attending a meeting and Minute Preparation, Vocabulary Building Spoken: Phonetics, MMFS (Multimedia Feedback System), Mirroring, Elevator Pitch, telephone etiquette, qualities of a good presentation with emphasis on body language and use of visual aids. Listening: Exercises based on audio materials like radio and podcasts. Listening to Song practice and exercises. Reading: Speed Reading, reading with the help of Audio Visual Aids, Reading Comprehension Skills Mock interview and Debate/Group Discussion: concepts, types, Do‚Äôs and don‚Äôts- intensive B. Tech in Computer Science and Engineering (AI) 2022-2023 practice. B. Tech in Computer Science and Engineering (AI) 2022-2023 Course Year of Course Name L T P Credit Code Introduction ES0U10H Introduction to Python 2 0 0 2 2022 PRE-REQUISITE: NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objective of the course is to introduce Python programming and develop programming skills to manage the development of software systems. It covers data processing in Python and introduces Machine Learning and Artificial Intelligence- based applications and tools, Data Science and Data Visualization applications. This course enables the learner to develop python programs and lays the foundation to develop Machine Learning and Artificial Intelligence-based applications.",
                    "outcomes": "After the completion of the course the student will be able to: CO 1 Familiarize the fundamental concepts in Python Understand Illustrate uses of conditional statements and iterative Apply CO 2 statements in Python Develop programs by utilizing the modules Lists, Tuples, Apply CO 3 Sets and Dictionaries in Python CO 4 Develop programs by using user defined functions Apply Write programs in Python to process data stored in files by Apply CO 5 utilizing the modules NumPy, Matplotlib, and Pandas",
                    "syllabus": "Introduction to Python and Functions-keywords, identifiers, operators, data types, statement and expression, Type conversion, reading Input, output formatting Control Flow Statements, functions and strings- conditional and Iterative statements, break and continue statements, functions and recursive functions, string methods. Data Structures in Python- list, dictionary, tuple, set. Data Processing, visualization B. Tech in Computer Science and Engineering (AI) 2022-2023 modules in python -NumPy, matplotlib, pandas.",
                    "textbooks": "1) Kenneth A Lambert., Fundamentals of Python: First Programs, 2/e, Cengage Publishing, 2016. 2) Wes McKinney, Python for Data Analysis, 2/e, Shroff / O‚ÄôReilly Publishers,2017",
                    "references": "1) Allen B. Downey, Think Python: How to Think Like a Computer Scientist, 2/e, Schroff, 2016 2) Michael Urban and Joel Murach, Python Programming, Shroff/Murach,2016 3) David M.Baezly, Python Essential Reference. Addison-Wesley Professional; 4/e,2009. 4) Charles Severance. Python for Informatics: Exploring Information, 5) http://swcarpentry.github.io/python-novice-gapminder/",
                    "course_plan": "Mod Conte nts No. of ule hours I Basic coding skills - Working with data types, Numeric data types and Character sets, Keywords, Variables and Assignment statement, Operators, Expressions, Working with numeric data, Type 5 conversions, Comments in the program. Input, Processing, and Output. Formatting output. Detecting and correcting syntax errors. II Control statements - Selection structure (if-else, switch-case). Iteration structure (for, while), Testing the control statements.. Strings and Regular Expressions. 5 B. Tech in Computer Science and Engineering (AI) 2022-2023 III Lists - Basic list Operations and Methods, List of lists, Slicing, Searching and sorting list, List comprehension. Work with tuples. Sets. Work with dates and times. Dictionaries ‚Äì Dictionary Methods, 7 dictionary literals, adding and removing keys, accessing and replacing values, traversing dictionaries. IV Functions - Hiding redundancy and complexity, Arguments and return values, Variable scopes and parameter passing, Named arguments, 6 Main function, Working with recursion, Lambda functions. Strings and number systems - String function, Handling numbers in various formats. V NumPy - Basics, creating arrays, Arithmetic, Slicing, Matrix 7 Operations, Random numbers. Visualization: using Matplotlib - Basic plot, Ticks, Labels, and Legends. Working with CSV files with Pandas - Reading, Manipulating, and Processing Data. 30 Total Hours B. Tech in Computer Science and Engineering (AI) 2022-2023 Course Course Name Category L T P Credit Year of Code Introduction CY0U18A ENGINEERING BSC 0 0 2 1 2022 CHEMISTRY LAB"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course is designed to familiarize with the basic experiments in industrial chemistry and to accustom the students with the handling and analysing chemicals and standard laboratory equipments.",
                    "outcomes": "Not Found",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Not Found"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "‚óè To expose the students to the commonly used accessories and components in electrical installations and to provide hands on experience of wiring of electrical circuits. ‚óè To enable the students to familiarize, identify, construct, and debug the electronic components, devices and circuits. It also enables the students engineering skills by soldering practices of electronic circuits.",
                    "outcomes": "Not Found",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Not Found"
                }
            ]
        },
        "SEMESTER III": {
            "courses": [
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to create awareness in students about the basic terminologies used in advanced courses in Computer Science and develop rigorous logical thinking for solving different kinds of problems in Computer Science. This course helps the learner to apply the theory and applications of elementary Counting Principles, Propositional Logic, Predicate Logic, Lattices, Generating Functions, Recurrence Relations and Algebraic Structures and fundamental concepts in Graph Theory eventually in practical applications. .",
                    "outcomes": "After the completion of the course, the student will be able to: Course Description Learning Outcomes Level Use the truth tables, deductive reasoning and inference theory on Apply CO 1 Propositional Logic check the validity of predicates in Propositional and Quantified Propositional Logic Classify binary relations into various types and Illustrate an Apply CO 2 application for Partially Ordered Sets and Complete Lattices Describe the fundamentals of abstract algebraic systems - Understand CO 3 Semigroups, Monoids, Groups, Homomorphism and Isomorphism of Monoids and Groups Explain vertices and their properties, types of paths, classification Apply CO 4 of graphs, trees, Planar graphs & their properties. Explain the Vertex Color problem in graphs and illustrate an Apply CO 5 example application for vertex coloring",
                    "syllabus": "Mathematical logic - Tautology, Contradiction. Logical Equivalence - The Laws of Logic, The Principle of duality, Logical Implication - Rules of Inference, The use of Quantifiers‚ÄìLogical equivalences and implications for quantified statement, Implications, Negation. Linear recurrence relations with constant coefficients ‚Äì homogeneous, non-homogeneous Solution. Principles of counting. Binary Relation and Functions. - Relations, Equivalence Relations and partitions. Partial Order relations, partially ordered Set - Lattice, Properties of Lattice. Algebraic Systems-Semi group and monoid-cyclic monoid, Homomorphism and Isomorphism. Group- subgroup, symmetric group, The direct product of two groups, Group Homomorphism-Cyclic Group- Right cosets and Lagrange‚Äôs Theorem. Introduction to Graphs, Definition, incidence and degree, sub graphs walks, paths, circuits, Isomorphism, Connectedness, Eulerian and Hamiltonian graphs, Travelling salesman problem, Fleury‚Äôs algorithm B. Tech Computer Science and Engineering (Artificial Intelligence) Matrix representation of graphs, Trees, basic properties of trees, Binary trees, Spanning and Minimal spanning tree, Dijkstra, prims and Kruskal algorithms Connectivity, Cut set and Cut vertices, Fundamental circuits, Planar graphs and their properties, Planarity of graphs, Kurtowski‚Äôs two graphs, Euler‚Äôs formula, Coloring- Chromatic number, Chromatic polynomial, Matchings, Coverings, Four color problem and Five color problem. Greedy colouring algorithm",
                    "textbooks": "1. Discrete and Combinatorial Mathematics (An Applied Introduction), Ralph P Grimaldi, B V Ramana , 5th Edition, Pearson 2. Narsingh Deo, Graph theory, PHI,1979",
                    "references": "1. Kenneth H. Rosen, Discrete Mathematics and Its Applications with Combinatorics and Graph Theory, Seventh Edition, MGH, 2011 2. Trembly J.P and Manohar R, ‚ÄúDiscrete Mathematical Structures with Applications to Computer Science‚Äù, Tata Mc Graw Hill Pub. Co. Ltd., New Delhi, 2003. 3. Bernard Kolman, Robert C. Busby, Sharan Cutler Ross, ‚ÄúDiscrete Mathematical Structures‚Äù, Pearson Education Pvt Ltd., New Delhi, 2003 4. Douglas B. West, Introduction to Graph Theory, Prentice Hall India Ltd.,2001 5. J.A. Bondy and U.S.R. Murty. Graph theory with Applications 6. Robin J. Wilson, Introduction to Graph Theory, Longman Group Ltd.,2010",
                    "course_plan": "No. of Module Contents hours I Mathematical logic, Basic Connectives and Truth Table Statements, Tautology, Contradiction Logical Equivalence, The Laws of Logic, The Principle of duality, Substitution Rules, The implication, The 12 Contrapositive, the Converse , the Inverse. Logical Implication, Rules of Inference,The use of Quantifiers, Open Statement, Quantifier, Negation Linear Recurrence Relations with Constant Coefficients of order one and two-Homogeneous Solution Non homogeneous Solution. Pigeonhole principle, Principle of inclusion and exclusion, derangements. II Binary Relation-Reflexive Relations, Symmetric Relations, Transitive relations, Antisymmetric Relations-Partial Order relations Equivalence Relation, Equivalence Classes Partitions, Irreflexive Relations. Partially ordered Set, Hasse Diagram 12 Maximal-Minimal Element, Least Upper bound, Greatest Lower Bound, Lattice- Dual Lattice, sub lattice , Properties of glb and lub Properties of Lattice , Special Lattice , Complete Lattice,Bounded Lattice, Complemented Lattice, Distributive Lattice III Algebraic Systems-Binary operations on a set and its properties Semi group , Monoid, Sub semigroup and sub monoid Cyclic monoid Homomorphism and Isomorphism of Semigroup, Monoids and 12 Groups, Elementary Properties, Subgroup, Symmetric group on three Symbols .The direct Product of two Groups-Group Homomorphism, Isomorphism, Cyclic group, Right coset, Left coset ,Lagrange‚Äôs Theorem. IV Concepts of Graphs and Trees: Definition, incidence and degree, sub 12 graphs walks, paths, circuits, Isomorphism, Connectedness, Eulerian and B. Tech Computer Science and Engineering (Artificial Intelligence) Hamiltonian graphs, Travelling salesman problem, Fleury‚Äôs algorithm Matrix representation of graphs, adjacency and incidence matrix Trees, basic properties of trees, Binary trees Spanning and Minimal spanning tree Graph theoretical algorithms: Dijkstra, prims and Kruskal V Connectivity and Planar Graphs 12 Vertex Connectivity, Edge Connectivity, Cut set and Cut vertices, Fundamental circuits, Planar graphs and their properties: Planarity of graphs, Kurtowski‚Äôs two graphs, Euler‚Äôs formula, Coloring- Chromatic number, Chromatic polynomial, Matchings, Coverings, Four color problem and Five color problem. Greedy colouring algorithm. Total hours 60 B. Tech Computer Science and Engineering (Artificial Intelligence) Year of Course Categor Credi Course Name L T P Introductio Code y t n CS1U20A Data Structures PCC 3 1 0 4 2020 PRE-REQUISITE: ES0U10E Programming in C"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course aims to introduce the various data structures, their organization and operations. It covers abstract concepts for data organization and manipulation using data structures such as stacks, queues, linked lists, binary trees, heaps and graphs. It helps the learner to apply appropriate data structures and associated algorithms for solving real world problems efficiently.",
                    "outcomes": "After the completion of the course, the student will be able to: Design an algorithm for a computational task and calculate the time/space Apply CO 1 complexities. Identify suitable data structure (array or linked list) to represent a data item Apply required to be processed to solve a given computational problem and write an CO 2 algorithm to find the solution of the computational problem. Design an algorithm to find the solution of a computational problem by Apply selecting an appropriate data structure (binary tree/graph) to represent a data CO 3 item to be processed. Apply appropriate Hash Function to store a given dataset and enable efficient Apply CO 4 access of data in the given set. Make use of appropriate sorting algorithms based on specific circumstances. Apply CO 5",
                    "syllabus": "Introduction: Basic Concepts of Data Structures, Algorithms, Performance Analysis, Asymptotic Notation, Complexity Calculation of Simple Algorithms. Arrays and Searching: Sparse matrix, Stacks and Queues, Linear Search and Binary Search. Linked List and Memory Management: Operations on Linked List, Types of Linked Lists, Stacks and Queues, Memory allocation and deallocation -First-fit, Best-fit and Worst-fit. Trees and Graphs: Binary Trees, Binary Search Trees, Graph Representations, Depth First Search and Breadth First Search, Applications of Graphs. Sorting and Hashing: Selection Sort, Insertion Sort, Quick Sort, Merge Sort and Heap Sort, Hashing Techniques, Collision Resolution, Overflow handling, Hashing functions.",
                    "textbooks": "1) Ellis Horowitz, Sartaj Sahni and Susan Anderson-Freed, Universities Press, Fundamentals of Data Structures in C.",
                    "references": "1) Samanta D., Classic Data Structures, Prentice Hall India. B. Tech Computer Science and Engineering (Artificial Intelligence) 2) Richard F. Gilberg, Behrouz A. Forouzan, Data Structures: A Pseudocode Approach with C, 2/e, Cengage Learning. 3) Aho A. V., J. E. Hopcroft and J. D. Ullman, Data Structures and Algorithms, Pearson Publication. 4) Tremblay J. P. and P. G. Sorenson, Introduction to Data Structures with Applications, Tata McGraw Hill.",
                    "course_plan": "Module Contents No. of hours I Introduction: Basic Concepts of Data Structures, System Life 8 Cycle, Algorithms, Performance Analysis, Space Complexity, Time Complexity, Asymptotic Notation, Complexity Calculation of Simple Algorithms II Arrays and Searching: Polynomial representation using Arrays, 14 Sparse matrix, Stacks, Queues-Circular Queues, Priority Queues, Double Ended Queues, Evaluation of Expressions, Linear Search and Binary Search III Linked List and Memory Management: Self-Referential 14 Structures, Dynamic Memory Allocation, Operations on Linked List-Singly Linked List, Doubly Linked List, Circular Linked List. Stacks and Queues using Linked List, Polynomial representation using Linked List, Memory allocation and deallocation-First-fit, Best-fit and Worst-fit allocation schemes IV Trees and Graphs: Trees, Binary Trees-Tree Operations, Binary 14 Tree Representation, Tree Traversals, Binary Search Trees- Binary Search Tree Operations, Graphs, Representation of Graphs, Depth First Search and Breadth First Search on Graphs, Applications of Graphs V Sorting and Hashing: Sorting Techniques ‚Äì Selection Sort, 10 Insertion Sort, Quick Sort, Merge Sort and Heap Sort, Hashing- Hashing Techniques, Collision Resolution, Overflow handling, Hashing functions ‚Äì Mid square, Division, Folding, Digit Analysis Total hours 60 B. Tech Computer Science and Engineering (Artificial Intelligence) Course Credi Year of Course Name Category L T P Code t Introduction CS1U20B Logic System Design PCC 3 1 0 4 2020 PRE-REQUISITE: NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The goal of this course is to impart an understanding of the basic concepts of Boolean algebra and digital systems. This course covers the design and implementation of different types of practically used combinational and sequential circuits. This course helps the learners to develop application level digital logic circuits to solve real life problems.",
                    "outcomes": "After the completion of the course, the student will be able to: Illustrate decimal, binary, octal, hexadecimal and BCD number systems, Understand CO 1 perform conversions among them and do the operations - complementation, addition, subtraction, multiplication and division on binary numbers . Simplify a given Boolean Function and design a combinational circuit to Apply CO 2 implement the simplified function using Digital Logic Gates. Design combinational circuits - Adders, Code Converters, Decoders, Apply CO 3 Magnitude Comparators, Parity Generator/Checker and design the Programmable Logic Devices -ROM and PLA. Design sequential circuits - Registers, Counters and Shift Registers. Apply CO 4 Illustrate algorithms to perform addition and subtraction on binary, BCD Understand CO 5 and floating point numbers.",
                    "syllabus": "Number systems, Operations & Codes: Various Number systems - its arithmetic operation - Number Base Conversions- Representation of negative numbers-BCD Arithmetic-Binary codes- character coding schemes. Boolean Algebra: Postulates- Basic theorems and properties of Boolean Algebra-Boolean Functions- Simplification of Boolean Functions-Don't care Conditions-Digital Logic Gates Combinational Logic circuits: Design procedure & Implementation of Binary Adders and Subtractors- BCD Adder-Code Converter-Comparator-Decoder/Encoder-Demux /Mux-Parity Generator/Checker. Sequential logic circuits: Flip-flops- Triggering of flip-flops- Master Slave flip- flops - Excitation table and Characteristic Equation-Counter Design: Asynchronous & Synchronous Counters. Shift registers: Shift register, Ring Counter- Johnson Counter Arithmetic algorithms: Algorithms for arithmetic operations on Negative Numbers-BCD-Floating Point Numbers-Programmable Logic Devices: ROM-Implementation of PLA.",
                    "textbooks": "1) M. Morris Mano, Digital Logic & Computer Design, 4/e, Pearson Education, 2013 B. Tech Computer Science and Engineering (Artificial Intelligence) 2) Thomas L Floyd, Digital Fundamentals, 10/e, Pearson Education, 2009. 3) M. Morris Mano, Computer System Architecture, 3/e, Pearson Education, 2007.",
                    "references": "1) M. Morris Mano, Michael D Ciletti , Digital Design With An Introduction to the Verilog HDL, 5/e, Pearson Education, 2013. 2)Donald D Givone, Digital Principles and Design, Tata McGraw Hill, 2003.",
                    "course_plan": "Module Contents No. of hours I Number systems, Operations & Codes 12 Decimal, Binary, Octal and Hexadecimal Number Systems- Number Base Conversions. Addition, Subtraction, Multiplication and Division of binary numbers. Representation of negative numbers- Complements, Subtraction with complements. Addition and subtraction of BCD, Octal and Hexadecimal numbers. Binary codes- Decimal codes, Error detection codes, Reflected code, Character coding schemes ‚Äì ASCII, EBCDIC. II Boolean Algebra 12 Postulates of Boolean Algebra. Basic theorems and Properties of Boolean Algebra. Boolean Functions - Canonical and Standard forms. Simplification of Boolean Functions- Using Karnaugh- Map Method (upto five variables), Don‚Äôt care conditions, Product of sums simplification, Tabulation Method. Digital Logic Gates- Implementation of Boolean functions using basic and universal gates. III Combinational Logic Circuits 12 Design Procedure & Implementation of combinational logic circuits- Binary adders and subtractors, Binary Parallel adder, Carry look ahead adder, BCD adder, Code converter, Magnitude comparator, Decoder, DE multiplexer, Encoder, Multiplexer, Parity generator/ Checker IV Sequential logic circuits 12 Flip-flops- SR, JK, T and D. Triggering of flip-flops- Master slave flip- flops, Edge- triggered flip- flops. Excitation table and characteristic equation. Registers- register with parallel load. Counter design: Asynchronous counters- Binary and BCD counters, timing sequences and state diagrams. Synchronous counters- Binary Up- down counter, BCD counter. V Shift registers 12 Shift registers ‚Äì Serial In Serial Out, Serial In Parallel Out, Bidirectional Shift Register with Parallel load. Ring counter. Johnson counter- timing sequences and state diagrams. Arithmetic algorithms Algorithms for addition and subtraction of binary numbers in signed magnitude and 2‚Äôs complement representations. Algorithm for addition and subtraction of BCD numbers. Representation of floating point numbers, Algorithm for addition and subtraction of floating point numbers. Programmable Logic devices ROM. Programmable Logic Array(PLA)- Implementation of simple circuits using PLA. Total hours 60 B. Tech Computer Science and Engineering (Artificial Intelligence) Course Year of Course Name L T P Cre Code Introduction dit CS2U20A Object oriented 3 1 0 4 2022 Programming using Python PREREQUISITE: ES0U10H INTRODUCTION TO PYTHON"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "Aim of the course is to introduce Object oriented concepts in programming. The course covers Object Oriented Principles, Object Oriented Programming in Python, Inheritance, Exception handling, Event handling, multithreaded programming and working with window-based graphics. The course will enable learners to solve problems by breaking it down to object level while designing software and to implement it using Python.",
                    "outcomes": "After the completion of the course the student will be able to: Apply CO1 Construct Object Oriented Design using Unified Modelling Language (UML) Apply CO2 Apply the object-oriented concepts - classes, objects, constructors, inheritance, and polymorphism to write python programs. CO3 Apply Utilize packages, modules, files, and exception handling mechanism to develop programs Apply CO4 Utilize multithreading and database connectivity to develop Python applications. Apply CO5 Apply event driven programming and tkinter to develop Graphical User Interface based python application programs.",
                    "syllabus": "Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. Object Oriented Programming in Python - Class Fundamentals, Constructors, Method Overloading, Access Control, Inheritance - Method Overriding, Accessors and Mutators. Modules and Packages, Exception Handling, Input/ Output - Reading Console Input, Writing B. Tech Computer Science and Engineering (Artificial Intelligence) Console Output. Working with Files. Multithreaded Programming. tkinter fundamentals - Model View Controller (MVC), Event Handling in tkinter, Exploring tkinter, Database Connectivity in Python.",
                    "textbooks": "1) Blaha, ‚ÄúObject - Oriented Modeling and Design With Uml‚Äù, 2/E, Pearson Education,2nd Edition,2007 2) Python Object Oriented Programming, Steven F Lott, Dusty Phillips, 4/e, Packt Publishing, June 2021 3) Michael H. Goldwasser, David Letscher, ‚ÄúObject Oriented Programming in Python,‚Äù Prentice Hall, 1st Edition, 2007. 4) Mark Lutz ‚ÄúProgramming Python,‚Äù O‚ÄôReilly 4th Edition,2010",
                    "references": "1) Kenneth A Lambert., Fundamentals of Python: First Programs2/e, Cengage Publishing, 2016 2) Allen B. Downey, Think Python: How to Think Like a Computer Scientist, 2/e, Schroff, 2016",
                    "course_plan": "Module Contents No. of hours 10 I Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML), UML diagrams, Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. Case study. Introduction to Object Oriented concepts ‚Äì Classes, Objects, Abstraction, Encapsulation, Inheritance, Polymorphism. 14 II Object Oriented Programming in Python - Class Fundamentals, Class attributes, Class decorators, Declaring Objects, Instance attributes, Introduction to Methods, static methods, Constructors, Using Objects as Parameters, Returning Objects, Recursion, Access Control, Accessors and Mutators, Inner Classes. Inheritance, Avoiding Inheritance, Calling Order of Constructors, Method Overloading, Operator Overloading, Method Overriding, Overriding magic methods, Abstract Classes, and Methods. 14 III More features of Python: Modules & Packages- Defining Package, Modular Programming, Importing Packages, Python PIP Packages, Date and Time package. Mathematical functions: math, Python sys, os modules Exception Handling- Errors in Python Program, Types of B. Tech Computer Science and Engineering (Artificial Intelligence) Exceptions, Try and Except Statement- Catching Exceptions, Multiple catch Clauses, nested try Statements, Exception hierarchy, user defined exceptions, finally. Assertions in Python, Try with Else Clause. Input/ Output - command-line parameters, File handling in Python. 8 IV Multithreaded Programming - The Python Thread Model, The Main Thread, Creating Thread, Creating Multiple Threads, Synchronization, Suspending, Resuming and Stopping Threads. 14 V Graphical User Interfaces ‚Äì Event-driven programming, Coding simple GUI-based programs: Canvas, Labels, displaying images, Input text entry, Popup dialog boxes, Command buttons, tkinter fundamentals - tkinter Key Features, Model View Controller (MVC), tkinter Packages, Event Handling in tkinter, exploring tkinter ‚ÄìWidgets- Basic Widgets, Top level Widgets, Geometry Management, Binding Functions Working with Images in Tkinter. Database connectivity in Python. -Creating and Executing Queries ‚Äì create table, delete, insert, select. Total hours: 60 B. Tech Computer Science and Engineering (Artificial Intelligence) Course Year of Course Name Category L T P Credit Code Introduction HS0U20A Professional Ethics HSC 2 0 0 2 2020"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "To enable students to create awareness on ethics and human values.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Infer the core values that shape the ethical behaviour of a Understand professional. CO 2 Apply philosophical concepts discussed in the course to personal Apply and contemporary issues. Explain the role and responsibility of engineer in technological Understand CO 3 development without compromising personal ethics and legal ethics. Solve moral and ethical problems through exploration and Apply CO 4 assessment by established experiments. Demonstrate the concept of Corporate Social Responsibility, and Understand CO 5 explore its relevance to ethical business activity. Apply the knowledge of human values and social values to Apply CO 6 contemporary ethical values and global issues.",
                    "syllabus": "Morals, values and Ethics ‚Äì Integrity- Academic Integrity-Work Ethics- Service Learning- Civic Virtue- Respect for others- Living peacefully- Caring and Sharing- Honestly- Courage-Cooperation commitment- Empathy-Self Confidence -Social Expectations. Senses of Engineering Ethics - Variety of moral issues- Types of inquiry- Moral dilemmas ‚ÄìMoral Autonomy ‚Äì Kohlberg‚Äôs theory- Gilligan‚Äôs theory- Consensus and Controversy-Profession and Professionalism- Models of professional Roles-Theories about right action ‚ÄìSelf-Interest-Customs and Religion- Uses of Ethical Theories. Engineering as Experimentation ‚Äì Engineers as responsible Experimenters- Codes of Ethics- Plagiarism- A balanced outlook on law - Challenges case study- Bhopal gas tragedy. Collegiality and loyalty ‚Äì Managing conflict- Respect for authority- Collective bargaining- Confidentiality- Role of confidentiality in moral Integrity-Conflicts of interest- Occupational crime- Professional rights- Employee right- IPR Discrimination. Multinational Corporations- Environmental Ethics- Business Ethics- Computer Ethics -Role in Technological Development-Engineers as Managers- Consulting Engineers- Engineers as Expert witnesses and Advisors-Moral leadership.",
                    "textbooks": "1. M Govindarajan, S Natarajan and V S Senthil Kumar, Engineering Ethics, PHI Learning Private Ltd, New Delhi, 2012. 2. R S Naagarazan, A text book on professional ethics and human values, New age international (P) limited, New Delhi, 2006. B. Tech Computer Science and Engineering (Artificial Intelligence)",
                    "references": "1. Mike W Martin and Roland Schinzinger, Ethics in Engineering,4th edition, Tata McGraw Hill Publishing Company Pvt Ltd, New Delhi,2014. 2. Charles D Fledder mann, Engineering Ethics, Pearson Education/ Prentice Hall of India, New Jersey,2004. 3. Charles E Harris, Michael S Protchard and Michael J Rabins, Engineering Ethics- Concepts and cases, Wadsworth Thompson Learning, United states,2005. 4. http://www.slideword.org/slidestag.aspx/human-values-and-Professional-ethics.",
                    "course_plan": "No. of Module Contents hours Morals, values and Ethics, Integrity, Academic Integrity, Work Ethics I Service Learning, Civic Virtue, Respect for others, Living peacefully Caring and Sharing, Honesty, Courage, Co-operation commitment Empathy, Self Confidence, Social Expectations 6 Senses of Engineering Ethics, Variety of moral issues, Types of Inquiry-Moral II dilemmas, Moral Autonomy, Kohlberg‚Äôs theory Gilligan‚Äôs theory, Consensus and Controversy, Profession& Professionalism, Models of professional roles, Theories about right action- 6 Self-Interest-Customs and Religion, Uses of Ethical Theories Engineering as Experimentation, Engineers as responsible Experimenters- III 6 Codes of Ethics, Plagiarism, A balanced outlook on law-Challenger case study, Bhopal gas tragedy Collegiality and loyalty, Managing conflict, Respect for authority IV Collective bargaining, Confidentiality, Role of confidentiality in moral integrity, Conflicts of interest-Occupational crime, Professional rights, 6 Employee right, IPR, Discrimination Multinational Corporations, Environmental Ethics, Business Ethics, V Computer Ethics-Role in Technological Development, Moral leadership- Engineers as Managers, Consulting Engineers, Engineers as Expert witnesses and advisors 6 30 B. Tech Computer Science and Engineering (Artificial Intelligence) Categor Credi Year of Course Code Course Name L T P y t Introduction CONSTITUTION OF NC0U20B MNC 2 0 0 --- 2020 INDIA PREAMBLE: The study of the Constitution of India enables the students to 1) Understand the fundamental rights & duties and directive principles 2) Understand the functions of Executive, Legislature and Judiciary of the Union and the States 3) Understand the relation between the Union and the States 4) Provides the student the knowledge and strength to face the society and people. PREREQUISITE: Nil COURSE OUTCOMES: After the completion of the course, the student will be able to: Explain the historic background of the constitution of India and its CO 1 Understand features. Describe the fundamental rights, duties and directive principles of CO 2 Understand state policy. Discuss the machinery of executive, legislature and judiciary of the CO 3 Understand Union and the States. CO4 Explain the relation between the Union and the States. Understand Demonstrate national and patriotic spirit as responsible citizens of the CO 5 Apply country. SYLLABUS Constitution of India: Definition, historical background, features, preamble, territory, citizenship. State, fundamental rights, directive Principles, fundamental duties. The machinery of the union government, machinery of the state governments. Statutory institutions, miscellaneous provisions, amendments to constitution. TEXT BOOKS 1. M. Laxmikanth, Indian Polity, McGraw Hill Education India, 6/e, 2019. 2. D. D. Basu, Introduction to the Constitution of India, Lexis Nexis, New Delhi, 24/e, 2019. 3. P. M. Bhakshi, The Constitution of India, Universal Law, 14/e, 2017. REFERENCES 1. Ministry of Law and Justice, The Constitution of India, Govt. of India, New Delhi, 2019. 2. J. N. Pandey, The Constitutional Law of India, Central Law agency, Allahabad, 51/e, 2019. 3. M. V.Pylee, India‚Äôs Constitution, S. Chand and Company, New Delhi, 16/e, 2016. B. Tech Computer Science and Engineering (Artificial Intelligence) COURSE PLAN No. of Module Contents hours Definition of constitution, historical back ground, salient features of I the constitution. Preamble of the constitution, union and its 4 territory. Meaning of citizenship, types, termination of citizenship. Definition of state, fundamental rights, general nature, classification, right to equality, right to freedom, right against exploitation. Right to freedom of religion, cultural and educational II 7 rights, right to constitutional remedies. Protection in respect of conviction for offences. Directive principles of state policy, classification of directives, fundamental duties. The Union Executive, the President, the Vice President, the Council of Ministers, the Prime Minister, Attorney-General, functions. The III parliament, composition, Rajyasabha, Loksabha, qualification and 7 disqualification of membership, functions of parliament. Union judiciary, the supreme court, jurisdiction, appeal by special leave. The State executive, the Governor, the council of ministers, the Chief minister, advocate general, union Territories. The State IV Legislature, composition, qualification and disqualification of 6 membership, functions. The state judiciary, the high court, jurisdiction, writs jurisdiction. Relations between the Union and the States, legislative relation, administrative relation, financial Relations, Inter State council, finance commission. Emergency provision, freedom of trade V commerce and inter course, comptroller and auditor general of India, 6 public Services, public service commission, administrative Tribunals. Official language, elections, special provisions relating to certain classes, amendments to constitution. Total hours 30 B. Tech Computer Science and Engineering (Artificial Intelligence) Course Categor Credi Year of Course Name L T P Code y t Introduction CS1U28A Data Structures Lab PCC 0 0 3 2 2020 PRE-REQUISITE: ES0U10E Programming in C"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of this course is to give hands-on experience in creating and using different Data Structures. It also covers various applications of linear and nonlinear Data Structures. This course helps the learners to select appropriate data structures to solve computational problems.",
                    "outcomes": "After the completion of the course, the student will be able to: Implement different data structures like stacks, queues, linked lists, Apply CO 1 trees and graphs efficiently. Apply CO 2 Apply appropriate data structures to solve problems efficiently. Apply CO 3 Design an efficient program to search/sort a list of records. Apply CO 4 Implement different hashing techniques.",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Experiment List of Exercises No. of hours No. Implementation of different searching techniques. I 3 B. Tech Computer Science and Engineering (Artificial Intelligence) Implementation of stack, queue and their applications. II 9 III Implementation of linked lists and its applications. 9 IV Implementation of trees and its applications. 9 V 3 Implementation of graph traversals. Implementation of different sorting techniques. VI 6 VII Implementing different hashing techniques. 6 Total hours 45 B. Tech Computer Science and Engineering (Artificial Intelligence) Course Year of Course Name L T P Credi Code Introduction t CS2U28A Object oriented 0 0 3 2 2022 Programming Lab (in Python) PREREQUISITE: ES0U10H : Introduction to Python"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of the course is to provide hands-on experience to the learners on various object oriented concepts in Python Programming. The course covers implementation of object oriented concepts, packages, exception handling, GUI based application development and database connectivity. This course helps the learners to enhance the capability to design and implement various Python applications for real world problems.",
                    "outcomes": "After the completion of the course the student will be able to: CO 1 Implement programs in Python which use data Apply types, operators, control statements, functions, lists and dictionaries Implement the Object-Oriented Apply CO 2 concepts - inheritance, polymorphism in Python Implement robust application programs in Apply CO 3 Python using exception handling and Files. CO 4 Implement application programs in Python using Apply multithreading .. Implement Graphical User Interface based Apply CO 5 application programs by utilizing event handling features and tkinter in Python.",
                    "syllabus": "Classes-Objects, Constructors, Data Types, Operators, Control statements, Polymorphism, I/O, File operations, Multithreading, Exception Handling, GUI based application programs-tkinter, Database Connectivity.",
                    "textbooks": "1) Kenneth A Lambert., Fundamentals of Python: First Programs, 2/e, Cengage Publishing, 2016 2) Wes McKinney, Python for Data Analysis, 2/e, Shroff / O‚ÄôReilly B. Tech Computer Science and Engineering (Artificial Intelligence) Publishers,2017",
                    "references": "1) Allen B. Downey, Think Python: How to Think Like a Computer Scientist, 2/e, Schroff, 2016 2) Michael Urban and Joel Murach, Python Programming, Shroff/Murach,2016 3) David M. Baezly, Python Essential Reference. Addison-Wesley Professional; 4/e,2009. 4) Charles Severance. Python for Informatics: Exploring Information, 5) http://swcarpentry.github.io/python-novice-gapminder",
                    "course_plan": "Sl .No. Topics No. of hours I Basic programs using data structures, operators, 6 and control statements and functions II Program to implement object oriented concepts. 9 III Program using File Handling & Exception 6 handling. IV Program using multi-threading applications 9 V Graphical user Interface using tkinter 9 VI Miniproject 6 Total hours:45 B. Tech Computer Science and Engineering (Artificial Intelligence)"
                }
            ]
        },
        "SEMESTER IV": {
            "courses": [
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to introduce mathematical foundations of basic Machine Learning concepts among learners, on which Machine Learning systems are built. This course covers Linear Algebra, Vector Calculus, Probability, Optimization and Machine Learning problems. Concepts in this course help the learners to understand the mathematical principles in Machine Learning and aid in the creation of new Machine Learning solutions, understand and debug existing ones, and learn about the inherent assumptions and limitations of the current methodologies.",
                    "outcomes": "After the completion of the course the student will be able to: Make use of the concepts, rules and results about linear equations, matrix Apply CO 1 algebra, vector spaces, eigenvalues and eigenvectors to solve computational problems Apply concepts of orthogonality and matrix decompositions to solve Apply CO2 Engineering problems Perform calculus operations on functions of several variables and Apply CO 3 matrices, including partial derivatives and gradients Utilize the concepts, rules and results about probability and Bayes‚Äô Apply CO 4 theorem to find solutions of computational problems Use unconstrained and constrained optimization methods in machine Apply CO 5 learning problems",
                    "syllabus": "Systems of Linear Equations, vector spaces, Linear mappings, Orthogonality, Matrix Decompositions: Norms, Eigen decomposition and Diagonalization, Singular Value Decomposition, differentiation of Univariate Functions, Useful Identities for Computing Gradients, Concepts of probability, Baye‚Äôs theorem, correlation, Independence, Optimization Using Gradient Descent, Constrained Optimization and Lagrange Multipliers.",
                    "textbooks": "1) Mathematics for Machine Learning by Marc Peter Deisenroth, A. Aldo Faisal, and Cheng Soon Ong published by Cambridge University Press (freely available at https://mml - book.github.io)",
                    "references": "1) Linear Algebra and Its Applications, 4th Edition by Gilbert Strang 2) Linear Algebra Done Right by Axler, Sheldon, 2015 published by Springer 3) Introduction to Applied Linear Algebra by Stephen Boyd and Lieven Vandenberghe, 2018 published by Cambridge University Press B. Tech Computer Science and Engineering (Artificial Intelligence)",
                    "course_plan": "Module Contents No. of hours LINEAR ALGEBRA: Systems of Linear Equations ‚Äì Matrices, Solving Systems of Linear Equations. Vector Spaces I ‚ÄìVector Spaces, Linear Independence, Basis and Rank. Linear 14 Mappings ‚Äì Matrix Representation of Linear Mappings, Basis Change, Image and Kernel. ORTHOGONALITY and MATRIX DECOMPOSITIONS: Norms, Inner Products, Lengths and Distances, Angles and Orthogonality, Orthonormal Basis, Orthogonal Complement, Orthogonal Projections ‚Äì Projection II into One Dimensional Subspaces, Projection onto General 14 Subspaces, Gram-Schmidt Orthogonalization. Determinant and Trace, Eigenvalues and Eigenvectors, Cholesky Decomposition, Eigen decomposition and Diagonalization, Singular Value Decomposition. VECTOR CALCULUS: Differentiation of Univariate Functions - Partial Differentiation and Gradients, Gradients of Vector Valued Functions, Gradients of Matrices, Useful III Identities for Computing Gradients. Back propagation and 10 Automatic Differentiation ‚Äì Gradients in Deep Network, Automatic Differentiation. Higher Order Derivatives Linearization and Multivariate Taylor Series. Probability and Distributions: Construction of a Probability Space - Discrete and Continuous Probabilities, Sum Rule, Product Rule, Conditional probability and Bayes‚Äô Theorem. IV 12 Summary Statistics and Independence ‚Äì Gaussian Distribution ‚ÄìLinear Correlation-Curve fitting-Co variance matrix- independence. Optimization : Optimization Using Gradient Descent - Gradient Descent With Momentum, Stochastic Gradient V 10 Descent. Constrained Optimization and Lagrange Multipliers - Convex Optimization - Linear Programming Total hours (Approx.) 60 Course Year of Course Name Category L T P Credit Code Introduction Computer Organization & CS1U20D PCC 3 1 0 4 2020 Architecture PRE-REQUISITE: CS1U20B Logic System Design"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of this course is to enable students to understand the fundamental architecture of a digital computer. Study of Computer Organization and Architecture is essential to understand the hardware behind the code and its execution at physical level by interacting with existing memory and I/O structure. It helps the learners to understand the fundamentals about computer system design so that they can extend the features of computer organization to detect and solve problems occurring in computer architecture.",
                    "outcomes": "After the completion of the course, the student will be able to: Recognize and express the relevance of basic components, I/O Understand CO 1 organization and pipelining schemes in a digital computer. Explain the types of memory systems and mapping functions used Understand CO 2 in memory systems. Demonstrate the control signals required for the execution of a given Understand CO 3 instruction. Illustrate the design of Arithmetic Logic Unit and explain the usage Apply CO 4 of registers in it. Explain the implementation aspects of arithmetic algorithms in a Apply CO 5 digital computer. Apply CO 6 Develop the control logic for a given arithmetic problem.",
                    "syllabus": "Fundamental building blocks and functional units of a computer. Memory locations and addresses. Execution phases of an instruction. Register transfer logic: inter register transfer ‚Äì arithmetic, logic and shift micro operations. Processor logic design: - Design of arithmetic circuit, logic circuit, arithmetic logic unit, shifter, accumulator. Arithmetic Algorithms. Pipelining: Basic principles, classification of pipeline processors, instruction and arithmetic pipelines, hazard detection and resolution. Design of the processing unit ‚Äì how arithmetic and logic operations are performed. Design of the control unit ‚Äì hardwired and microprogrammed control. I/O organisation ‚Äì interrupts, DMA, different interface standards. Memory Subsystem ‚Äì different types. Virtual Lab using simulation software",
                    "textbooks": "1) Hamacher C., Z. Vranesic and S. Zaky, Computer Organization ,5/e, McGraw Hill, 2011 2) M. Morris Mano, Digital Logic & Computer Design, 4/e, Pearson Education, 2013 3) M. Morris Mano, Computer System Architecture, 3/e, Pearson Education, 2007.",
                    "references": "1) Patterson D.A. and J. L. Hennessy, Computer Organization and Design, 5/e, Morgan Kaufmann Publishers, 2013. 2) William Stallings, Computer Organization and Architecture: Designing for Performance, Pearson, 9/e, 2013.",
                    "course_plan": "Module Contents No. of hours I Basic Structure of computers ‚Äì functional units - basic operational concepts - 12 bus structures. Memory locations and addresses - memory operations, Instructions and instruction sequencing, addressing modes. Basic processing unit ‚Äì fundamental concepts ‚Äì instruction cycle ‚Äì execution of a complete instruction - single bus and multiple bus organization II Register transfer logic: inter register transfer ‚Äì arithmetic, logic and shift micro 12 operations. Processor logic design: - processor organization ‚Äì Arithmetic logic unit - design of arithmetic circuit - design of logic circuit - Design of arithmetic logic unit - status register ‚Äì design of shifter - processor unit ‚Äì design of accumulator. III Arithmetic algorithms: Algorithms for multiplication and division (restoring 12 method) of binary numbers. Array multiplier, Booth‚Äôs multiplication algorithm. Pipelining: Basic principles, classification of pipeline processors, instruction and arithmetic pipelines (Design examples not required), hazard detection and resolution. IV Control Logic Design: Control organization ‚Äì Hardwired control- 11 microprogram control ‚Äìcontrol of processor unit - Microprogram sequencer, micro programmed CPU organization -horizontal and vertical micro instructions. V I/O organization: accessing of I/O devices ‚Äì interrupts, interrupt hardware - 13 Direct memory access. Memory system: basic concepts ‚Äì semiconductor RAMs. memory system considerations ‚ÄìROMs, Content addressable memory, cache memories - mapping functions. Virtual Lab using simulation software: Design of ALU, Memory, CPU Total hours 60 Course Course Name Category L T P Credi Year of Code t Introduction CS1U20E Database Management PCC 3 1 0 4 2020 Systems PRE-REQUISITE: MA0U20B Discrete Mathematical Structures"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course provides a clear understanding of fundamental principles of Database Management Systems with special focus on relational databases to the learners. The topics covered in this course are basic concepts of DBMS in Entity Relationship (ER) model, Relational Database principles, Transaction Processing Concepts and also gives a glimpse of the alternative data management model, NoSQL. This course helps the learners to manage data efficiently by identifying suitable structures to maintain data assets of organizations and to develop applications that utilize database technologies.",
                    "outcomes": "After the completion of the course, the student will be able to: Summarize and exemplify fundamental nature and characteristics of Understand CO 1 database systems. Model real world scenarios given as informal descriptions, using Entity Understand CO 2 Relationship diagrams. Model and design solutions for efficiently representing and querying data Apply CO 3 using relational model. Demonstrate the features of indexing and hashing in database Understand CO 4 applications. Discuss and compare the aspects of Concurrency Control and Recovery Understand CO 5 in Database systems. Explain various types of NoSQL databases. Understand CO 6",
                    "syllabus": "Types of data, database and DBMS, Languages and users. Software Architecture, E-R Modelling, Relational Model ‚Äì concepts and languages, relational algebra SQL, views, assertions and triggers, relational database design, Functional Dependency and normal forms, Secondary storage organization, Hashing, indexing, query optimization, concurrent transaction processing and recovery principles, Introduction to NoSQL.",
                    "textbooks": "1) Elmasri R. and S. Navathe, Database Systems: Models, Languages, Design and Application Programming, Pearson Education, 2013. 2) Sliberschatz A., H. F. Korth and S. Sudarshan, Database System Concepts, 6/e, McGraw Hill, 2011.",
                    "references": "1) Adam Fowler, NoSQL for Dummies, John Wiley & Sons, 2015. 2) NoSQL Data Models: Trends and Challenges (Computer Engineering: Databases and Big Data), Wiley, 2018. 3) Web Resource: https://www.w3resource.com/redis/ 4) Web Resource: https://www.w3schools.in/category/mongodb/ 5) Web Resource: https://www.tutorialspoint.com/cassandra/cassandra_introduction.htm 6) Web Resource: https://www.tutorialspoint.com/arangodb/index.htm",
                    "course_plan": "Module Contents No. of hours I Introduction to Database and Entity Relationship (ER) Model 12 Concept & Overview of Database Management Systems (DBMS) - Characteristics of Database system, Database Users, structured, semi- structured and unstructured data. Data Models and Schema - Three Schema architecture. Database Languages, Database architectures and classification. ER model - Basic concepts, entity set & attributes, notations, Relationships and constraints, cardinality, participation, notations, weak entities, relationships of degree 3. II Relational Model 12 Structure of Relational Databases - Integrity Constraints, Synthesizing ER diagram to relational schema Introduction to Relational Algebra - select, project, Cartesian product operations, join - Equi-join, natural join. query examples, introduction to Structured Query Language (SQL), Data Definition Language (DDL), Table definitions and operations ‚Äì CREATE, DROP, ALTER, INSERT, DELETE, UPDATE. III SQL and Physical Data Organization 12 SQL DML (Data Manipulation Language) - SQL queries on single and multiple tables, Nested queries (correlated and non-correlated), Aggregation and grouping, Views, assertions, Triggers, SQL data types. Physical Data Organization - Review of terms: physical and logical records, blocking factor, pinned and unpinned organization. Heap files, Indexing, Single level indices, numerical examples, Multi-level-indices, numerical examples, B-Trees & B+-Trees (structure only, algorithms not required), Extendible Hashing, Indexing on multiple keys ‚Äì grid files. IV Normalization 12 Different anomalies in designing a database, The idea of normalization, Functional dependency, Armstrong‚Äôs Axioms (proofs not required), Closures and their computation, Equivalence of Functional Dependencies (FD), Minimal Cover (proofs not required). First Normal Form (1NF), Second Normal Form (2NF), Third Normal Form (3NF), Boyce Code Normal Form (BCNF), Lossless join and dependency preserving decomposition, Algorithms for checking Lossless Join (LJ) and Dependency Preserving (DP) properties. V Transactions, Concurrency Control, Recovery and Recent Topics 12 Transaction Processing Concepts - overview of concurrency control, Transaction Model, Significance of concurrency Control & Recovery, Transaction States, System Log, Desirable Properties of transactions. Serial schedules, Concurrent and Serializable Schedules, Conflict equivalence and conflict serializability, Recoverable and cascadeless schedules, Locking, Two-phase locking and its variations. Log-based recovery, Deferred database modification, check-pointing. Introduction to NoSQL Databases, Main characteristics of Key-value DB (examples from: Redis), Document DB (examples from: MongoDB) , Main characteristics of Column - Family DB (examples from: Cassandra) and Graph DB (examples from : ArangoDB) Total hours 60 Course Year of Course Name Category L T P Credit Code Introduction CS2U20B Introduction to Artificial PCC 3 1 0 4 2022 Intelligence"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The course aims to introduce the fundamental principles of intelligent systems to students. This involves ideas about the characteristics of intelligent systems, knowledge representation schemes, logic and inference mechanisms. The course helps the learner to understand the design of self learning systems along with some of their typical applications in the emerging scenario where the business world is being transformed by the progress made in machine learning. PRE-REQUISITE: NIL",
                    "outcomes": ": After the completion of the course the student will be able to Explain the fundamental concepts of intelligent systems and their Understand CO 1 architecture. Illustrate uninformed and informed search techniques for problem Understand CO 2 solving in intelligent systems. Apply CO 3 Solve Constraint Satisfaction Problems using search techniques. Apply CO 4 Represent AI domain knowledge using logic systems and use inference techniques for reasoning in intelligent systems. Illustrate different types of learning techniques used in intelligent Apply CO 5 systems",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "1. Nilsson N.J., Artificial Intelligence - A New Synthesis, Harcourt Asia Pvt. Ltd.",
                    "course_plan": "No. of Module Contents hours Introduction, What is Artificial Intelligence(AI)?, The foundations of AI, The history of AI, Applications of AI, Intelligent Agents ‚Äì Agents and Environments, I Good behavior: The concept of rationality, The nature of Environments- - 9 Specifying the task environment, The structure of Agents - Agent programs, Basic kinds of agent programs Solving Problems by searching-Problem solving Agents, Illustration of the problem solving process by agents, Searching for solutions, Uninformed search strategies: BFS, Uniform-cost search, DFS, Depth- limited search, Iterative deepening depth-first search, II 7 Informed search strategies: Best First search, Informed search strategies: A* Search, Heuristic functions Adversarial search ‚Äì Games, Optimal decisions in games, The Minimax algorithm, Alpha-Beta pruning, Constraint Satisfaction Problems ‚Äì Defining CSP, Example Problem formulations, Constraint Propagation- inference in III 8 CSPs, Backtracking search for CSPs, The structure of problems Logical Agents ‚Äì Knowledge based agents and logic, Propositional Logic, Propositional Theorem proving, Agents based on Propositional Logic, First Order Predicate Logic ‚Äì Syntax and Semantics of First Order Logic, Using First Order Logic, Knowledge representation in First Order Logic, Inference in First Order Logic ‚Äì Propositional Vs First Order inference, IV 12 Unification and Lifting, Forward chaining, Backward chaining, Resolution, Classical Planning, Algorithms for planning state space search, Planning Graphs . Learning from Examples ‚Äì Forms of Learning, Supervised Learning, Learning Decision Trees- The decision tree representation, Inducing decision trees from examples, Choosing attribute tests, Generaliztion and V overfitting, Evaluating and choosing the best hypothesis, Regression and 8 classification with Linear models. Course Year of Course Name Category L T P Credit Code Introduction DESIGN AND ES0U20A ESC 2 0 0 2 2020 ENGINEERING PRE-REQUISITE: Nil. Its generic to all engineering disciplines."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "Goal of this course is to expose the students to the fundamental principles of design engineering. Students are expected to apply design thinking in learning, which is very important and relevant for today. The course also focuses on familiarizing the students with the aesthetics, ergonomics and sustainability factors in designs and practice professional ethics while designing.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Demonstrate the different stages involved in design engineering process Understand CO 2 Compose a problem statement with design objectives taking into account the Create customer requirements, design constraints and functionality. CO 3 Develop innovative solutions to the Design problem through brainstorming Apply and ideation. CO 4 Identify the concepts of Biomimicry, Aesthetics and Ergonomic factors in Apply designs to add more value to it. CO 5 Apply the Design communication tools to model an idea. Apply CO6 Incorporate different segments of knowledge in engineering in order to Apply develop innovative, reliable, sustainable and economically viable designs.",
                    "syllabus": "Introduction to engineering design. Generate a design through the Design Process stages. Design Thinking Approach, Design Thinking Process Stages: Empathize, Define, Ideate, Prototype and Test. Design Thinking as Divergent-Convergent Questioning. Ideation in Design Thinking - Brainstorming sessions. Design Engineering Concepts. Application of Biomimicry, Aesthetics and Ergonomics in Design. Design for X ‚Äì Quality, Reliability and Sustainability Design Communication, Data Representation, Communicating Designs Orally, Graphically and in Writing. Modelling, Prototyping and Proof of Concept. Value Engineering, Concurrent and Reverse Engineering. Expediency, Economics and Environment in Design Engineering. Design Rights. Ethics in Design.",
                    "textbooks": "1) Yousef Haik, Sangarappillai Sivaloganathan, Tamer M. Shahin, Engineering Design Process, Third Edition, Cengage Learning, (1 January 2017) 2) Linda C. Schmidt , George Dieter, Engineering Design, McGraw Hill Education; Fourth edition (1 July 2017) 91 3) PavanSoni, Design Your Thinking: The Mindsets, Toolsets and Skill Sets for Creative Problem- Solving, Penguin Random House India Private Limited, 2020 4) Voland, G., Engineering by Design, Pearson India 2014, Second Edition, ISBN 9332535051",
                    "references": "1) Clive L Dym, Engineering Design: A Project Based Introduction, Fourth Edition, John Wiley & Sons, New York 2009. 2) Tim Brown, Change by Design: How Design Thinking Transforms Organizations and Inspires Innovation, Harper Business; Revised, Updated ed. edition (5 March 2019) 3) Don Norman , The Design of Everyday Things, Basic Books; 2 edition (5 November 2013) 4) Dominique Forest , Art of Things: Product Design Since 1945, Abbeville Press Inc.,U.S.; Special edition (16 October 2014) 5) Javier Abarca, Al Bedard, et al, Introductory Engineering Design ‚Äì A Projects-Based Approach, 3rd ed, Regents of the University of Colorado, 2000. 6) Nigel Cross, Design Thinking: Understanding How Designers Think and Work, Berg Publishers 2011, First Edition, ISBN: 978-1847886361 5) Pahl, G., Beitz, W., Feldhusen, J., Grote, K.-H., Engineering Design: A Systematic Approach, Springer 2007, Third Edition, ISBN 978-1-84628-319-2. 6) George Dieter , Engineering Design: A Materials and Processing Approach, McGraw-Hill Education / Asia; 3 edition (16 February 2000)",
                    "course_plan": "No. of Module Contents hours Design Process: - Defining a Design Process-: Detailing Customer I 3 Requirements, Setting Design Objectives, Identifying Constraints, Establishing Functions, Generating Design Alternatives and Choosing a Design. Practical Exercise: Need Identification. How to define a Problem Statement. 3 Present an idea using the stages of Design Process. Design Thinking Approach: -Introduction to Design Thinking, Iterative II 4 Design Thinking Process Stages: Empathize, Define, Ideate, Prototype and Test. Design Thinking as Divergent-Convergent Questioning. Empathize ‚Äì User Persona, Day in the Life Technique, identify customer requirements using Morphological Chart and set design objectives. Define - Identifying and formulating a Problem Statement -Fish Bone Diagram Practical Exercise: User Persona Chart. Morphological Chart 2 Ideate - Brainstorming sessions, and ideation using Random word technique, III 4 SCAMPER. Design Engineering Concepts: Modular Design and Life Cycle Design Approaches. Application of Biomimicry, Aesthetics and Ergonomics in Design. Design for X ‚Äì Quality, Reliability and Sustainability. Practical Exercise: Brainstorming, 6-3-5 technique, Random Word Technique 2 Design Communication: - Data Representation, Communicating Designs IV 3 Orally, Graphically and in Writing. 92 Modelling, Prototyping and Proof of Concept. Awareness of Basic tools of Design like ‚Äì Autodesk, CATIA, MATLAB Practical Exercise: Communicating Designs Graphically. 4 Value Engineering, Concurrent Engineering, and Reverse Engineering in V Design. Expediency, Economics and Environment in Design Engineering: -Design for 3 Production, Use, and Sustainability. Engineering Economics in Design. Design Rights. Ethics in Design Practical Exercise: Case Studies 2 Total hours 30 93 Course Year of Course Name Category L T P Credit Code Introduction NC0U20C UNVERSAL HUMAN MNC 2 1 0 3 2022 VALUES -II"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objectives of the course are: 1. To help the students appreciate the essential complementarity between ‚ÄòVALUES‚Äô and ‚ÄòSKILLS‚Äô 2. To facilitate the development of a Holistic perspective among students towards life and profession leading towards a value-based living 3. To help the students to have ethical human conduct, trustful and mutually fulfilling human behaviour and mutually enriching interaction with nature. PRE-REQUISITE: None. Universal Human Values 1 (Desirable)",
                    "outcomes": "After the completion of the course, students will be able to: CO 1 Explain more of themselves and their surroundings (family, society, Understand nature) CO 2 Show more responsibility in life to handle problems with sustainable Understand solutions keeping human relationships and human nature in mind CO3 Demonstrate more Commitment towards human values, human Understand relationship and human society CO 4 Apply what they have learnt about Harmony to their real life Apply",
                    "syllabus": "Module 1: Course Introduction - Need, Basic Guidelines, Content and Process for Value Education Purpose and motivation for the course, recapitulation from Universal Human Values-I Self-Exploration‚Äìwhat is it? - Its content and process; ‚ÄòNatural Acceptance‚Äô and Experiential Validation- as the process for self-exploration Continuous Happiness and Prosperity- A look at basic Human Aspirations Right understanding, Relationship and Physical Facility- the basic requirements for fulfilment of aspirations of every human being with their correct priority Understanding Happiness and Prosperity correctly- A critical appraisal of the current scenario Method to fulfil the above human aspirations: understanding and living in harmony at various levels. (Include practice sessions to discuss natural acceptance in human being as the innate acceptance for living with responsibility (living in relationship, harmony and co-existence) rather than as arbitrariness in choice based on liking-disliking) 94 Module 2: Understanding Harmony in the Human Being - Harmony in Myself! Understanding human being as a co-existence of the sentient ‚ÄòI‚Äô and the material ‚ÄòBody‚Äô Understanding the needs of Self (‚ÄòI‚Äô) and ‚ÄòBody‚Äô - happiness and physical facility Understanding the Body as an instrument of ‚ÄòI‚Äô (I being the doer, seer and enjoyer) Understanding the characteristics and activities of ‚ÄòI‚Äô and harmony in ‚ÄòI‚Äô Understanding the harmony of I with the Body: Sanyam and Health; correct appraisal of Physical needs, meaning of Prosperity in detail Programs to ensure Sanyam and Health. (Include practice sessions to discuss the role others have played in making material goods available to me. Identifying from one‚Äôs own life. Differentiate between prosperity and accumulation. Discuss program for ensuring health vs dealing with disease) Module 3: Understanding Harmony in the Family and Society- Harmony in Human Relationship Understanding values in human-human relationship; meaning of Justice (nine universal values in relationships) and program for its fulfilment to ensure mutual happiness; Trust and Respect as the foundational values of relationship Understanding the meaning of Trust; Difference between intention and competence Understanding the meaning of Respect, Difference between respect and differentiation; the other salient values in relationship Understanding the harmony in the society (society being an extension of family): Resolution, Prosperity, fearlessness (trust) and co-existence as comprehensive Human Goals Visualizing a universal harmonious order in society- Undivided Society, Universal Order- from family to world family. (Include practice sessions to reflect on relationships in family, hostel and institute as extended family, real life examples, teacher-student relationship, goal of education etc. Gratitude as a universal value in relationships. Discuss with scenarios. Elicit examples from students‚Äô lives) Module 4: Understanding Harmony in the Nature and Existence - Whole existence as Coexistence Understanding the harmony in the Nature Interconnectedness and mutual fulfilment among the four orders of nature recyclability and self regulation in nature Understanding Existence as Co-existence of mutually interacting units in all pervasive space Holistic perception of harmony at all levels of existence. Include practice sessions to discuss human being as cause of imbalance in nature (film ‚ÄúHome‚Äù can be used), pollution, depletion of resources and role of technology etc. 95 Module 5: Implications of the above Holistic Understanding of Harmony on Professional Ethics Natural acceptance of human values Definitiveness of Ethical Human Conduct Basis for Humanistic Education, Humanistic Constitution and Humanistic Universal Order Competence in professional ethics: a. Ability to utilize the professional competence for augmenting universal human order b. Ability to identify the scope and characteristics of people friendly and eco-friendly production systems, c. Ability to identify and develop appropriate technologies and management patterns for above production systems. Case studies of typical holistic technologies, management models and production systems Strategy for transition from the present state to Universal Human Order a. At the level of individual: as socially and ecologically responsible engineers, technologists and managers. b. At the level of society: as mutually enriching institutions and organizations Sum up. (Include practice Exercises and Case Studies will be taken up in Practice (tutorial) Sessions eg.To discuss the conduct as an engineer or scientist etc.)",
                    "textbooks": "1) Gaur P.R, Asthana R, Bagaria G.P, Human Values and Professional Ethics (2nd revised Edition) Excel Books, New Delhi, 2019 2) Tripathi A. N, Human Values, New Age Intl. Publishers, New Delhi, 2004.",
                    "references": "1) Gaur R.R, Sangal R, Bagaria G P ‚ÄòA Foundation Course in Human Values and Professional Ethics (Teacher Manual ), Excel Books, 1st Edition 2013. 2) Parichaya E K, Nagaraj A, Jeevan Vidya, Jeevan Vidya Prakashan, Amarkantak, 1999. 3) Mohandas K Gandhi, ‚ÄôThe story of my Experiments with Truth‚Äô Fingerprint, 2009 4) Cecile Andrews ‚ÄòSlow is Beautiful‚Äô, New Society Publishers, 2006. 5) Kumarappa J C Economy of Permanence, Sarva Seva Sangh Prakashan, 2017.",
                    "course_plan": "Each Lecture hour and Tutorial hour can be structured as given below for the efficient delivery of the course content. MODULE CONTENT No.of Hours 96 Understanding Value Education, Self-Exploration as the process for Value Education, Sharing about oneself, Understanding Happiness and Prosperity-the Basic Human Aspirations, Right Understanding, I 9 Relationship, Physical Facility, Exploring Human Consciousness, Happiness and Prosperity- Current Scenario, Method to Fulfil the Basic Human Aspirations, Exploring Natural Acceptance Understanding Human Being as the Co-existence of the Self and Body, distinguishing between the needs of the Self and the Body, Exploring the difference of needs of the Self and the Body, The Body as an II Instrument of the Self, Understanding Harmony in the Self, Exploring 9 Sources of Imagination in the Self, Harmony of the Self with the Body, Programme to ensure Self-Regulation and Health, Exploring Harmony of Self with the Body. Harmony in the Family-the Basic unit of Human Interaction, Values in the Human-to-Human Relationship, ‚ÄòTrust‚Äô ‚Äìthe foundation Value in Relationship, Exploring the feeling of Trust, ‚ÄòRespect‚Äô- as the Right III Evaluation, Exploring the feeling of Respect, Understanding Harmony 9 in the Society, Vision for the Universal Human Order, Exploring Systems to fulfil Human Goal Understanding Harmony in the Nature, Interconnectedness, self- regulation, and Mutual Fulfilment among the four orders of Nature, IV Exploring the four orders of Nature, Realizing Existence as Co- 6 Existence at all Levels, The Holistic Perception of Harmony in Existence, Exploring Co-Existence in Existence Natural Acceptance of Human Values, Definitiveness of (Ethical) Human Conduct, Exploring Ethical Human Conduct, A Basis for Humanistic Education, Humanistic Constitution and Universal Human Order, Competence in Professional Ethics, Exploring V 9 Humanistic Models in Education, Holistic Technologies, Production Systems and Management-Models- Typical Case Studies, Strategies for Transition towards Value ‚Äìbased Life and Profession, Exploring Steps of Transition towards Universal Human Order 97 Course Year of Course Name Category L T P Credit Code Introduction CS2U28B AI Algorithms Lab PCC 0 0 3 3 2022"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This laboratory course enables the students to get the fundamental concepts in the area of Artificial Intelligence. This course covers the AI based Algorithms, logical reasoning agents and implementation of these reasoning systems using either backward or forward inference mechanisms. This course helps the learners to apply AI techniques to solve real world problems. PRE-REQUISITE: A sound knowledge of the basics of programming, Discrete Mathematics.",
                    "outcomes": ": After the completion of the course, the student will be able to: CO 1 Understand State the basics of learning problems with hypothesis and version spaces CO 2 Demonstrate real-world problems as state space problems, optimization Apply problems or constraint satisfaction problems. CO 3 Simulate given problem scenario and analyze its performance. Apply CO 4 Develop programming solutions for given problem scenario. Apply CO 5 Design and develop an expert system by using appropriate tools and Apply techniques.",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Not Found"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The Database Management Systems course is intended to impart the elementary concepts of a database management system to students and equip them to design and implement a database application based on those concepts. This course helps the learners to get practical exposure on database creation, SQL queries creation, transaction processing and NoSQL & MongoDB based operations. The course enables the students to create, manage and administer the databases, develop necessary tools for the design and development of the databases, and to understand emerging technologies to handle Big Data.",
                    "outcomes": ": After the completion of the course the student will be able to CO1 Design database schema for a given real world problem-domain using Apply standard design and Modeling approaches. CO2 Construct queries using SQL for database creation, interaction, Apply modification, and Updation. C03 Design and implement triggers and cursors. Apply C04 Implement procedures, functions, and control structures using PL/SQL. Apply CO5 Perform CRUD operations in NoSQL Databases Apply C06 Apply Develop database applications using front-end tools and back-end DBMS.",
                    "syllabus": "1. Design a database schema for an application with ER diagram from a problem description **. 2. Creation, modification, configuration, and deletion of databases using UI and SQL Commands **. 100 3. Creation of database schema - DDL (create tables, set constraints, enforce relationships, create indices, delete and modify tables). Export ER diagram from the database and verify relationships** (with the ER diagram designed in step 1). 4. Database initialization - Data insert, Data import to a database (bulk import using UI and SQL Commands)**. 5. Practice SQL commands for DML (insertion, updating, altering, deletion of data, and viewing/querying records based on condition in databases)**. 6. Implementation of built-in functions in RDBMS**. 7. Implementation of various aggregate functions in SQL**. 8. Implementation of Order By, Group By & Having clause **. 9. Implementation of set operators nested queries, and join queries **. 10. Implementation of queries using temp tables. 11. Practice of SQL TCL commands like Rollback, Commit, Savepoint **. 12. Practice of SQL DCL commands for granting and revoking user privileges **. 13. Practice of SQL commands for creation of views and assertions ** . 14. Implementation of various control structures like IF-THEN, IF-THEN-ELSE, IF-THEN- ELSIF, CASE, WHILE using PL/SQL **. 15. Creation of Procedures, Triggers and Functions**. 16. Creation of Packages **. 17. Creation of Cursors **. 18. Creation of PL/SQL blocks for exception handling **. 19. Database backup and restore using commands. 20. Query analysis using Query Plan/Show Plan. 21. Familiarization of NoSQL Databases and CRUD operations**. 22. Design a database application using any front end tool for any problem selected. The application constructed should have five or more tables**.",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Not Found"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to enable learners to solve problems by breaking it down to object level while designing software and to implement it using Java. This course covers Object Oriented Principles, Object Oriented Programming in Java, Inheritance, Exception handling, Event handling, multithreaded programming and working with window-based graphics. This course helps the learners to develop Mobile applications, Enterprise Applications, Scientific Applications and Web based Applications.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Write Java programs using the object oriented concepts ‚Äì classes, objects, Apply constructors, data hiding, inheritance and polymorphism CO 2 Utilize datatypes, operators, control statements, built in packages & Apply interfaces, Input/ Output Streams and Files in Java to develop programs CO 3 Illustrate how robust programs can be written in Java using exception Understand handling mechanism CO 4 Write application programs in Java using multithreading Apply CO 5 Write Graphical User Interface based application programs by utilising Apply event handling features and Swing in Java",
                    "syllabus": "Introduction - Approaches to Software Design, Object Modeling using UML, Introduction to Java - JVM, Java Compiler, Bytecode. 102 Core Java Fundamentals ‚Äì Primitive Data types, Operators, Control Statements, Object Oriented Programming in Java - Class and Object fundamentals, Constructors, Access Control, Command-line Arguments. More features of Java ‚Äì Inheritance, Packages and Interfaces, Abstract Classes and Methods, Exception Handling. 103 Advanced Features of Java ‚Äì Input/ Output, Java Library, String Handling, Collections Framework. GUI Programming, Event Handling and Multithreaded Programming ‚Äì Swing Fundamentals, Event Handling, Multithreaded Programming.",
                    "textbooks": "1) Herbert Schildt, Java: The Complete Reference, 8/e, Tata McGraw Hill,2011. 2) Rajib Mall, Fundamentals of Software Engineering, 4thedition, PHI,2014. 3) Paul Deitel, Harvey Deitel, Java How to Program, Early Objects 11thEdition, Pearson, 2018.",
                    "references": "1) Y. Daniel Liang, Introduction to Java Programming, 7/e, Pearson,2013. 2) Nageswararao R., Core Java: An Integrated Approach, Dreamtech Press,2008. 3) Flanagan D., Java in A Nutshell, 5/e, O'Reilly,2005. 4) Barclay K., J. Savage, Object Oriented Design with UML and Java, Elsevier,2004. 5) Sierra K., Head First Java, 2/e, O'Reilly,2005. 6) Balagurusamy E., Programming JAVA a Primer, 5/e, McGraw Hill,2014.",
                    "course_plan": "No. of Module Contents hours I Introduction - Approaches to Software Design- Functional Oriented 12 Design, Object-Oriented Design, Case Study of Automated Fire Alarm System. Object Modeling Using UML ‚Äì Basic object oriented concepts. Basic object oriented concepts. UML diagrams, Use case model. Class diagram, Interaction diagram. Activity diagram, State chart diagram. Java programming Environment and Runtime Environment, Development Platforms -Standard, Enterprise. JVM, Java compiler, Bytecode. Java applet, Java Buzzwords, Java program structure, Comments, Garbage Collection, Lexical Issues. Primitive Data types - Integers, Floating Point Types, Characters, II 12 Boolean. Literals, Type Conversion and Casting, Variables, Arrays, Strings, Vector class. Operators - Arithmetic Operators, Bitwise Operators, Relational Operators, Boolean Logical Operators, Assignment Operator, Conditional (Ternary) Operator, Operator Precedence. Control Statements - Selection Statements, Iteration Statements and Jump Statements. Object Oriented Programming in Java - Class Fundamentals, Declaring Objects. Object Reference, Introduction to Methods. Constructors, this Keyword. Method Overloading, Using Objects as Parameters. Returning Objects, Recursion. Access Control, 104 static Members. Final Variables, Inner Classes. Command- Line Arguments, Variable Length Arguments. III Inheritance - Super class, Sub class, the keyword super, protected 12 Members, Calling Order of Constructors, Method Overriding, the Object class, Abstract Classes and Methods, Using final with Inheritance. Packages and Interfaces - Defining Package, CLASSPATH, Access Protection, Importing Packages. Interfaces. Exception Handling - Checked Exceptions, Unchecked Exceptions, try Block and catch Clause, Multiple catch Clauses, Nested try Statements, throw, throws and finally. Input/output - I/O Basics, Reading Console Input. Writing Console IV 12 Output, PrintWriter Class. Object Streams and Serialization, Serialization, Working with Files. Working with Files. Java Library - String Handling ‚Äì String Constructors, String Length, Special String Operations, Character Extraction, String Comparison, Searching Strings, Modifying Strings Using valueOf( ), Comparison of string Buffer and String. Collections framework ‚Äì Collections overview, Collections Class ‚Äì Array List. Accessing Collections via an Iterator. Swings fundamentals, Swing Key Features. MVC, Swing Controls, V 12 Components and Containers. Exploring Swing ‚ÄìJFrame, JLabel, JButton, JTextField. Event handling - Event Handling Mechanisms, Delegation Event Model, Delegation Event Model, Event Classes, Sources of Events, Event Listener Interfaces, Using the Delegation Model. Multithreaded Programming- The Java Thread Model, The Main Thread, Creating Thread, Creating Multiple Threads, Suspending, Resuming and Stopping Threads. Total hours 60 105 Course Year of Course Name Categor L T P Credi Code Introductio y t n CS0M20D Programming Minor 3 1 0 4 2020 Methodologies PRE-REQUISITE: Nil"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The course deals with the various systems of ideas that have been used to guide the design of programming languages. It covers data types, variables, control flow structures, computational problems, characteristics of object oriented programming languages and concurrency constructs in different programming languages. The course provides the learners a clear understanding of the main constructs of contemporary programming languages.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Explain the criteria for evaluating programming languages and compare Understand Imperative, Functional and Logic programming languages. CO2 Explain the characteristics of data types and variables. Understand CO3 Illustrate how control flow structures and subprograms help in developing Apply the structure of a program to solve a computational problem. CO 4 Explain the characteristics of Object Oriented Programming Languages. Understand CO 5 Compare concurrency constructs in different programming languages. Understand",
                    "syllabus": "Names, Bindings & Scope ‚Äì Names, Variables, Concept of Binding, Scope and Lifetime, Referencing Environments Data Type Checking, Strong Typing, Type Equivalence. Expressions ‚Äì Arithmetic Expressions, Overloaded Operators, Type Conversions, Relational and Boolean Expressions, Short-Circuit Evaluation. Assignment - Assignment Statements, Mixed-mode Assignment. Statement-Level Control Structures, Subprograms ‚Äì Design Issues of Subprograms, Local Referencing Environments, Parameter Passing Methods, Closures, Co-routines. Support for Object Oriented Programming, Exception Handling ‚Äì Basic Concepts, Design Issues. Event Handling - Introduction to Event Handling Concurrency ‚Äì‚Äì Introduction to LISP and Scheme, Comparison of Functional and Imperative Languages. Logic Programming Languages ‚Äì Basic Elements of Prolog, Applications of Logic Programming. 106",
                    "textbooks": "1) Robert W. Sebesta, Concepts of Programming Languages, 10th Edition, Pearson. 2) Scott M. L., Programming Language Pragmatics, 3rd Edn., Morgan Kaufmann Publishers.",
                    "references": "1) Kenneth C. Louden, Programming Languages: Principles and Practice, 2nd Edn., Cengage Learning. 2) Tucker A. B. and R. E. Noonan, Programming Languages: Principles and Paradigms, 2nd Edn. ‚ÄìTMH. 3) Ravi Sethi, Programming Languages: Concepts & Constructs, 2nd Edn., Pearson Education. 4) David A. Watt, Programming Language Design Concepts, Wiley Dreamtech.",
                    "course_plan": "Modul e Contents No. of hours I Introduction ‚Äì Role of Programming Languages, Programming Domains, 11 Language Evaluation Criteria, Influence on Language Design, Language Design Trade-offs, Implementation Methods. Names, Bindings & Scope ‚Äì Names, Variables, Concept of Binding, Scope and Lifetime, Referencing Environments. II Data Types- Primitive Data Types, Character String Types, User-Defined 14 Ordinal Types, Array Types, Record Types, List Types, Pointer & Reference Types, Type Checking, Strong Typing, Type Equivalence. Expressions- Arithmetic Expressions, Overloaded Operators, Type Conversions, Relational and Boolean Expressions, Short-Circuit Evaluation. Assignment-Assignment Statements, Mixed-mode Assignment. III Statement-Level Control Structures ‚Äì Selection Statements, Iterative 11 Statements, Unconditional Branching, Guarded Commands. Subprograms ‚Äì Design Issues of Subprograms, Local Referencing Environments, Parameter Passing Methods, Subprograms as Parameters, Overloaded Subprograms, Closures, Co-routines. IV Support for Object Oriented Programming ‚Äì Inheritance, Dynamic Binding, 13 Design Issues for Object Oriented Languages, Support for Object Oriented Programming in C++, Implementation of Object Oriented Constructs. Exception Handling ‚Äì Basic Concepts, Design Issues. Event Handling - Introduction to Event Handling. V Concurrency ‚Äì Subprogram Level Concurrency, Semaphores, Monitors, 11 Message Passing. Functional Programming Languages ‚Äì Introduction to LISP and Scheme, Comparison of Functional and Imperative Languages. 107 Logic Programming Languages ‚Äì Basic Elements of Prolog, Applications of Logic Programming. Total hours 60 108 Minor Basket 2: Artificial Intelligence & Machine Learning Course Year of Course Name Categor L T P Credi Code Introductio y t n CS0M20B Python for Machine Minor 3 1 0 4 2020 Learning PRE-REQUISITE: NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objective of the course is to introduce Python programming and develop programming skills to manage the development of software systems. It covers Object Oriented Programming, data processing in Python and introduces to Machine Learning and Artificial Intelligence-based applications and tools, Data Science and Data Visualization applications. This course enables the learner to develop python programs and lays the foundation to develop Machine Learning and Artificial Intelligence-based applications.",
                    "outcomes": "After the completion of the course the student will be able to: CO 1 Write, test and debug Python programs Apply Illustrate uses of conditional (if, if-else, if-else if-else and switch-case) Apply CO 2 and iterative (while and for) statements in Python programs Develop programs by utilizing the modules Lists, Tuples, Sets and Apply CO 3 Dictionaries in Python CO 4 Implement Object Oriented programs with exception handling Apply Write programs in Python to process data stored in files by utilizing the Apply CO 5 modules Numpy, Matplotlib, and Pandas",
                    "syllabus": "Introduction to Python and Functions-keywords, identifiers, operators, data types, statement and expression, Type conversion, reading Input, output formatting Control Flow Statements, functions and strings- conditional and Iterative statements, break and continue statements, functions and recursive functions, string methods. Data Structures in Python- list, dictionary, tuple, set Object Oriented Programming, exception handling in Python-inheritance and polymorphism, handle a single exception, handle multiple exceptions Data Processing, visualization modules in python - numpy, matplotlib, pandas. 109",
                    "textbooks": "1) Kenneth A Lambert., Fundamentals of Python : First Programs, 2/e, Cengage Publishing, 2016 2) Wes McKinney, Python for Data Analysis, 2/e, Shroff / O‚ÄôReilly Publishers,2017",
                    "references": "1) Allen B. Downey, Think Python: How to Think Like a Computer Scientist, 2/e, Schroff, 2016 2) Michael Urban and Joel Murach, Python Programming, Shroff/Murach,2016 3) David M.Baezly, Python Essential Reference. Addison-Wesley Professional; 4/e,2009. 4) Charles Severance. Python for Informatics: Exploring Information, 5) http://swcarpentry.github.io/python-novice-gapminder/",
                    "course_plan": "Module Contents No. of hours I Basic coding skills - Working with data types, Numeric data types and Character sets, Keywords, Variables and Assignment statement, Operators, Expressions, Working with numeric data, 10 Type conversions, Comments in the program. Input, Processing, and Output. Formatting output. Detecting and correcting syntax errors. Using built in functions and modules in math module II Control statements - Selection structure (if-else, switch-case), Iteration structure (for, while), Testing the control statements, Lazy evaluation. Functions - Hiding redundancy and complexity, Arguments and return values, Variable scopes and parameter 13 passing, Named arguments, Main function, Working with recursion, Lambda functions. Strings and number systems - String function, Handling numbers in various formats. III Lists - Basic list Operations and functions, List of lists, Slicing, Searching and sorting list, List comprehension. Work with tuples. Sets. Work with dates and times. Dictionaries ‚Äì Dictionary 12 functions, dictionary literals, adding and removing keys, accessing and replacing values, traversing dictionaries. 110 IV Design with classes - Objects and Classes, Methods, Instance Variables, Constructor, Accessors and Mutators. Structuring 11 classes with Inheritance and Polymorphism. Abstract Classes. Exceptions - Handle a single exception, handle multiple exceptions. V The os and sys modules. NumPy - Basics, creating arrays, Arithmetic, Slicing, Matrix Operations, Random numbers. Plotting and visualization using Matplotlib - Basic plot, Ticks, 14 Labels, and Legends. Working with CSV files with Pandas - Reading, Manipulating, and Processing Data. Total hours (Approx.) 60 111 Year of Course Course Name Category L T P Credi Introdu Code t c tion CS0M20E Mathematics for Machine Learning Minor 3 1 0 4 2020"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This is the foundational course for awarding B. Tech. Minor in Computer Science and Engineering with specialization in Machine Learning. The purpose of this course is to introduce mathematical foundations of basic Machine Learning concepts among learners, on which Machine Learning systems are built. This course covers Linear Algebra, Vector Calculus, Probability and Distributions, Optimization and Machine Learning problems. Concepts in this course help the learners to understand the mathematical principles in Machine Learning and aid in the creation of new Machine Learning solutions, understand & debug existing ones, and learn about the inherent assumptions & limitations of the current methodologies. Prerequisite: CS0M20B Python for Machine Learning",
                    "outcomes": "After the completion of the course the student will be able to: Make use of the concepts, rules and results about linear equations, matrix Apply CO 1 algebra, vector spaces, eigenvalues & eigenvectors and orthogonality & diagonalization to solve computational problems Perform calculus operations on functions of several variables and Apply CO 2 matrices, including partial derivatives and gradients Utilize the concepts, rules and results about probability, random Apply CO 3 variables, additive & multiplicative rules, conditional probability, probability distributions and Bayes‚Äô theorem to find solutions of computational problems Train Machine Learning Models using unconstrained and constrained Apply CO 4 optimization methods",
                    "syllabus": "Linear Algebra: Systems of Linear Equations, Matrices, ANALYTIC GEOMETRY, MATRIX DECOMPOSITIONS: Norms, Eigen decomposition and Diagonalization, Vector Calculus: differentiation of Univariate Functions, Useful Identities for Computing Gradients, Probability and Distributions: Data and Learning Model Empirical Risk Minimization, Summary Statistics and Independence, Optimization: Optimization Using Gradient Descent, Constrained Optimization and Lagrange Multipliers. 112",
                    "textbooks": "1) Mathematics for Machine Learning by Marc Peter Deisenroth, A. Aldo Faisal, and Cheng Soon Ong published by Cambridge University Press (freely available at https://mml - book.github.io)",
                    "references": "1) Linear Algebra and Its Applications, 4th Edition by Gilbert Strang 2) Linear Algebra Done Right by Axler, Sheldon, 2015 published by Springer 3) Introduction to Applied Linear Algebra by Stephen Boyd and Lieven Vandenberghe, 2018 published by Cambridge University Press",
                    "course_plan": "Module Contents No. of hours I LINEAR ALGEBRA: Systems of Linear Equations ‚Äì 14 Matrices, Solving Systems of Linear Equations. Vector Spaces ‚ÄìVector Spaces, Linear Independence, Basis and Rank. Linear Mappings ‚Äì Matrix Representation of Linear Mappings, Basis Change, Image and Kernel. II ANALYTIC GEOMETRY, MATRIX 1 4 DECOMPOSITIONS: Norms, Inner Products, Lengths and Distances, Angles and Orthogonality, Orthonormal Basis, Orthogonal Complement, Orthogonal Projections ‚Äì Projection into One Dimensional Subspaces, Projection onto General Subspaces, Gram-Schmidt Orthogonalization. Determinant and Trace, Eigenvalues and Eigenvectors, Cholesky Decomposition, Eigen decomposition and Diagonalization, Singular Value Decomposition, Matrix Approximation. III VECTOR CALCULUS: Differentiation of Univariate 10 Functions - Partial Differentiation and Gradients, Gradients of Vector Valued Functions, Gradients of Matrices, Useful Identities for Computing Gradients. Back propagation and Automatic Differentiation ‚Äì Gradients in Deep Network, Automatic Differentiation. Higher Order Derivatives Linearization and Multivariate Taylor Series. IV Probability and Distributions: Construction of a 12 Probability Space - Discrete and Continuous Probabilities, Sum Rule, Product Rule, and Bayes‚Äô Theorem. Summary Statistics and Independence ‚Äì Gaussian Distribution - Conjugacy and the Exponential Family - Change of Variables/Inverse Transform. 113 V Optimization: Optimization Using Gradient Descent - 10 Gradient Descent with Momentum, Stochastic Gradient Descent. Constrained Optimization and Lagrange Multipliers - Convex Optimization - Linear Programming - Quadratic Programming Total hours (Approx.) 60 114 Minor Basket 3: Networking Course Year of Course Name Categor L T P Credit Code Introductio y n CS0M20C Data MINOR 3 1 0 4 2020 Communication PRE-REQUISITE: NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to prepare learners to understand the communication entities and the associated issues in the field of Computer Science. This course covers fundamental concepts of data transmission &media, digital & analog transmissions, multiplexing & spread spectrum, error detection &correction and switching. Concepts in data communication help the learner to understand the concepts in networking and mobile communication.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Describe the characteristics of signals used for Analog and Digital Understand Transmissions CO 2 Discuss the features and issues in data transmission Understand CO 3 Select transmission media based on characteristics and propagation Apply modes CO 4 Apply appropriate signal encoding techniques for a given scenario Apply CO 5 Illustrate multiplexing and spread spectrum technologies Understand CO 6 Explain error detection & correction techniques and switching Understand techniques used in data communication",
                    "syllabus": "Data Transmission Basics - Communication model - Periodic Analog signals - Analog & digital data and signals - Transmission Impairments-Data rate limits - Noiseless channel, Nyquist bandwidth, Noisy channel, Shannon's capacity formula. Transmission Media - Guided Transmission Media - Unguided media -Wireless Propagation - Ground wave propagation, Sky Wave propagation, Line-of-Sight (LoS) Propagation. Digital Transmission and Analog Transmission - Digital data to Digital signal - Analog data to Digital signal - Digital data to Analog signal - Analog data to Analog signal. 115 Multiplexing and Spread Spectrum - Multiplexing - FDM, WDM, TDM, Synchronous TDM, Statistical TDM. Spread Spectrum Techniques - DSSS, FHSS, CDM, CDMA. Error Detection, Correction and Switching - Digital data communication techniques - Asynchronous transmission, Synchronous transmission. Detecting and correcting errors - Types of Errors- Detection Methods - Basic principles of Switching - Circuit Switching, Packet Switching, Message Switching.",
                    "textbooks": "1) Forouzan B. A., Data Communications and Networking, 5/e, McGraw Hill, 2013. 2) William Stallings, Data and Computer Communication 9/e, Pearson Education, Inc.",
                    "references": "1) Schiller J., Mobile Communications, 2/e, Pearson Education, 2009. 2) Curt M. White, Fundamentals of Networking and Communication 7/e, Cengage learning.",
                    "course_plan": "No. of Module Contents hours I Data Transmission Basics 12 Communication model - Simplex, Half duplex, Full duplex transmission. Periodic Analog signals - Sine wave, Amplitude, Phase, Wavelength, Time and frequency domain, Bandwidth. Analog & digital data and signals. Transmission impairments - Attenuation, Delay distortion, Noise. Data rate limits - Noiseless channel, Nyquist bandwidth, Noisy channel, Shannon's capacity formula. II Transmission Media 12 Guided Transmission Media - Twisted pair, Coaxial cable, Optical fiber. Unguided media - Radio waves, Terrestrial microwave, Satellite microwave, Infrared. Wireless Propagation - Ground wave propagation, Sky Wave propagation, Line-of-Sight (LoS) Propagation. III Digital Transmission and Analog Transmission 12 Digital data to Digital signal ‚Äì Non-Return-to-Zero (NRZ), Return- to- Zero (RZ), Multilevel binary, Biphase. Analog data to Digital signal - Sampling theorem, Pulse Code Modulation (PCM), Delta Modulation (DM). Digital data to Analog signal: Amplitude Shift Keying (ASK), Frequency Shift Keying (FSK), Phase Shift Keying (PSK). Analog data to Analog signal: Amplitude Modulation (AM), Frequency Modulation (FM), Phase Modulation (PM). 116 IV Multiplexing and Spread Spectrum 12 Multiplexing - Frequency Division Multiplexing (FDM), Wave length Division Multiplexing (WDM), Time Division Multiplexing (TDM), Characteristics, Synchronous TDM, Statistical TDM. Spread Spectrum Techniques - Direct Sequence Spread Spectrum (DSSS), Frequency Hopping Spread Spectrum (FHSS), Code Division Multiplexing, Code Division Multiple Access (CDMA). 12 V Error Detection, Correction and Switching Digital data communication techniques - Asynchronous transmission, Synchronous transmission. Detecting and correcting errors - Types of Errors, Parity check, Checksum, Cyclic Redundancy Check (CRC), Forward Error Correction (FEC), Hamming Distance, Hamming Code. Basic principles of Switching - Circuit Switching, Packet Switching, Message Switching. Total Hours 60 117 Course Year of Course Name Categor L T P Credi Code Introductio y t n CS0M20F Introduction to Computer Minor 3 1 0 4 2020 Networks PRE-REQUISITE: NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of this course is to build an understanding of the fundamental concepts of computer networking. The course covers the main features of computer networks, various protocols, routing algorithms and its functions. The learner will be able to familiarize the basic protocols of computer networks, and how they can be used to assist in computer design and implementation.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Explain the features of computer networks, protocols and Understand network design models CO 2 Summarize the design issues of data link layer, data link layer Understand protocols, bridges and switches CO 3 Illustrate wired LAN protocols (IEEE 802.3/4/5) and wireless LAN Understand protocols (IEEE 802.11a/b/g/n, 802.15) CO 4 Choose appropriate routing algorithms, congestion control Apply techniques and Quality of Service parameters for a network CO 5 Illustrate the functions and protocols of network, transport and Understand application layer in inter-networking",
                    "syllabus": "Introduction-Uses of Computer Networks, Network Hardware, Network Software, Reference Models. The Data Link Layer - Data Link layer Design Issues, Error Detection and Correction, Elementary Data Link Protocols. The Medium Access Control (MAC) Sub layer - Ethernet, Wireless LANs - 802.11 a/b/g/n, Bridges & Switches. Network Layer Design Issues. Routing Algorithms, Routing for Mobile Hosts, Congestion Control Algorithms, Quality of Service (QoS). Network Layer in Internet-ICMP, IP, ARP, RARP, BOOTP, DHCP, OSPF, IPV6. 118 Transport Layer ‚Äì The Transport Service ‚Äì Services Provided to the Upper Layers, Transport Service Primitives, The User Datagram Protocol (UDP), Transmission Control Protocol (TCP), Application Layer protocols.",
                    "textbooks": "1) Andrew S. Tanenbaum, Computer Networks, 4/e, PHI (Prentice Hall India).",
                    "references": "1) Behrouz A Forouzan, Data Communication and Networking, 4/e, Tata McGraw Hill . 2) William Stallings, Computer Networking with Internet Protocols, Prentice-Hall, 2004. 3) James F. Kurose, Keith W. Ross, Computer Networking: A Top-Down Approach, 6/e.",
                    "course_plan": "No. of Module Contents hours I Introduction ‚Äì Uses of Computer Networks, Network Hardware, 12 Network Software, Reference Models ‚Äì The OSI Reference Model, The TCP/IP Reference Model, Comparison of OSI and TCP/IP Reference models. II The Data Link Layer - Data Link layer Design Issues, Error Detection 13 and Correction, Elementary Data Link Protocols, Sliding Window Protocols, HDLC (High-Level Data Link Control) Protocol. The Medium Access Control (MAC) Sub layer ‚Äì The Channel Allocation Problem, Multiple Access Protocols, Ethernet, Wireless LANs - 802.11 a/b/g/n, Bridges & Switches. III Network Layer Design Issues. Routing Algorithms - The Optimality 11 Principle, Shortest path routing, Flooding, Distance Vector Routing, Link State Routing, Multicast Routing, Routing for Mobile Hosts. Congestion Control Algorithms, Quality of Service (QoS) - Requirements, Techniques for Achieving Good QoS IV Network Layer in Internet ‚Äì The IP Protocol, IP Addresses, Internet 12 Control Message Protocol (ICMP), Address Resolution Protocol (ARP), Reverse Address Resolution Protocol (RARP), Bootstrap Protocol (BOOTP), Dynamic Host Configuration Protocol (DHCP). Open Shortest Path First (OSPF) Protocol, Border Gateway Protocol (BGP), Internet Multicasting, IPv6, ICMPv6. 119 12 V Transport Layer ‚Äì The Transport Service ‚Äì Services Provided to the Upper Layers, Transport Service Primitives. The User Datagram Protocol (UDP), Transmission Control Protocol (TCP) ‚Äì Overview of TCP, TCP Segment Header, Connection Establishment & Release, Connection Management Modeling, TCP Retransmission Policy, TCP Congestion Control. Application Layer ‚Äì File Transfer Protocol (FTP), Domain Name System (DNS), Electronic mail, MIME, Simple Network Management Protocol (SNMP), Dynamic Host Configuration Protocol (DHCP), World Wide Web ‚Äì Architectural Overview. Total Hours 60 120 B.Tech (HONOURS) Honour Bucket 1: Security in Computing Course Course Name Category L T P Credi Year of Code t Introductio n CS1H20A NUMBER Honours 3 1 0 4 2022 THEORY PRE-REQUISITE: NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of this course is to create awareness among learners about the important areas of number theory used in computer science. The course covers modular arithmetic operations, methods to verify correctness of mathematical assertions, theorems for ensuring security in computing systems and applications of arithmetic functions. The goal of the course is to help the learners to apply the concepts in practical applications of Computer organization and Security, Coding and Cryptography, Random number generation, Hash functions and Graphics.",
                    "outcomes": "After the completion of the course the student will be able to: CO 1 Illustrate modular arithmetic operations, methods and techniques Understand CO 2 Use the methods - Induction, Contraposition or Contradiction to verify Apply the correctness of mathematical assertions CO 3 Utilize theorems and results about prime numbers, congruences, Analyse quadratic residues and integer factorization for ensuring security in computing systems. CO 4 Illustrate uses of Chinese Remainder Theorem & Euclidean algorithm Apply in Cryptography and Security CO 5 Explain applications of arithmetic functions in Computer Science Understand CO 6 Implement Number Theoretic Algorithms using a programming Apply language 121",
                    "syllabus": "Divisibility and Modular Arithmetic, Finite Fields, Divisibility and Division Algorithms, Modular Arithmetic- Properties, Euclid's algorithm for the greatest common divisor, Extended Euclid‚Äôs Algorithm, LCM. Primes and Congruence, Methods to find prime numbers, Primality testing and factorization, Congruence, Chinese Remainder Theorem, Fermat‚Äôs little theorem, Wilson's theorem. Congruences with a Prime-Power Modulus, Pseudo-primes and Carmichael numbers, Euler's Function, Euler‚Äôs Totient function, Applications of Euler‚Äôs Totient function, The Group of units- The group U , primitive roots. n Quadratic Residues, Quadratic Congruences, Legendre symbol, Jacobi Symbol, Quadratic reciprocity. Arithmetic Functions, Arithmetic Functions, Perfect numbers, Mobius function. The Dirichlet Products. Sum of Squares, The Gaussian Integers, Continued Fractions -Finite continued fractions, Infinite continued fractions, Pell's Equation, Solution of Pell‚Äôs equation by continued fractions.",
                    "textbooks": "1) G.A. Jones & J.M. Jones, Elementary Number Theory, Springer UTM, 2007. 2) Joseph Silverman, A Friendly introduction to Number Theory, Pearson Ed. 2009.",
                    "references": "1) William Stallings, Cryptography and Network Security Principles and Practice, Pearson Ed. 2) Tom M.Apostol, ‚ÄòIntroduction to Analytic Number Theory‚Äô, Narosa Publishing House Pvt. Ltd, New Delhi, (1996). 3) Neal Koblitz, A course in Number Theory and Cryptography, 2nd Edition, Springer ,2004.",
                    "course_plan": "Module Contents No. of hours Divisibility and Modular Arithmetic: I 12 Finite Fields ‚Äì Groups, Rings and Fields. Divisibility - Divisibility and Division Algorithms, Well ordering Principle, Bezout‚Äôs Identity. Modular Arithmetic- Properties, Euclid's algorithm for the greatest common divisor, Extended Euclid‚Äôs Algorithm, Least Common multiple, Solving Linear Diophantine Equations, Modular Division. 122 Primes and Congruence: II 12 Prime Numbers-Prime Numbers and prime ‚Äì power factorization, Fermat and Mersenne primes, Primality testing and factorization. Congruences- Linear congruences, Simultaneous linear congruences, Chinese Remainder Theorem, Fermat‚Äôs little theorem, Wilson's theorem. Congruences with a Prime-Power Modulus & Euler's III 12 Function: Congruences with a Prime-Power Modulus- Arithmetic modulo p, Pseudo-primes and Carmichael numbers, Solving congruences modulo prime powers. Euler's Function-Euler‚Äôs Totient function, Applications of Euler‚Äôs Totient function, Traditional Cryptosystem, Limitations. The Group of units- The group U , primitive roots, Existence of n primitive roots, Applications of primitive roots. Quadratic Residues & Arithmetic Functions: IV 12 Quadratic Residues- Quadratic Congruences, The group of Quadratic residues, Legendre symbol, Jacobi Symbol, Quadratic reciprocity. Arithmetic Functions- Definition and examples, Perfect numbers, Mobius function and its properties, Mobius inversion formula, The Dirichlet Products. Sum of Squares and Continued Fractions: V 12 Sum of Squares- Sum of two squares, The Gaussian Integers, Sum of three squares, Sum of four squares. Continued Fractions -Finite continued fractions, Infinite continued fractions, Pell's Equation, Solution of Pell‚Äôs equation by continued fractions. Totalhours (Approx.) 60 123 Honour Bucket 2: COMPUTATIONAL BIOLOGY COMPUTATIONAL Catego Year of L T P Credit CS2H20A FUNDAMENTALS FOR ry Introduction BIOINFORMATICS VAC 3 1 0 4 2022 PRE-REQUISITE: Basic understanding of programming languages."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "Bioinformatics is an interdisciplinary area that combines Computer Science, Molecular Biology, and Mathematics and allied areas of Science. This course covers computational fundamentals of Bioinformatics and Computational Biology such as DNA, genes and proteins, transcription, translation, sequence alignment, representation and basic Python programming required for handling bioinformatics data. The learners will be able to solve basic bioinformatics problems using python programming.",
                    "outcomes": "CO 1 Describe the basic concepts of Bioinformatics with an emphasis on Understand biological macromolecules-DNA, RNA and Protein and synthesis of biomolecules CO 2 Identify biological data formats and databases, retrieve bio-sequences, Apply and align bio- sequences to identify similarity, dynamic programming. CO 3 Illustrate nucleotide attributes and transcription using programming Apply tools CO 4 Demonstrate the concepts of Parsing FASTA and Sequences Apply Analysis CO 5 Compute k-mers, translation of DNA subsequences and Open Apply reading frame.",
                    "syllabus": "Module-1 (Introduction to bioinformatics) Introduction to bioinformatics, Nature & Scope of Bioinformatics, animal vs plants, Eukaryote vs prokaryote, Nucleus. Chromosome, gene DNA, RNA, amino acids, and Protein, The Central Dogma, Messenger RNA, tRNA, rRNA, Genetic code, Gene Structure, Transcription, translation. 124 Module-2 (Introduction to bio sequences and analysis) Introduction to Biological Databases and data storage, NCBI, Genbank, Bio sequence formats- Database Similarity Searching, BLAST, Sequence alignment, Scoring Matrices, Multiple- Sequence Alignment, Dynamic programming Module 3: (Introduction to Processing Nucleotides) Tetranucleotide Frequency, Counting the Nucleotides, Writing and Verifying a Solution, Transcribing DNA into mRNA: Mutating Strings, Reading and Writing Files, Reverse Complement of DNA, String Manipulation, Iterating Over a Reversed String. Module 4: (Processing Nucleotides GC Content and Hamming Distance) Creating the Fibonacci Sequence, Writing, Testing, and Benchmarking Algorithms, retrieving FASTA Using Bio python, Iterating the Sequences Using a for Loop, Parsing FASTA and Analyzing Sequences, Computing GC Content, Finding the Hamming Distance, Counting Point Mutations Module 5 (Translation of DNA and subsequence) K-mers and Codons, Translating Codons, Translating mRNA into Protein, Finding Subsequences of DNA, Find a Motif in DNA, Finding Overlapping Patterns Using Regular Expressions, Sequence Similarity, Finding the Shortest Sequence in a FASTA File, Extracting K-mers from a Sequence, Counting Frequencies of K-mers, Finding Open Reading Frames",
                    "textbooks": "1. Mount, D. W.. Bioinformatics: Sequence and Genome Analysis. India, CBS Publishers & Distributors, 2005. 2. Youens-Clark, Ken. Mastering Python for Bioinformatics. United States: O'Reilly Media, 2021.",
                    "references": "1. Kelley, S.T. and Didulo, D, Computational Biology: A Hypertextbook. John Wiley & Sons, 2020 2. Baxevanis, Andreas D., Gary D. Bader, and David S. Wishart, eds. Bioinformatics. John Wiley & Sons, 2020. 3. Shaik, Noor Ahmad, et al. Essentials of Bioinformatics, Volume I. Springer, 2019 4. Selzer, Paul M., Richard J. Marh√∂fer, and Andreas Rohwer, Applied bioinformatics. An introduction‚ÄìSpringer, Verlag,, 2008. 5. S C Rastogi, N Mendiratta and P Rastogi, Bioinformatics: Methods and Applications, PHI Learning Private Limited, New Delhi, 2015. 6. D E Krane and M L Raymer, Fundamental Concepts of Bioinformatics, Pearson Education, 2006. 7. Bassi, Sebastian. Python for Bioinformatics. United Kingdom: CRC Press, 2017. 125 8. Model, Mitchell L. Bioinformatics Programming Using Python. United States: O'Reilly Media, 2010. 9. Antao, Tiago. Bioinformatics with Python Cookbook. United Kingdom: Packt Publishing, 2015.Antao, Tiago. Bioinformatics with Python Cookbook: Learn how to Use Modern Python Bioinformatics Libraries and Applications to Do Cutting-edge Research in Computational Biology, 2nd Edition. United Kingdom: Packt Publishing, 2018.",
                    "course_plan": "Module Contents No. of hours Introduction to bioinformatics, Nature & Scope of Bioinformatics, Animal vs plants, Eukaryote vs prokaryote, Nucleus. Chromosome, gene, DNA, RNA, and Protein, I 10 The Central Dogma introduction, Messenger RNA, tRNA, rRNA, Genetic code, Gene Structure and Control, Transcription, Translation, Introduction to Biological Databases and data storage, NCBI, Genbank, NCBI, Genbank Sequence retrieval, Bio sequence formats, Database Similarity Searching, BLAST, BLAST II 10 Exercises, Sequence alignment, Scoring Matrices, Multiple- Sequence Alignment, Introduction to Dynamic programming in MSA. Counting the Nucleotides, Writing and Verifying a Solution, Transcribing DNA into mRNA, Iterating the Input Files, Mutating III Strings, Writing and Reading Output Sequences, Reverse 10 Complement of DNA, String Manipulation, Iterating Over a Reversed String Creating the Fibonacci Sequence, Writing, Testing, and Benchmarking Algorithms, Retrieving FASTA Using Biopython, IV Parsing FASTA and Analysing Sequences, Computing GC 8 Content, Finding the Hamming Distance, Iterating the Characters of Two Strings, Counting Point Mutations K-mers and Codons, Translating mRNA into Protein, Finding Subsequence of DNA, Find a Motif in DNA, Finding Overlapping Patterns Using Regular Expressions, Sequence Similarity, Finding V 9 the Shortest Sequence in a FASTA File , Extracting K-mers from a Sequence, Counting Frequencies of K-mers, Finding Open Reading Frames 126 127 Honour Bucket 3: COMPUTER VISION ADVANCED TOPICS CATEGORY L T P CREDITS CS2H20B IN COMPUTER VAC 3 1 0 4 GRAPHICS PREREQUISITE: A sound knowledge of Mathematics and concepts of any programming language."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course helps the learners to make awareness about strong theoretical concept in computer graphics. It covers the three-dimensional environment representation in a computer, transformation of 2D/3D objects, basic mathematical techniques and algorithms used to build useful applications. This course enables the learners to develop the ability to create image processing frameworks for different domains and develops algorithms for emerging display technologies.",
                    "outcomes": ": After the completion of the course the student will be able to CO 1 Describe the working principles of graphics devices Understand CO 2 Illustrate line drawing, circle drawing and polygon filling algorithms Apply CO 3 Demonstrate geometric representations and transformations on 2D & Apply 3D objects. CO 4 Demonstrate the working of various clipping algorithms and projection Apply algorithms. CO 5 Summarize visible surface detection methods Understand CO6 Explain the concept of realism in a scene and its performance Understand preservation",
                    "syllabus": "Module ‚Äì 1(Line and Circle drawing algorithms) Basics of Computer Graphics and its applications. Video Display devices - Refresh Cathode Ray Tubes, Random Scan Displays and systems, Raster scan displays and systems, Color CRT displays, Flat panel display and its categories. Line drawing algorithms - DDA, Bresenham‚Äôs algorithm. Circle drawing algorithms - Midpoint Circle generation algorithm, Bresenham‚Äôs algorithm. Module - 2(Filled Area Primitives and Two dimensional transformations) Filled Area Primitives- Scan line polygon filling, Boundary filling and flood filling. Two dimensional transformations-Translation, Rotation, Scaling, Reflection and Shearing, Composite transformations, Matrix representations and homogeneous coordinates. Module - 3 (Clipping and 3D transformations) Window to viewport transformation. Cohen Sutherland and Midpoint subdivision line clipping algorithms, Sutherland Hodgeman and Weiler Atherton Polygon clipping algorithms. Three 128 dimensional viewing pipeline. Basic 3D transformations. Module - 4 (Projections and Visible Surface detection) Projections- Parallel and Perspective projections. Visible surface detection algorithms- Back face detection, Depth buffer algorithm, Scan line algorithm, A buffer algorithm Module - 5 (Realism and performance) Realism - Illumination Shading, Shadows, Texture mapping, Bump mapping, Environment mapping, Transparency, Accumulation Buffer, Back face Culling, Visibility Culling.",
                    "textbooks": "1. Donald Hearn and M. Pauline Baker, Computer Graphics, PHI, 2e, 1996 2. Aditi Majumder and M.Gopi , Introduction to VISUAL COMPUTING Core Concepts in Computer Vision, Graphics, and Image Processing, 2018",
                    "references": "1) William M. Newman and Robert F. Sproull, Principles of Interactive Computer Graphics. McGraw Hill, 2001 2) Zhigang Xiang and Roy Plastock, Computer Graphics (Schaum‚Äôs outline Series), McGraw Hill, 2019. 3) David F. Rogers , Procedural Elements for Computer Graphics, Tata McGraw Hill,2001. 4) Donald Hearn, M. Pauline Baker and Warren Carithers, Computer Graphics with OpenGL, PHI, 4e, 2013.",
                    "course_plan": "Module Contents No. of hours Basics of Computer Graphics and applications, Refresh Cathode Ray Tubes, Random and Raster Scan Displays and systems, Color CRT displays, Flat panel display and its categories, DDA Line I drawing Algorithm, Bresenham‚Äôs line drawing algorithm, 10 Midpoint Circle generation algorithm, Bresenham‚Äôs Circle generation algorithm, Illustration of line and circle drawing algorithms Scan line polygon filling, Boundary filling and flood filling, Basic 2D transformations-Translation, Basic 2D transformations- Rotation, Basic 2D transformations- Scaling, Reflection and II 9 Shearing, Illustration of Basic 2D Transformations, Composite transformations, Matrix representations and homogeneous coordinates 129 Window to viewport transformation, Cohen Sutherland Line clipping algorithm, Midpoint subdivision Line clipping algorithm, Sutherland Hodgeman Polygon clipping algorithm, Weiler III 8 Atherton Polygon clipping algorithm, Three-dimensional viewing pipeline, Basic 3D transformation-Translation and scaling, Basic 3D transformation-Rotation Projections-Parallel projections, Projections- Perspective projections, Illustration of projection methods, Visible surface IV detection algorithms- Back face detection, Depth buffer 7 algorithm, Scan line visible surface detection algorithm, A buffer algorithm, Illumination, Shading and Shadows, Texture mapping-Texture to object space mapping, Texture mapping-Object to screen space mapping and Mip Mapping, Bump mapping, Bump mapping- V 10 Illustration, Environment mapping and Transparency, Accumulation Buffer and Back face Culling, Visibility Culling, Visibility Culling 130"
                }
            ]
        },
        "SEMESTER V": {
            "courses": [
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "Study of operating system is an essential to understand the overall working of computer system, tradeoffs between performance and functionality and the division of jobs between hardware and software. This course introduces the concepts of memory management, device management, process management, file management and security & protection mechanisms available in an operating system. The course helps the learner to understand the fundamentals about any operating system design so that they can extend the features of operating system to detect and solve many problems occurring in operating system and to manage the computer resources appropriately.",
                    "outcomes": "After the completion of the course, the student will be able to: Course Description Level Outcomes Understand CO 1 Explain the relevance, structure and functions of Operating Systems in computing devices. Apply CO 2 Apply the concepts of process management and process scheduling mechanisms employed in Operating Systems. Understand CO 3 Explain process synchronization in Operating Systems and illustrate process synchronization mechanisms using Mutex Locks, Semaphores and Monitors. Understand CO 4 Explain different methods for detection, prevention, avoidance and recovery for managing deadlocks in Operating Systems. Apply CO 5 Illustrate and examine the memory management algorithms in Operating Systems. Understand CO 6 Explain the security aspects and algorithms for file and storage management in Operating Systems.",
                    "syllabus": "Introduction: Functions of an operating system-overview. Kernel Data Structures-Operating System Interfaces and implementation - User Interfaces, System Calls. Operating System implementation and Structure, System Boot process. Process Management, Threads, Scheduling Queues- Context Switching-Process Creation and Termination-CPU Scheduling -Inter Process Communication. Process Synchronization, Critical Section-Synchronization ‚Äì Locks, Semaphores, Monitors, Classical Problems and its implementation- Deadlocks- Handling ‚Äì Prevention ‚Äì Avoidance- Detection Recovery. Memory Management-Swapping - Segmentation ‚Äì Paging ‚Äì Page replacement algorithms. Storage Management-RAID- Disk structure, Disk scheduling and implementation File System Interface- Protection in Operating Systems-Directory implementation ‚Äì allocation methods-Protection-Access Matrix.",
                    "textbooks": "1. Abraham Silberschatz, Peter B Galvin, Greg Gagne, Operating System Concepts, 9/e, Wiley India, 2015.",
                    "references": "6. Andrew S Tanenbaum, ‚ÄúModern Operating Systems‚Äù, 4th Edition, Prentice Hall, 2015. 7. William Stallings, ‚ÄúOperating systems‚Äù, 6th Edition, Pearson, Global Edition, 2015. 8. Garry Nutt, Nabendu Chaki, Sarmistha Neogy, ‚ÄúOperating Systems‚Äù, 3rd Edition, Pearson Education,2016. 9. D.M. Dhamdhere, ‚ÄúOperating Systems‚Äù, 2nd Edition, Tata McGraw Hill, 2011. 10. Sibsankar Haldar, Alex A Aravind, ‚ÄúOperating Systems‚Äù, Pearson Education",
                    "course_plan": "Module Contents No. of hours I Introduction: Functions of an operating system. Single processor, 11 multiprocessor and clustered systems ‚Äì overview. Kernel Data Structures Operating System Interfaces and implementation - User Interfaces, System Calls ‚Äì examples. Operating System implementation - approaches. Operating System Structure ‚Äì Monolithic, Layered, Micro- kernel, Modular. System Boot process. II Process Management: Process Concept ‚Äì Processes-States ‚Äì Process 12 Control Block ‚Äì Threads. Scheduling ‚Äì Queues ‚Äì Schedulers ‚Äì Context Switching. Process Creation and Termination. CPU Scheduling ‚Äì Scheduling Criteria ‚Äì Scheduling Algorithms & implementation (P). Inter Process Communication: Shared Memory, Message Passing, Pipes III Process Synchronization: Critical Section - Peterson's solution. 13 Synchronization ‚Äì Locks, Semaphores, Monitors, Classical Problems and its implementation ‚Äì Producer Consumer, Dining Philosophers and Readers-Writers Problems (P). Deadlocks ‚Äì Conditions, Modeling using graphs. Handling ‚Äì Prevention ‚Äì Avoidance ‚Äì Banker‚Äôs Algorithm and its implementation (P) ‚Äì Detection- Recovery. IV Memory Management: Main Memory ‚Äì Swapping - fixed partitions - 12 variable partitions - ‚Äì Contiguous Memory allocation ‚Äì Segmentation ‚Äì Paging ‚Äì Demand Paging-Page replacement algorithms. Storage Management: Overview of mass storage structure- disks and tapes. Disk structure ‚Äì accessing disks. Disk scheduling and implementation (P). V File System Interface: File Concepts ‚Äì Attributes ‚Äì operations ‚Äì types ‚Äì 12 structure ‚Äì access methods. Protection. File system implementation. Directory implementation ‚Äì allocation methods. Free space Management. Protection‚Äì Goals, Principles, Domain. Access Matrix. Total Hours 60 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks Course Year of Course Name Category L T P Credit Code Introduction Introduction To CS2U30C PCC 3 1 0 4 2022 Machine Learning COURSE OVERVIEW This course enables the learners to understand the advanced concepts and algorithms in machine learning. The course covers the standard and most popular supervised learning algorithms such as linear regression, logistic regression, decision trees, Bayesian learning and the Naive Bayes algorithm, basic clustering algorithms and classifier performance measures. This course helps the students to provide machine learning-based solutions to real-world problems. Prerequisite: ES0U10H Introduction to Python ii. COURSE OUTCOMES Course Description Level Outcomes Illustrate Machine Learning concepts and basics of supervised learning concepts. Apply CO1 Illustrate and evaluate supervised learning techniques Apply CO2 CO3 Solve real life problems using appropriate machine learning models Apply Illustrate basics of parameter estimation models and the working of SVM Apply CO4 classifier Demonstrate the use of dimensionality reduction techniques and unsupervised Apply CO5 learning concepts iii. SYLLABUS iv (a) TEXT BOOKS 1. Ethem Alpaydin, Introduction to Machine Learning, 2nd edition, MIT Press 2010. 2. Tom Mitchell, Machine Learning, McGraw-Hill, 1997. Reference Books 1. Christopher Bishop. Neural Networks for Pattern Recognition, Oxford University Press, 1995. 2. Kevin P. Murphy. Machine Learning: A Probabilistic Perspective, MIT Press 2012. 3. Trevor Hastie, Robert Tibshirani, Jerome Friedman, The Elements Of Statistical Learning, Second edition Springer 2007. 4. P. Langley, Elements of Machine Learning, Morgan Kaufmann, 1995. 5. Richert and Coelho, Building Machine Learning Systems with Python. 6. Mohammed J. Zaki and Wagner Meira, Data Mining and Analysis: Fundamental Concepts and Algorithms, Cambridge University Press, First South Asia edition, 2016. 7. Jake VanderPlas, Python Data Science Handbook, O'Reilly Media, 2016 8. Davy Cielen, Arno DB Meysman and Mohamed Ali.Introducing Data Science: Big Data, Machine Learning, and More, Using Python Tools, Dreamtech Press 2016. COURSE PLAN Modul Contents Hours e Introduction to Machine Learning, Machine learning paradigms-supervised, semi-supervised, unsupervised, reinforcement learning. Classfication, regression and clustering , Basics of parameter estimation - Maximum Likelihood Estimation(MLE) and Maximum a Posteriori estimation(MAP). Bias-Variance decomposition Intel AI tools ÔÇ∑ Jupyter* Lab for interactive coding I 12 ÔÇ∑ NumPy, SciPy, and pandas for numerical computation ÔÇ∑ Matplotlib and seaborn for data visualization ÔÇ∑ Intel optimised library ‚Äìmodin Regression - Linear regression with one variable, Linear regression with multiple variables, solution using gradient descent algorithm and matrix method ÔÇ∑ Scikitlearn KNN Classifier and Regressor Logistic Regression Model Evaluation-Bias-Variance-tradeoff, Overfitting and under fitting, Cost function II 12 Regularization ‚ÄìL1 and L2 DT in regression Bayes theorem, Naive Bayes Classifier Decision tree algorithm ID3, CART Case Study: Develop a classifier for face detection. Classification Performance measures - Precision, Recall, Accuracy, F- Measure, Receiver Operating Characteristic Curve(ROC), Area Under Curve AUC. Bootstrapping, Cross Validation. III 12 Support Vector Machines - Introduction, Maximum Margin hyperplanes, Mathematics behind Maximum Margin Classification, soft margin SVM classifier, non-linear SVM, Kernels for learning non-linear functions, polynomial kernel, Radial Basis Function(RBF), Kernel Trick. Dimensionality reduction ‚Äì Subset selection, Principal Component Analysis. Unsupervised Learning - Clustering Methods -Similarity measures, K-means IV 12 clustering Expectation-Maximization for soft clustering, Hierarchical Clustering Methods ‚Äì Agglomerative and divisive, Density based clustering. Ensemble methods, Voting, Bagging, Boosting. Association Rule Mining- Apriori algorithm Perceptron, Perceptron Learning, Multilayer Feed forward Network, V 12 Activation Functions (Sigmoid, ReLU,Tanh), Back Propagation Algorithm, Illustrative Example for Back Propagation Total Hours 60 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks Course Course Name Categor L T P Credi Year of Code y t Introduction CS2U30D Artificial Neural PCC 3 1 0 4 2022 Network COURSE OVERVIEW This course provides a comprehensive introduction to Artificial Neural Networks, a fundamental concept in the field of machine learning and artificial intelligence. Students will gain a deep understanding of the theoretical foundations, practical applications, and design principles of neural networks. COURSE OUTCOMES: After the completion of the course, the student will be able to: Course Description Level Outcomes CO 1 Explain the fundamentals of artificial neural networks and their Understan applications. d Apply supervised learning techniques, including Perceptron CO 2 learning and Œ±-Least Mean Square Learning, to solve practical Apply problems Implement the Backpropagation algorithm for designing and CO 3 evaluating multi-layered network architectures. Apply Explain the architecture and learning techniques of various CO 4 Attractor Neural Networks Understan d Explain the principles of self-organizing feature maps and CO 5 their practical applications. Understan d SYLLABUS TEXTBOOKS 1. Satish Kumar, \"Neural Networks: A classroom approach\", Tata McGraw Hill, 2004. REFERENCE BOOKS: 1. Simon Haykin, \"Neural Networks: A comprehensive foundation\", Second Edition, Pearson Education Asia. 2. Robert J. Schalkoff, \"Artificial Neural Networks\", McGraw-Hill International Editions, 1997 3. B. Yegnanarayana. \"Artificial neural networks\"., PHI Learning Pvt. Ltd. COURSE PLAN Module Contents No. of hou rs Introduction: Biological Neuron-Artificial Neural Model - Types of I 1 activation functions - Architecture: Feedforward and Feedback, Convex 2 Sets, Convex Hull and Linear Separability, Non-Linear Separable Problem. XOR Problem, Multilayer Networks. Supervised Learning I: Learning Algorithms, Error correction and II 1 Gradient Descent Rules, Learning objective of TLNS, Perceptron 2 Learning Algorithm, Perceptron Convergence Theorem. Perceptron learning and Non-Separable sets, Œ±-Least Mean Square Learning, MSE Error surface, Steepest Descent Search, Œº-LMS approximate to gradient descent, Application of LMS to Noise Cancellation. Supervised Learning II: Multi-layered Network Architecture, III 1 Backpropagation Learning Algorithm, Practical consideration of BP 2 algorithm, Applications of Feedforward Neural Networks. IV 1 Attractor Neural Networks: Associative Learning Attractor Associative 2 Memory, Linear Associative memory, Hopfield Network, application of Hopfield Network, Brain State in a Box Neural Network, Simulated Annealing, Boltzmann Machine, Bidirectional Associative Memory. V 1 Self-organization Feature Map: Maximal Eigenvector Filtering, 2 Extracting Principal Components, Generalized Learning Laws, Vector Quantization, Self- organization Feature Maps, Application of SOM, Growing Neural Gas. 6 Total Hours 0 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks Year of Catego ry L T P Cred it Introduction NC0U30A DISASTER MANAGEMENT MNC 2 0 0 Nil 2022"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The goal of this course is to expose the students to the fundamental concepts of hazards and disaster management. The course details the various phases of disaster risk management and the measures to reduce disaster risks.",
                    "outcomes": "After the completion of the course, the student will be able to: Course Description Level Outcomes CO 1 Explain the fundamental concepts and terminology related to Understand disaster management cycle CO 2 Explain hazard and vulnerability types and Understand disaster risk assessment CO 3 Describe the process of risk assessment and Understand appropriate methodologies to assess risk CO 4 Explain the core elements and phases of disaster risk Apply management and measures to reduce disaster risks across sector and community CO 5 Discuss the factors that determine the nature of disaster Understand response and the various disaster response actions CO 6 Explain the legislations and best practices for disaster Understand management and risk reduction at national and international level",
                    "syllabus": "Introduction- Systems of Earth, Key concepts and terminology in disaster risk reduction and management Hazard types, Vulnerability types and their assessment, Disaster risk assessment Disaster risk management- Phases of disaster risk management, Measures for disaster risk reduction- prevention, mitigation, preparedness, Disaster response, Relief Participatory stakeholder engagement, Disaster communication, Capacity building Common disaster types in India, Legislations in India on Disaster Management, National Disaster Management Policy, Institutional arrangements for disaster management in India, The Sendai Framework for Disaster risk reduction.",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "No. of Module Contents hours I Introduction about various systems of earth, Lithosphere- 6 composition, rocks, soils; Atmosphere- layers, ozone layer, greenhouse effect. Weather, cyclones, atmospheric circulations, Indian monsoon; Hydrosphere- oceans, inland water bodies; Biosphere Definition and meaning of key terms in Disaster risk reduction and Management ‚Äì disaster, hazard, exposure, vulnerability, risk, risk assessment, risk mapping, capacity, resilience, disaster risk reduction, disaster risk management, early warning systems, disaster preparedness, disaster prevention, disaster mitigation, disaster response, damage assessment, crisis counselling, needs assessment II Various hazard types, hazard mapping; Different types of 6 vulnerability types and their assessment- Physical, social, economic and environmental vulnerability. Core elements of disaster risk assessment Components of a comprehensive disaster preparedness strategy approaches, procedures Different disaster response actions 112 III Introduction to disaster risk management, core elements of disaster 7 risk management Phases of disaster risk management, Measures for disaster risk reduction Measures for disaster prevention, mitigation, and preparedness Disaster response- objectives, requirements. Disaster response planning; types of responses Disaster relief, International relief organisations IV Participatory stakeholder engagement, Importance of disaster 5 communication, Disaster communication- methods, barriers, Crisis counselling Introduction to capacity building, Concept- Structural measures, Non- structural measures Introduction to Capacity assessment, Capacity assessment- Strengthening, Capacity for reducing risk Introduction- common disaster types in India V 6 Common disaster legislations in India on disaster management National disaster management policy, Institutional arrangements for disaster management in India. The Sendai Framework for Disaster risk reduction and targets-priorities for action, guiding principles Total hours 30 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 113 Course Course Name Category L T P Credit Year of Code Introduction CS2U38A Operating Systems and PCC 0 0 4 2 2022 Networking Lab PRE-REQUISITE: Nil"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The course aims to offer students a hands-on experience on Operating System concepts using a constructivist approach and problem-oriented learning. Operating systems are the fundamental part of every computing device to run any type of software.",
                    "outcomes": "Not Found",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "4. Abraham Silberschatz, Peter B Galvin, Greg Gagne, Operating System Concepts, 9/e, Wiley India, 2015. 5. Andrew S Tanenbaum, ‚ÄúModern Operating Systems‚Äù, 4th Edition, Prentice Hall, 2015. 6. William Stallings, ‚ÄúOperating systems‚Äù, 6th Edition, Pearson, Global Edition, 2015.",
                    "course_plan": "SL No. Topics No. of hours 1 Implement programs for Inter Process Communication using 8 PIPE, Message Queue and Shared Memory. 114 2 Write a program to simulate the working of the dining 8 philosopher‚Äôs problem. 3 Implement the banker‚Äôs algorithm for deadlock avoidance. 8 4 Software simulation of Medium Access Control Protocols- 1) Go 9 Back N 2) Selective Repeat and 3) Sliding Window 5 Implementation of a subset of simple mail transfer protocol using 9 UDP 6 Implementation of a subset of a file transfer protocol using 9 TCP/IP 7 Implementation of Remote Procedure Call (RPC) 9 Total 60 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 75 75 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 15 marks Continuous Evaluation in Lab : 30 marks Continuous Assessment Test : 15 marks Viva-voce : 15 marks 115 Course Course Category L T P Credit Year of Code Name Introduction CS2U38B Machine Learning PCC 0 0 4 2 2022 Lab"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course enables the learners to get hands-on experience in most popular supervised learning algorithms (such as linear regression, logistic regression, decision trees, Bayesian learning and Naive Bayes algorithm) and unsupervised learning algorithms (such as basic clustering algorithms). This helps the learners to understand the process of knowledge inference from raw data through dataset preprocessing and analysis. Prerequisite: Fundamentals of Programming, Python programming fundamentals, Machine learning. .",
                    "outcomes": "After the completion of the course, the student will be able to: Course Outcom Description Level es CO 1 Implement machine learning algorithms using packages and libraries in Apply Python for various applications CO 2 Implement python programs for supervised learning methods through Apply Neural network, Regression, and classification CO 3 Implement clustering algorithms. Apply CO 4 Apply dimensionality reduction as a dataset preprocessing step. Apply TEXT BOOKS 1. Ethem Alpaydin, Introduction to Machine Learning, 2nd edition, MIT Press 2010. 2. Tom Mitchell, Machine Learning, McGraw-Hill, 1997. COURSE PLAN 116 SL Topics No. of No hours . Pandas ,Numpy and Visualization tools 20 11. Implement K-Nearest Neighbor algorithm to classify any dataset 4 12. Implement and demonstrate Single, Multi variable and Polynomial 4 Regression for a given set of training data stored in a .CSV file and evaluate the accuracy. 13. Implement a Python program to perform logistic regression on a 4 dataset. 14. Write a Python program to implement Naive Bayes classifier and 4 calculate the accuracy, precision, and recall for your data set. 15. Write a Python program to demonstrate the working of the decision tree 4 based ID3 algorithm. Use an appropriate data set for building the decision tree and apply this knowledge to classify a new sample. 16. Assuming a set of data that need to be classified, use a Support Vector 4 Machine classifier to perform this task and evaluate the accuracy. 17. Implement dimensionality reduction using PCA. 4 18. Implement K-Means Clustering using any given dataset. 4 19. Implement Agglomerative Hierarchical Clustering. 4 20. Build an Artificial Neural Network using Backpropagation algorithm 4 and test the same with appropriate dataset. Total 60 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 75 75 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 15 marks Continuous Evaluation in Lab : 30 marks Continuous Assessment Test : 15 marks Viva-voce : 15 marks 117 Minor Basket 1: SOFTWARE ENGINEERING Course Categor Credi Course Name L T P Year of Introduction Code y t Concepts In CS0M 30A Software VAC 3 1 0 4 2022 Engineering COURSE OVERVIEW This course provides fundamental knowledge in the Software Development Process. It covers Software Development, Quality Assurance and Project Management concepts. This course enables the learners to apply state of the art industry practices in Software development. Prerequisite: Basic understanding of Object Oriented Design and Development. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Le Description Outcomes vel Un der CO 1 Differentiate Traditional and Agile Software Development approaches sta nd Ap CO 2 Prepare Software Requirement Specification and Software Design for a given problem. ply Justify the significance of design patterns and licensing terms in software Ap CO 3 development, prepare testing, maintenance and DevOps strategies for a project ply Make use of software project management concepts while planning, estimation, Ap CO 4 scheduling, tracking and change management of a project, with proper application of ply SCRUM, Kanban and Lean frameworks. Utilize SQA practices, Process Improvement techniques and Technology Ap CO 5 improvements namely cloud based software model and containers & microservices in ply a Software Development Process.",
                    "syllabus": "The waterfall model, Incremental development. Process activities - Software specification, Software design and implementation, Software validation, Software evolution. Coping with change - Prototyping, Incremental delivery, Boehm's Spiral Model. Agile software development - Agile methods, agile manifesto - values and principles. Agile development techniques, Agile Project Management. Functional and non-functional requirements, Developing use cases, Software Requirements Specification Template, Personas, Scenarios, User stories, Feature identification. Design concepts Architectural Design - Software Architecture, Architectural Styles, Architectural considerations, Architectural Design Component level design Template of a Design Document as per ‚ÄúIEEE Std 1016- 2009 IEEE Standard for Information Technology Systems Design Software Design Descriptions‚Äù. Object-oriented design using the UML, Design patterns, Implementation issues, Open-source development - Open-source licensing - GPL, LGPL, BSD. DevOps automation, CI/CD/CD. Software Evolution - Evolution processes, Software maintenance. Software Project Management - Risk management, Managing people, Teamwork. Project Planning, 118 Software pricing, Plan-driven development, Project scheduling, Agile planning. Estimation techniques, COCOMO cost modeling. Configuration management Software Quality, Software Quality Dilemma, Achieving Software Quality Elements of Software Quality Assurance, SQA Tasks",
                    "textbooks": "1. Ethem Alpaydin, Introduction to Machine Learning, 2nd edition, MIT Press 2010. 2. Tom Mitchell, Machine Learning, McGraw-Hill, 1997. COURSE PLAN 116 SL Topics No. of No hours . Pandas ,Numpy and Visualization tools 20 11. Implement K-Nearest Neighbor algorithm to classify any dataset 4 12. Implement and demonstrate Single, Multi variable and Polynomial 4 Regression for a given set of training data stored in a .CSV file and evaluate the accuracy. 13. Implement a Python program to perform logistic regression on a 4 dataset. 14. Write a Python program to implement Naive Bayes classifier and 4 calculate the accuracy, precision, and recall for your data set. 15. Write a Python program to demonstrate the working of the decision tree 4 based ID3 algorithm. Use an appropriate data set for building the decision tree and apply this knowledge to classify a new sample. 16. Assuming a set of data that need to be classified, use a Support Vector 4 Machine classifier to perform this task and evaluate the accuracy. 17. Implement dimensionality reduction using PCA. 4 18. Implement K-Means Clustering using any given dataset. 4 19. Implement Agglomerative Hierarchical Clustering. 4 20. Build an Artificial Neural Network using Backpropagation algorithm 4 and test the same with appropriate dataset. Total 60 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 75 75 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 15 marks Continuous Evaluation in Lab : 30 marks Continuous Assessment Test : 15 marks Viva-voce : 15 marks 117 Minor Basket 1: SOFTWARE ENGINEERING Course Categor Credi Course Name L T P Year of Introduction Code y t Concepts In CS0M 30A Software VAC 3 1 0 4 2022 Engineering COURSE OVERVIEW This course provides fundamental knowledge in the Software Development Process. It covers Software Development, Quality Assurance and Project Management concepts. This course enables the learners to apply state of the art industry practices in Software development. Prerequisite: Basic understanding of Object Oriented Design and Development. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Le Description Outcomes vel Un der CO 1 Differentiate Traditional and Agile Software Development approaches sta nd Ap CO 2 Prepare Software Requirement Specification and Software Design for a given problem. ply Justify the significance of design patterns and licensing terms in software Ap CO 3 development, prepare testing, maintenance and DevOps strategies for a project ply Make use of software project management concepts while planning, estimation, Ap CO 4 scheduling, tracking and change management of a project, with proper application of ply SCRUM, Kanban and Lean frameworks. Utilize SQA practices, Process Improvement techniques and Technology Ap CO 5 improvements namely cloud based software model and containers & microservices in ply a Software Development Process. SYLLABUS The waterfall model, Incremental development. Process activities - Software specification, Software design and implementation, Software validation, Software evolution. Coping with change - Prototyping, Incremental delivery, Boehm's Spiral Model. Agile software development - Agile methods, agile manifesto - values and principles. Agile development techniques, Agile Project Management. Functional and non-functional requirements, Developing use cases, Software Requirements Specification Template, Personas, Scenarios, User stories, Feature identification. Design concepts Architectural Design - Software Architecture, Architectural Styles, Architectural considerations, Architectural Design Component level design Template of a Design Document as per ‚ÄúIEEE Std 1016- 2009 IEEE Standard for Information Technology Systems Design Software Design Descriptions‚Äù. Object-oriented design using the UML, Design patterns, Implementation issues, Open-source development - Open-source licensing - GPL, LGPL, BSD. DevOps automation, CI/CD/CD. Software Evolution - Evolution processes, Software maintenance. Software Project Management - Risk management, Managing people, Teamwork. Project Planning, 118 Software pricing, Plan-driven development, Project scheduling, Agile planning. Estimation techniques, COCOMO cost modeling. Configuration management Software Quality, Software Quality Dilemma, Achieving Software Quality Elements of Software Quality Assurance, SQA Tasks TEXT BOOKS 1. Book 1 - Ian Sommerville, Software Engineering, Pearson Education, Tenth edition, 2015. 2. Book 2 - Roger S. Pressman, Software Engineering : A practitioner‚Äôs approach, McGraw Hill publication, Eighth edition, 2014 3. Book 3 - Ian Sommerville, Engineering Software Products: An Introduction to Modern Software Engineering, Pearson Education, First Edition, 2020.",
                    "references": "7. Mary Poppendieck, Implementing Lean Software Development: From Concept to Cash, Addison-Wesley Signature Series, 2006 8. StarUML documentation - https://docs.staruml.io/ 9. OpenProject documentation - https://docs.openproject.org/ 10. BugZilla documentation - https://www.bugzilla.org/docs/ 11. GitHub documentation - https://guides.github.com/ 12. Jira documentation - https://www.atlassian.com/software/jira",
                    "course_plan": "116 SL Topics No. of No hours . Pandas ,Numpy and Visualization tools 20 11. Implement K-Nearest Neighbor algorithm to classify any dataset 4 12. Implement and demonstrate Single, Multi variable and Polynomial 4 Regression for a given set of training data stored in a .CSV file and evaluate the accuracy. 13. Implement a Python program to perform logistic regression on a 4 dataset. 14. Write a Python program to implement Naive Bayes classifier and 4 calculate the accuracy, precision, and recall for your data set. 15. Write a Python program to demonstrate the working of the decision tree 4 based ID3 algorithm. Use an appropriate data set for building the decision tree and apply this knowledge to classify a new sample. 16. Assuming a set of data that need to be classified, use a Support Vector 4 Machine classifier to perform this task and evaluate the accuracy. 17. Implement dimensionality reduction using PCA. 4 18. Implement K-Means Clustering using any given dataset. 4 19. Implement Agglomerative Hierarchical Clustering. 4 20. Build an Artificial Neural Network using Backpropagation algorithm 4 and test the same with appropriate dataset. Total 60 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 75 75 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 15 marks Continuous Evaluation in Lab : 30 marks Continuous Assessment Test : 15 marks Viva-voce : 15 marks 117 Minor Basket 1: SOFTWARE ENGINEERING Course Categor Credi Course Name L T P Year of Introduction Code y t Concepts In CS0M 30A Software VAC 3 1 0 4 2022 Engineering COURSE OVERVIEW This course provides fundamental knowledge in the Software Development Process. It covers Software Development, Quality Assurance and Project Management concepts. This course enables the learners to apply state of the art industry practices in Software development. Prerequisite: Basic understanding of Object Oriented Design and Development. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Le Description Outcomes vel Un der CO 1 Differentiate Traditional and Agile Software Development approaches sta nd Ap CO 2 Prepare Software Requirement Specification and Software Design for a given problem. ply Justify the significance of design patterns and licensing terms in software Ap CO 3 development, prepare testing, maintenance and DevOps strategies for a project ply Make use of software project management concepts while planning, estimation, Ap CO 4 scheduling, tracking and change management of a project, with proper application of ply SCRUM, Kanban and Lean frameworks. Utilize SQA practices, Process Improvement techniques and Technology Ap CO 5 improvements namely cloud based software model and containers & microservices in ply a Software Development Process. SYLLABUS The waterfall model, Incremental development. Process activities - Software specification, Software design and implementation, Software validation, Software evolution. Coping with change - Prototyping, Incremental delivery, Boehm's Spiral Model. Agile software development - Agile methods, agile manifesto - values and principles. Agile development techniques, Agile Project Management. Functional and non-functional requirements, Developing use cases, Software Requirements Specification Template, Personas, Scenarios, User stories, Feature identification. Design concepts Architectural Design - Software Architecture, Architectural Styles, Architectural considerations, Architectural Design Component level design Template of a Design Document as per ‚ÄúIEEE Std 1016- 2009 IEEE Standard for Information Technology Systems Design Software Design Descriptions‚Äù. Object-oriented design using the UML, Design patterns, Implementation issues, Open-source development - Open-source licensing - GPL, LGPL, BSD. DevOps automation, CI/CD/CD. Software Evolution - Evolution processes, Software maintenance. Software Project Management - Risk management, Managing people, Teamwork. Project Planning, 118 Software pricing, Plan-driven development, Project scheduling, Agile planning. Estimation techniques, COCOMO cost modeling. Configuration management Software Quality, Software Quality Dilemma, Achieving Software Quality Elements of Software Quality Assurance, SQA Tasks TEXT BOOKS 1. Book 1 - Ian Sommerville, Software Engineering, Pearson Education, Tenth edition, 2015. 2. Book 2 - Roger S. Pressman, Software Engineering : A practitioner‚Äôs approach, McGraw Hill publication, Eighth edition, 2014 3. Book 3 - Ian Sommerville, Engineering Software Products: An Introduction to Modern Software Engineering, Pearson Education, First Edition, 2020. REFERENCES 7. Mary Poppendieck, Implementing Lean Software Development: From Concept to Cash, Addison-Wesley Signature Series, 2006 8. StarUML documentation - https://docs.staruml.io/ 9. OpenProject documentation - https://docs.openproject.org/ 10. BugZilla documentation - https://www.bugzilla.org/docs/ 11. GitHub documentation - https://guides.github.com/ 12. Jira documentation - https://www.atlassian.com/software/jira COURSE PLAN Modul Contents Hours e Introduction to Software Engineering: Introduction to Software Engineering - Professional software development, Software engineering ethics. Software process models - The waterfall model, Incremental development. Process activities - Software specification, Software design and implementation, I Software validation, Software evolution. Coping with change - Prototyping, 12 Incremental delivery, Boehm's Spiral Model. Agile software development - Agile methods, agile manifesto - values and principles. Agile development techniques, Agile Project Management. Case studies: An insulin pump control system. Mentcare - a patient information system for mental health care. Requirement Analysis and Design: Functional and non-functional requirements, Requirements engineering processes. Requirements elicitation, Requirements validation, Requirements change, Traceability Matrix. Developing use cases, Software Requirements Specification Template, Personas, Scenarios, User stories, Feature identification. Design concepts - Design within the context II 12 of software engineering, Design Process, Design concepts, Design Model. Architectural Design - Software Architecture, Architectural Styles, Architectural considerations, Architectural Design Component level design - What is a component?, Designing Class-Based Components, Conducting Component level design, Component level design for web-apps. Template of a Design Document 119 as per ‚ÄúIEEE Std 1016-2009 IEEE Standard for Information Technology Systems Design Software Design Descriptions‚Äù. Case study: The Ariane 5 launcher failure. Implementation and Testing: Object-oriented design using the UML, Design patterns, Implementation issues, Open-source development - Open-source licensing - GPL, LGPL, BSD. Review Techniques - Cost impact of Software Defects, Code review and statistical analysis. Informal Review, Formal Technical Reviews, Post-mortem evaluations. Software testing strategies - Unit Testing, III Integration Testing, Validation testing, System testing, Debugging, White box 12 testing, Path testing, Control Structure testing, Black box testing, Testing Documentation and Help facilities. Test automation, Test-driven development, Security testing. Overview of DevOps and Code Management ‚Äì Code management, DevOps automation, CI/CD/CD. Software Evolution - Evolution processes, Software maintenance. Software Project Management: Software Project Management - Risk management, Managing people, Teamwork. Project Planning, Software pricing, Plan-driven development, Project scheduling, Agile planning. Estimation IV techniques, COCOMO cost modeling. Configuration management, Version 12 management, System building, Change management, Release management, Agile software management - SCRUM framework. Kanban methodology and lean approaches. Software Quality and Process Improvement: Software Quality, Software Quality Dilemma, Achieving Software Quality Elements of Software Quality V Assurance, SQA Tasks, Software measurement and metrics. Software Process 12 Improvement(SPI), SPI Process CMMI process improvement framework, ISO 9001:2000 for Software. Total Hours 60 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 120 Minor Basket 2: MACHINE LEARNING Course Categor Credi Course Name L T P Year of Introduction Code y t Concepts In CS0M 30B VAC 3 1 0 4 2022 Machine Learning COURSE OVERVIEW This course enables the learners to understand the fundamental concepts and algorithms in machine learning. The course covers the standard and most popular supervised learning algorithms such as linear regression, logistic regression, decision trees, Bayesian learning & the naive Bayes algorithm, support vector machines& kernels, basic clustering algorithms and dimensionality reduction methods. This course helps the students to provide machine learning based solutions to real world problems. Prerequisite: Familiarity with basics in linear algebra, probability and Python programming. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Level Description Outcomes Illustrate Machine Learning concepts and basic parameter estimation Apply CO 1 methods. Apply CO 2 Demonstrate supervised learning concepts (regression, linear classification). Illustrate the concepts of Multilayer neural network and Support Vector Apply CO 3 Machine Describe unsupervised learning concepts and dimensionality reduction Apply CO 4 techniques. Solve real life problems using appropriate machine learning models and Apply CO 5 evaluate the performance measures SYLLABUS Machine learning paradigms-supervised, semi-supervised, unsupervised, reinforcement learning. - Linear regression, Linear Methods for Classification- Logistic regression, Perceptron, Naive Bayes, Decision tree algorithm ID3.NN - Multilayer feed forward network, Activation functions (Sigmoid, ReLU, Tanh), Clustering - Similarity measures, Hierarchical Agglomerative Clustering, K-means partitional clustering, Expectation maximization (EM) for soft clustering. Dimensionality reduction ‚Äì Principal Component Analysis, factor Analysis, Multidimensional scaling, Linear Discriminant Analysis. Classification Performance measures TEXT BOOKS 121 1. Ethem Alpaydin, Introduction to Machine Learning, 2nd edition, MIT Press 2010. Mohammed J. Zaki and Wagner Meira, Data Mining and Analysis: Fundamental Concepts and Algorithms, Cambridge University Press, First South Asia edition, 2. 2016. 3. Jake VanderPlas, Python Data Science Handbook, O'Reilly Media, 2016 4. Tom Mitchell, Machine Learning, McGraw-Hill, 1997. REFERENCES 1. Christopher Bishop. Neural Networks for Pattern Recognition, Oxford University Press, 1995. 2. Kevin P. Murphy. Machine Learning: A Probabilistic Perspective, MIT Press 2012. 3. Trevor Hastie, Robert Tibshirani, Jerome Friedman, The Elements Of Statistical Learning, Second edition Springer 2007. 4. P. Langley, Elements of Machine Learning, Morgan Kaufmann, 1995. 5. Richert and Coelho, Building Machine Learning Systems with Python. 6. Davy Cielen, Arno DB Meysman and Mohamed Ali. Introducing Data Science: Big Data, Machine Learning, and More, Using Python Tools, Dreamtech Press 2016. COURSE PLAN Modul Ho Contents e urs Overview of machine learning: Machine learning paradigms-supervised, semi-supervised, unsupervised, reinforcement learning. Basics of parameter estimation - maximum likelihood estimation(MLE) and maximum a posteriori I 12 estimation(MAP). Introduction to Bayesian formulation. Supervised Learning Regression - Linear regression with one variable, Linear regression with multiple variables, solution using gradient descent algorithm and matrix II 12 method, basic idea of overfitting in regression. Linear Methods for Classification- Logistic regression, Perceptron, Naive Bayes, Decision tree algorithm ID3. Neural Networks (NN) and Support Vector Machines (SVM) NN - Multilayer feed forward network, Activation functions (Sigmoid, ReLU, Tanh), Backpropagation algorithm. SVM - Introduction, Maximum III Margin Classification, Mathematics behind Maximum Margin 12 Classification, Maximum Margin linear separators, soft margin SVM classifier, non-linear SVM, Kernels for learning non-linear functions, polynomial kernel, Radial Basis Function(RBF). Unsupervised Learning: Clustering - Similarity measures, Hierarchical IV 12 Agglomerative Clustering, K-means partitional clustering, Expectation 122 maximization (EM) for soft clustering. Dimensionality reduction ‚Äì Principal Component Analysis, factor Analysis, Multidimensional scaling, Linear Discriminant Analysis. Classification Assessment: Classification Performance measures - Precision, Recall, Accuracy, F-Measure, Receiver Operating Characteristic V Curve(ROC), Area Under Curve (AUC. Bootstrapping, Cross Validation, 12 Ensemble methods, Bias-Variance decomposition. Case Study: Develop a classifier for face detection. Total Hours 60 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 123 Minor Basket 3: Networking Year of Category L T P Cred CLIENT SERVER Introduction CS0M30C it SYSTEMS VAC 3 1 0 4 2020 PRE-REQUISITE: Nil"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The syllabus is prepared with the view of preparing the Engineering Graduates to build effective Client/Server applications. This course aims at providing a foundation in decentralized computer systems, using the client/server model. The course content is decided to cover the essential fundamentals which can be taught within the given slots in the curriculum.",
                    "outcomes": ": After the completion of the course the student will be able to Identify the basics of client/server systems and the Understand CO 1 driving force behind the development of client/server systems. Outline the architecture and classifications of client/server Understand CO 2 systems. Summarize the client/server network services for an Understand CO 3 application. Identify management services and issues in network Understand CO 4 Outline the Client/Server technology in respect of Understand CO 5 databases and Client/Server database architecture",
                    "syllabus": "is prepared with the view of preparing the Engineering Graduates to build effective Client/Server applications. This course aims at providing a foundation in decentralized computer systems, using the client/server model. The course content is decided to cover the essential fundamentals which can be taught within the given slots in the curriculum. COURSE OUTCOMES: After the completion of the course the student will be able to Identify the basics of client/server systems and the Understand CO 1 driving force behind the development of client/server systems. Outline the architecture and classifications of client/server Understand CO 2 systems. Summarize the client/server network services for an Understand CO 3 application. Identify management services and issues in network Understand CO 4 Outline the Client/Server technology in respect of Understand CO 5 databases and Client/Server database architecture SYLLABUS Introduction-Client/Server Classification-Client/Server Application Components-Client/ Server Systems Services and Support-Client/Server Technology and Databases",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Module Contents No. of hours I 12 Introduction to Client/Server computing - Basic Client/Server Computing Model, Server for Every Client- File Server, Print Server, Application Server, Mail Server, Directory Services Server, Web Server, Database Server, Transaction Servers. Client/Server-Fat or Thin, Stateless or Stateful, Servers and Mainframes, Client/Server Functions. Driving Forces behind Client/Server Computing- Business Perspective, Technology Perspective. II 11 Client/Server Types-Single Client/Single Server, Multiple Clients/Single Server, Multiple Clients/Multiple Servers, Integration With Distributed Computing, Alternatives To Client/Server Systems. Classification of Client/Server Systems- Two-Tier Computing, Middleware, Three-Tier Computing- Model View Controller (MVC), Principles behind Client/Server Systems. Client/Server Topologies. Existing Client/Server Architecture. Architecture for Business Information System. III Client- Services, Request for services, RPC, Windows services, 12 Print services, Remote boot services, other remote services, Utility Services. Server- Detailed server functionality, Network operating system, Available platforms, Server operating system. Organizational Expectations, Improving performance of client/server applications, Single system image, Downsizing and Rightsizing, Advantages and disadvantages of Client/Server computing, Applications of Client/Server. IV Services and Support- System administration, Availability, 13 Reliability, Scalability, Observability, Agility, Serviceability. Software Distribution, Performance, Network management. Remote Systems Management- RDP, Telnet, SSH, Security. LAN and Network Management issues. V Client/Server Technology and Databases - Storing Data, 12 Database System Architectures. Client/Server In Respect Of Databases- Client/Server Databases, Client/Server Database Computing, Database Computing Vs. Mainframe, PC/File Server Computing. Client/Server Database Architecture - Process-Per- Client Architecture, Multi-Threaded Architecture, Hybrid Architecture. Database Middleware Component - Application 125 Programming Interface, Database Translator, Network Translator. MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 126 Honour Basket 1: Security in Computing Year of Category L T P Credit CS1H30A CRYPTOGRAPHIC Introduction ALGORITHMS VAC 3 1 0 4 2022 PRE-REQUISITE: CS1H20A-Number Theory"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The course on Cryptographic Algorithms aims at exploring various algorithms deployed in offering confidentiality, integrity, authentication and non-repudiation services. This course covers classical encryption techniques, symmetric and public key crypto-system, key exchange and management, and authentication functions. The concepts covered in this course enable the learners in effective use of cryptographic algorithms for real life applications.",
                    "outcomes": ": After the completion of the course the student will be able to Identify the security services provided for different Understand CO1 types of security attacks. Summarize the classical encryption techniques for Apply CO2 information hiding. Illustrate symmetric / asymmetric key Apply CO3 cryptographic algorithms for secure communication. Interpret key management techniques for secure Understand CO4 communication. Summarize message authentication functions in Understand CO5 a secure communication scenario.",
                    "syllabus": "Need for security, Principles of security, Types of attacks, OSI Security Architecture, Classical encryption techniques- Encrypting communication channels. Symmetric key cryptographic Algorithms, DES, Block cipher principles, Differential and Linear cryptanalysis, Block cipher modes of operation, IDEA, AES, Stream cipher, RC4. Principles of public key cryptosystems, RSA algorithm, ElGamal cryptographic system, Knapsack algorithm, Diffie-Hellman key exchange algorithm, Elliptical curve cryptosystems. Key Distribution-Public key infrastructure. Authentication requirements, functions, Algorithms and Services.",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Module Contents No. of hours I Need for security, Security approaches, Principles of security, Types 12 of attacks, OSI Security Architecture, Classical encryption techniques - Substitution techniques, Transposition techniques. Stream cipher, Block cipher, Public key cryptosystems vs. Symmetric key cryptosystems, Encrypting communication channels. II Overview of symmetric key cryptography, Block cipher principles, 13 Data Encryption Standard (DES), Differential and Linear cryptanalysis, Double DES, Triple DES, International Data Encryption Algorithm (IDEA), Advanced Encryption Algorithm (AES),Block cipher modes of operation, Stream cipher, RC4. III Principles of public key cryptosystems, RSA algorithm, RSA 12 illustration, Attacks, ElGamal cryptographic system, Knapsack algorithm, Diffie-Hellman key exchange algorithm, Elliptical curve cryptosystems. IV Symmetric key distribution using symmetric encryption, Symmetric key distribution using asymmetric encryption, Distribution of public 12 keys, Generating keys, transferring keys, Verifying keys, Updating keys, Storing keys, Backup keys, Compromised keys, Public key infrastructure. Authentication requirements, Authentication functions, Message 11 authentication codes (MAC), Hash functions, Security of Hash V functions and MAC, Message Digest 5 (MD5), Secure Hash Algorithm (SHA)-512, Hash-based Message Authentication Code (HMAC), Cipher-based Message Authentication Code (CMAC), X.509 Authentication services. MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 128 Year of Category L T P Credit CS2H30A Computational Biology Introduction VAC 3 1 0 4 2022 Honour Basket 2: COMPUTATIONAL BIOLOGY"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course helps the learners to understand concepts in Genomics, Proteomics Computational Biology, Next Generation Sequencing, NGS Data Analysis and Systems biology. It enables the learners to understand various Next Generation Sequencing Techniques, analysis and interpretation of the NGS Data. Also, course introduces computational and mathematical analysis and modeling of complex biological systems and Systems Biology.",
                    "outcomes": "After the completion of the course, the student will be able to: Course Level Description Outcomes Describe the basic concepts of genomics, microarray, protein structure Understand CO 1 determination and prediction Explain the fundamental aspects drug discovery and molecular Apply CO 2 modelling Demonstrate Networks in Biology, types of networks and its Apply CO 3 representation Explain Next Generation sequencing Technologies and DNA Protein Understand CO 4 interaction analysis Illustrate Next Generation sequence analysis, Mapping approaches and Understand CO 5 algorithms",
                    "syllabus": "Genomics and Proteomics, Microarray, Analysis of microarray data, Proteins and peptides, Experimental Protein structure, Computer Aided Drug Discovery, Molecular modelling, Computer Aided Drug Discovery, Network Biology, (Next Generation Sequencing and analysis, NGS Data Analysis",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Module Contents No. of hours I Genes, Genes in genomes, Genomes of prokaryotes and Eukaryotes, Protein-coding 10 genes, RNA, Single-nucleotide polymorphisms, Microarray, Analysis of microarray data, Proteins and peptides, Experimental Protein structure identification, computational methods for protein structure prediction, Homology modelling, Protein folding and fold recognition II 10 Drug discovery pipeline, Drug target identification & validation, Active site identification, pharmacophore, Lead/Ligand identification, lead compound optimization, Binding energy calculation, Energy Minimization. Molecular modelling in drug discovery, concept of Molecular Dynamics, concept of Absorption, Distribution, Metabolism and Excretion (ADME), Quantitative Structure-Activity Relationships III 14 Transcriptional Regulatory Networks, Genes and DNA Regulatory Regions, Genetic Interaction Map, Protein Interaction Networks, Experimental methodologies to obtain Protein Interaction Data, Computational methods to Predict Protein-Protein Interactions, Visualization of Protein Interaction Networks, Metabolic Networks, Interacting Partners, Mathematical Representation IV 13 A Typical NGS Experimental Workflow, Next-Generation Sequencing (NGS) Technologies, Illumina Reversible Dye-Terminator Sequencing, Ion Torrent Semiconductor Sequencing, Pacific Biosciences Single Molecule Real-Time (SMRT) Sequencing, RNA-sequencing (RNA Seq), Protein-DNA Interaction Analysis (ChIP-Seq) V Base Calling, FASTQ File Format, and Base Quality Score, NGS Data 13 Quality Control and Preprocessing, Reads Mapping, Mapping Approaches and Algorithms, Selection of Mapping Algorithms and Reference Genome Sequences, SAM/BAM as the Standard Mapping File Format, Mapping File Examination and Operation, Tertiary Analysis MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks 130 Continuous Assessment Assignment : 15 marks 131 Honour Basket 3: COMPTER VISION Year of Category L T P Credit Advanced Concepts in CS2H30B Introduction Computer Vision VAC 3 1 0 4 2022"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course enables the learners to understand the advanced concepts in computer vision. The course covers the basics of image processing, imaging geometry, image segmentation, feature extraction, object recognition and classification and common applications of computer vision. This course helps the students to design solutions for complex real-life problems.",
                    "outcomes": "After the completion of the course, the student will be able to: Level Course Description Outcomes Understand CO 1 Illustrate the concepts of image formation and image model. Demonstrate various feature extraction and edge detection techniques. Apply CO 2 Apply CO 3 Apply edge-based and region-based image segmentation techniques. Apply CO 4 Understand and implement image recognition and classification methods. Understand CO 5 Explain the various applications of computer vision",
                    "syllabus": "Image Formation and Processing, Fundamentals of Image processing, Feature Extraction, Edges Image Segmentation, Image processing using OpenCV - blending, smoothing, and reshaping. Image Recognition and Classification, Object classification using CNNs, Applications,",
                    "textbooks": "1. David A. Forsyth & Jean Ponce, Computer vision ‚Äì A Modern Approach, Prentice Hall, 2002. 2. Richard Szeliski, Computer Vision: Algorithms and Applications, Springer. 3 Francesco Camastra, Alessandro Vinciarelli, ‚ÄúMachine Learning for Audio, Image and Video Analysi s: Theory and Applications‚Äù, Springer 2015.",
                    "references": "1. Reinhard Klette, ‚ÄúConcise Computer Vision: An Introduction into Theory and Algorithms‚Äù, Springer London, 2014. 2. Olivier Faugeras, ‚ÄúThree-Dimensional Computer Vision‚Äù, The MIT Press, 1993.",
                    "course_plan": "132 Module Contents No. of hours I Image formation and Image model- Components of a vision system- Cameras- camera 10 model and camera calibration-Radiometry- Light in space- Light in surface - Sources, shadows and shading. Fundamentals of Image processing: Basic steps of Image processing system sampling and quantization of an Image ‚Äì Basic relationship between pixels II Points and Patches ‚Äì Feature detectors, feature descriptors, feature matching, feature 10 tracking. Edges ‚Äì edge detection, edge linking. Lines - Successive approximation, Hough transforms, Vanishing points. III Classification of segmentation techniques, Edge detection, Edge linking, Thresholding, 14 Region growing, Region splitting and merging, Watershed based segmentation. Shadow detection and removal. Image processing using OpenCV - blending, smoothing, and reshaping. IV Shape based object classification, Motion based object classification, Viola Jones 13 Object Detection Framework, Object classification using CNNs, use of RCNN for object classification V Speech and Handwriting Recognition, Automatic Face Recognition, Video 13 Segmentation and Keyframe Extraction, Real-Time Hand Pose Recognition. MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 133"
                }
            ]
        },
        "SEMESTER VI": {
            "courses": [
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The course introduces students to the design of computer algorithms, as well as analysis of algorithms. Algorithm design and analysis provide the theoretical backbone of computer science and are a must in the daily work of the successful programmer. The goal of this course is to provide a solid background in the design and analysis of the major classes of algorithms. At the end of the course students will be able to develop their own versions for a given computational task and to compare and contrast their performance.",
                    "outcomes": ": After the completion of the course the student will be able to Course Description Level Outcomes Analyze any given algorithm and express its time and space Apply CO1 complexities in asymptotic notations Derive recurrence equations and solve it using Iteration, Apply CO2 Recurrence Tree, Substitution and Master‚Äôs Method to compute time complexity of algorithms. Illustrate Graph traversal algorithms & applications and CO3 Advanced Data structures like AVL trees and Disjoint set Apply operations. Demonstrate Divide-and-conquer, Greedy Strategy, Dynamic CO4 programming, Branch-and Bound and Backtracking algorithm Apply design techniques Classify a problem as computationally tractable or intractable, Understan CO5 and discuss strategies to address intractability d Identify the suitable design strategy to solve a given problem Apply CO6",
                    "syllabus": "Introduction to algorithm analysis, Advanced data structures and graph algorithms, Various algorithm design techniques, Introduction to Complexity Theory and Approximation Algorithms.",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Module Contents No. of hours I Characteristics of Algorithms, Criteria for Analysing Algorithms, Time and 13 Space Complexity - Best, Worst and Average Case Complexities, Asymptotic Notations - Big-Oh (O), Big- Omega (‚Ñ¶), Big-Theta (Œò), Little-oh (o) and Little- Omega (œâ) and their properties. Classifying functions by their asymptotic growth rate, Time and Space Complexity Calculation of simple algorithms. Analysis of Recursive Algorithms: Recurrence Equations, Solving Recurrence Equations ‚Äì Iteration Method, Recursion Tree Method, Substitution method and Master‚Äôs Theorem (Proof not required). II Self Balancing Tree - AVL Trees (Insertion and deletion operations with 12 all rotations in detail, algorithms not expected); Disjoint Sets- Disjoint set operations, Union and find algorithms. DFS and BFS traversals - Analysis, Strongly Connected Components of a Directed graph, Topological Sorting. III The Control Abstraction of Divide and Conquer- 2-way Merge sort, 12 Strassen‚Äôs Algorithm for Matrix Multiplication-Analysis. The Control Abstraction of Greedy Strategy- Fractional Knapsack Problem, Minimum Cost Spanning Tree Computation- Kruskal‚Äôs Algorithms - Analysis, Single Source Shortest Path Algorithm - Dijkstra‚Äôs Algorithm-Analysis. IV The Control Abstraction- The Optimality Principle- Matrix Chain 11 Multiplication-Analysis, All Pairs Shortest Path Algorithm - Floyd- Warshall Algorithm-Analysis. The Control Abstraction of Back Tracking ‚Äì The N Queen‚Äôs Problem. Branch and Bound Algorithm for Travelling Salesman Problem. V Tractable and Intractable Problems, Complexity Classes ‚Äì P, NP, NP- Hard 12 and NP-Complete Classes- NP Completeness proof of Clique Problem and Vertex Cover Problem- Approximation algorithms- Bin Packing, Graph Coloring. Randomized Algorithms (Definitions of Monte Carlo and Las Vegas algorithms), Randomized version of Quick Sort algorithm with analysis. Total Hours 60 139 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 140 CS1U30E MANAGEMENT OF Category L T P Credit Year of SOFTWARE Introduction SYSTEMS PCC 3 0 0 3 2022 PRE-REQUISITE: CS2U20A Object Oriented Programming using Python."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course provides fundamental knowledge in the Software Development Process. It covers Software Development, Quality Assurance, Project Management concepts and technology trends. This course enables the learners to apply state of the art industry practices in Software development.",
                    "outcomes": ": After the completion of the course the student will be able to Course Description Level Outcomes CO1 Demonstrate Traditional and Agile Software Development approaches Apply CO2 Prepare Software Requirement Specification and Software Design for Apply a given problem. Justify the significance of design patterns and licensing terms in Apply CO3 software development, prepare testing, maintenance and DevOps strategies for a project. Make use of software project management concepts while planning, Apply CO4 estimation, scheduling, tracking and change management of a project, with a traditional/agile framework. CO5 Utilize SQA practices, Process Improvement techniques and Apply Technology advancements in cloud based software models and containers & microservices.",
                    "syllabus": "Introduction to Software Engineering-Software process models- Process activities - Agile software development-case studies: An insulin pump control system. Mentcare - a patient information system for mental health care. Functional and non-functional requirements-Requirements engineering processes. Software Requirements Specification- Template - Design Concepts-Architectural Design - What is a component? - Designing Class-Based Components, Conducting Component level design, Component level design for web-apps-Object-oriented design using the UML-Review Techniques -Software testing strategies-Test automation-Overview of DevOps and Code Management-Software Evolution - Evolution processes, Software maintenance. Software Project Management - Risk management-Project Planning - Project scheduling - Configuration management - Software Quality- Software Process Improvement(SPI) - Cloud-based Software - Software as service. 141",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Module Contents No. of hours I Introduction to Software Engineering - Professional software 9 development, Software engineering ethics. Software process models - The waterfall model, Incremental development. Process activities - Software specification, Software design and implementation, Software validation, Software evolution. Coping with change - Prototyping, Incremental delivery, Boehm's Spiral Model. Agile software development - Agile methods, agile manifesto - values and principles. Agile development techniques, Agile Project Management. Case studies : An insulin pump control system. Mentcare - a patient information system for mental health care. II Functional and non-functional requirements, Requirements engineering 10 processes. Requirements elicitation, Requirements validation, Requirements change, Traceability Matrix. Developing use cases, Software Requirements Specification Template, Personas, Scenarios, User stories, Feature identification. Design concepts - Design within the context of software engineering, Design Process, Design concepts, Design Model. Architectural Design - Software Architecture, Architectural Styles, Architectural considerations, Architectural Design Component level design - What is a component?, Designing Class- Based Components, Conducting Component level design, Component level design for web-apps. Template of a Design Document as per ‚ÄúIEEE Std 1016-2009 IEEE Standard for Information Technology Systems Design Software Design Descriptions‚Äù. Case study: The Ariane 5 launcher failure. 142 III Object-oriented design using the UML, Design patterns, 11 Implementation issues, Open-source development - Open-source MARK licensing - GPL, LGPL, BSD. Review Techniques - Cost impact of DISTRIBUTION Software Defects, Code review and statistical analysis. Informal Review, Formal Technical Reviews, Post-mortem evaluations. Software testing strategies - Unit Testing, Integration Testing, Validation testing, System testing, Debugging, White box testing, Path testing, Control Structure testing, Black box testing, Testing Documentation and Help facilities. Test automation, Test-driven development, Security testing. Overview of DevOps and Code Management - Code management, DevOps automation, Continuous Integration, Delivery, and Deployment (CI/CD/CD). Software Evolution - Evolution processes, Software maintenance. IV Software Project Management - Risk management, Managing people, 8 Teamwork. Project Planning, Software pricing, Plan-driven development, Project scheduling, Agile planning. Estimation techniques, COCOMO cost modeling. Configuration management, Version management, System building, Change management, Release management, Agile software management - SCRUM framework. Kanban methodology and lean approaches. V Software Quality, Software Quality Dilemma, Achieving Software 7 Quality Elements of Software Quality Assurance, SQA Tasks , Software measurement and metrics. Software Process Improvement(SPI), SPI Process CMMI process improvement framework, ISO 9001:2000 for Software. Cloud-based Software - Virtualisation and containers, Everything as a service (IaaS, PaaS), Software as a service. Microservices Architecture -Microservices, Microservices architecture, Microservice deployment. Total Hours 45 Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks (Each student shall identify a software development problem and prepare Requirements Specification, Design Document, Project Plan and Test case documents for the identified problem as the assignment.) 143 Year of INDUSTRIAL Category L T P Cred HS0U30A Introduction ECONOMICS it & FOREIGN HSC 3 0 0 3 2020 TRADE PRE REQUISITE : NIL"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The course enables students to make better economic decisions in wage employment and entrepreneurship using economic alternatives and investment alternatives.",
                    "outcomes": "After the completion of the course, the student will be able to: Course Description Level Outcomes Explain the problem of scarcity of resources, consumer behaviour and the CO 1 equilibrium condition of demand and supply. Understand Demonstrate the production function and equilibrium condition of a producer CO 2 Understand Survey the functional requirement of a firm under various competitive CO 3 conditions. Analyse Infer the overall performance of the economy, the regulation of economic CO 4 fluctuations and its impact on various sections in the society. Analyse Compare the profitability of projects and businesses with the help of capital CO 5 budgeting methods Evaluate Determine the current impact of global economic policies on the business CO 6 opportunities of a firm Analyse",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "No. of Module Contents hours Scarcity and choice - Basic economic problems- PPC ‚Äì Firms and its objectives ‚Äì types of firms ‚Äì Utility ‚Äì Law of diminishing marginal utility ‚Äì Demand and its determinants I ‚Äì law of demand ‚Äì elasticity of demand ‚Äì measurement of elasticity and its applications ‚Äì Supply, law of supply and determinants of supply ‚Äì Equilibrium ‚Äì Changes in demand 8 and supply and its effects ‚Äì Consumer surplus and producer surplus (Concepts) ‚Äì Taxation and deadweight loss. Production function ‚Äì law of variable proportion ‚Äì economies of scale ‚Äì internal and external economies ‚Äì Isoquants, isocost line and producer‚Äôs equilibrium ‚Äì Expansion path ‚Äì Technical progress and its implications ‚Äì Cobb-Douglas production function - Cost concepts ‚Äì Social cost: private cost and external cost ‚Äì Explicit and implicit cost ‚Äì II 8 sunk cost - Short run cost curves - long run cost curves ‚Äì Revenue (concepts) ‚Äì Shutdown point ‚Äì Break-even point. Perfect and imperfect competition ‚Äì monopoly, regulation of monopoly, monopolistic III completion (features and equilibrium of a firm) ‚Äì oligopoly ‚Äì Kinked demand curve ‚Äì Collusive oligopoly (meaning) ‚Äì Non-price competition ‚Äì Product pricing ‚Äì Cost plus pricing ‚Äì Target return pricing ‚Äì Penetration pricing ‚Äì Predatory pricing ‚Äì Going rate 9 pricing ‚Äì Price skimming. Principles of taxation - Direct Tax ‚Äì Indirect Tax ‚Äì GST. Concepts of demonetization. Cryptocurrency Circular flow of economic activities ‚Äì Stock and flow Gross. National Income ‚Äì Concepts - Methods of measuring national income ‚Äì Inflation- causes and effects ‚Äì IV Measures to control inflation. Monetary and fiscal policies ‚Äì Business financing- Bonds and shares -Money market and Capital market ‚Äì Stock market ‚Äì Demat account and 11 Trading account - SENSEX and NIFTY. Capital Budgeting - Methods of Investment analysis - Pay back, ARR, NPV, IRR and B/C ratio 145 Advantages and disadvantages of international trade - Absolute and Comparative advantage theory - Heckscher - Ohlin theory - Balance of payments ‚Äì Components ‚Äì V Balance of Payments deficit and devaluation ‚Äì Trade policy ‚Äì Free trade versus protection ‚Äì Tariff and non-tariff barriers 9 Total hours 45 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 146 YEAR OF COMPREHENSIVE CATEGORY L T P CREDIT CS2U30I INTRODUCTION COURSE WORK PCC 1 0 0 1 2022 Preamble: The objective of this Course work is to ensure the comprehensive knowledge of each student in the most fundamental core courses in the curriculum. Five core courses credited from semesters 3, 4 and 5 are chosen for the detailed study in this course work. This course helps the learner to become competent in cracking GATE, placement tests and other competitive examinations Prerequisite: 1. Data Structures 2. Operating Systems 3. Computer Organization And Architecture 4. Database Management Systems 5. Introduction to Machine Learning Course Outcomes: After the completion of the course the student will be able to Course Outcomes Description Level CO1 Comprehend the concepts and applications of data Understand structures CO2 Comprehend the concepts, functions and algorithms in Understand Operating System CO3 Comprehend the organization and architecture of computer Understand systems CO4 Comprehend the fundamental principles of database design and Understand manipulation CO5 Comprehend the concepts in Machine Learning Understand Mark distribution Total Marks CIE ESE ESE Duration 50 0 50 1 hour End Semester Examination Pattern: Objective Questions with multiple choice, a maximum of four options. Question paper includes fifty questions of one mark each, distributed equally from all the five identified courses. 147 Course Categ Credi Year of Course Name L T P J Code ory t Introduction CS2U38C Robotics lab PCC 0 0 3 2 2022 COURSE OVERVIEW Robotics lab provides students with exposure to the common sensor and actuator interfacing, setting up mobile robots and familiarizing intelligent systems. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Interface different peripherals to arduino board CO 1 Apply Assemble a mobile robot with different sensors and actuators Apply CO 2 Familiarise about localisation of mobile robots Apply CO 3 Impart intelligence to robot using standard algorithms Apply CO 4 Apply CO 5 Familiarise the robot navigation SYLLABUS ROS Essentials ‚Ä¢ Installing and Configuring Your ROS Environment‚ÄîROS Kinetic/Melodic/Compatible versions ‚Ä¢ Familiarisation with ROS (Master, nodes, topics, messages, services, parameters and actions) ‚Ä¢ Familiarisation with ROS Tools ‚Äì Gazebo , Moveit , Rviz ‚Ä¢ Creating Workspace and Package in ROS LIST OF EXPERIMENTS Any 4 experiments from each group are mandatory Part A: Interfacing sensors and actuators 1.Familiarisation of Arduino IDE, Arduino microcontroller I/O interfacing(LED, LCD, Serial Monitor) 2. Interfacing IR and Ultrasonic sensor with Arduino 3. Interfacing DC motors with arduino - speed and direction control 4. Interfacing Servo Motors with Arduino - angle of rotation 148 5. Calibration of sensors-sonar, IR sensors and obtain the calibration curve 6. Mobile Robot assembly 7. Networking with Arduino: GSM and Bluetooth Part B: Intelligent systems 8. Writing a Simple Publisher and Subscriber, Simple Service and Client, Recording and playing back data, Reading messages from a bag file(Python/C++) 9. Localization of a mobile robot using LIDAR (ROS) 10. Touch Sensors interfacing and feedback system 11. Line following Robot using IR sensor 12. Obstacle avoidance of a mobile robot while moving to a point. 13. Object detection using any one standard algorithm 14. Navigation simulation using turtlebot using ROS REFERENCES 1. Siegwart, Roland, Introduction to Autonomous Mobile Robots, Cambridge, Mass. : MIT Press, 2nd ed. 2. Peter Corke, Robotics, Vision and Control: Fundamental Algorithms in MATLAB, Springer 2021 3. John. J. Craig, Introduction to Robotics ( Mechanics and control), Pearson Education Asia 2002. 4. S K Saha, Introduction to Robotics by Mc Graw Hill Education, 2014. 5. R K Mittal and I J Nagrath, ‚ÄúRobotics and Control‚Äù, Tata McGraw Hill, New Delhi,2003. 6. Dahiya, Ravinder S., Valle, Maurizio, Robotic Tactile Sensing, Springer, 2013. https://emanual.robotis.com/docs/en/platform/turtlebot3/simulation MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 75 75 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 15 marks Continuous Evaluation in Lab : 30 marks Continuous Assessment Test : 15 marks Viva-voce : 15 marks 149 Year of Category L T P Credit CS2U39A MINI Introduction PROJECT PCC 0 0 3 2 2022 PRE-REQUISITE: A sound knowledge in any programming language and fundamental concepts of Software Engineering."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objective of this course is to apply the fundamental concepts of Software Engineering principles for the effective development of an application/research project. This course helps the learners to practice the different steps to be followed in the software development process such as literature review and problem identification, preparation of Software Requirement Specification &Software Design Document (SDD), testing, development and deployment. Mini project enables the students to boost their skills, widen the horizon of thinking and their ability to resolve real life problems.",
                    "outcomes": ": After the completion of the course the student will be able to Course Description Level Outcomes Identify technically and economically feasible problems Apply CO1 Identify and survey the relevant literature for getting exposed to Apply CO2 related solutions and get familiarized with software development processes Perform requirement analysis, identify design methodologies and Apply CO3 develop adaptable & reusable solutions of minimal complexity by using modern tools & advanced programming techniques Prepare technical report and deliver presentation Apply CO4 Apply engineering and management principles to achieve the Apply CO5 goal of the project Guidelines Student Groups with 3 or 4 members should identify a topic of interest in consultation with a Faculty/Advisor. Review the literature and gather information pertaining to the chosen topic. State the objectives and develop a methodology to achieve the objectives. Carryout the design/fabrication or develop codes/programs to achieve the objectives by strictly following steps specified in the teaching plan. Innovative design concepts, 150 performance, scalability, reliability considerations, aesthetics/ergonomic, user experience and security aspects taken care of in the project shall be given due weight. The progress of the mini project is evaluated based on a minimum of two reviews. The review committee may be constituted by the Head of the Department comprising HoD or a senior faculty member, Mini Project coordinator and project guide. The internal evaluation shall be made based on the progress/outcome of the project, reports and a viva-voce examination, conducted internally by a 3-member committee. A project report is required at the end of the semester. The project has to be demonstrated for its full design specifications. MARK DISTRIBUTION Total Marks CIE Marks ESE Marks 150 75 75 CONTINOUS ASSESSMENT EVALUATION PATTERN Attendance 10 marks Project Guide 15 marks Project Report 10 marks 151 Minors Course Year of Course Name Category L T P J Credit Code Introduction INTRODUCTION CS0M 30D TO SOFTWARE VAC 3 1 0 4 2022 TESTING COURSE OVERVIEW This is a course in theoretical computer science th at includes test cases for white-box, black- box, and grey-box approaches. This course describes the various techniques for test case design used to test software artifacts, including requirements, design, and code. The course includes different techniques for test case design based on graphs, programming language syntaxes and inputs. The course also covers symbolic execution using PEX tool. Prerequisite: NIL COURSE OUTCOMES After the completion of the course, the student will b e able to: Course Description Outcomes List a range of different software testin g techniques and be able to apply CO 1 specific unit testing method to the projects using Junit. Understand Explain mutation testing method for a given piece of code to identify CO 2 hidden defects that can‚Äôt be detected using other testing methods. Understand Explain graph coverage criteria in term s of control flow graph and data CO 3 flow graph for a given program Understand Demonstrate the importance of black-b ox approaches in terms of domain CO 4 and functional testing. Understand Understand CO 5 Illustrate the use of PEX tool with symbolic execution. Understand",
                    "syllabus": "Software testing, Types of Testing- Unit testing, integration testing, System testing, Acceptance testing, Beta testing, Concept of Unit testing. Static Unit testing. Dynamic Unit testing - Control Flow testing, Data Flow testing, Domain testing, Overview of Graph Coverage Criteria. Structural Graph Coverage Criteria - Node/vertex coverage, Edge coverage, Edge pair coverage, Path coverage, Complete path coverage, Prime path coverage, Complete round trip coverage, Simple round trip coverage. Data Flow Criteria - du paths, du pairs., Coverage criteria on inheritance graph, Data flow at the design level, Inter-procedural DU pairs, Coupling du-pairs example. Example - Quadratic Root. Case Study - Graph Based testing using JUnit Framework. Domain Testing / Input Space Partitioning - Partitions of a set. Input domain modelling - Interface-based approach, Introduction to Grey Box testing 152",
                    "textbooks": "1. Paul Ammann and JeffOffutt ,Introduction t o Software Testing. KshirasagarNaik and PriyadarshiTripathy, S oftware Testing And Quality 2. Assurance: Theory And Practice.",
                    "references": "1. https://www.csc.ncsu.edu/academics/underg rad/honors/thesis/muclipsebinder.pdf - Muclipse tutorial. 2. King, James C, ‚ÄúSymbolic Execution and Program Testing‚Äù, Association for Computing Machinery, July 1976.",
                    "course_plan": "Module Contents Hours Introduction to Software Testing : Some Popular Errors ‚Äì Ariane 5, Therac 25, Intel Pentium Bug. What is Software testing? Why should it be tested? Software Quality, Role of Testing. Testing Process - Level 0 thinking, Level 1 thinking, Level 2 thinking, Level 3 thinking, Level 4 thinking. Software Testing Terminologies - Verification, Validation and I 12 Testing, Faults, Error and Bug, Test cases, Coverage Criteria. Types of Testing- Unit testing, integration testing, System testing, Acceptance testing, Beta testing, Functional testing, Stress testing, Performance testing, Usability testing and Regression testing. Testing Methods - Black Box testing, White Box testing, Grey Box testing. Unit Testing : Concept of Unit testing. Static Unit testing. Dynamic Un it testing - Control Flow testing, Data Flow testing, Domain testing, II Functional Program testing. Mutation testing - Mutation and Mutants, 12 Mutation operators, Mutation score. Junit - Framework for Unit testing. Case Study - Mutation testing using Junit and Muclipse. Unit Testing - White Box Approaches : Overview of Graph Coverag e Criteria. Structural Graph Coverage Criteria - Node/vertex coverage, Edge coverage, Edge pair coverage, Path coverage, Complete path coverage, Prime path coverage, Complete round trip coverage, Simple round trip coverage. Data Flow Criteria - du paths, du pairs. Subsumption Relationships among Graph Coverage Criteria. Graph Coverage for Source Code - Control flow III graphs for code, CFG: If statement, CFG: If statement with return, CFG: 12 Switch-case, CFG: Loops, CFG: Exceptions (try-catch). Example program ‚Äì Statistics. Graph Coverage for Design Elements - Call graphs and classes, Class inheritance testing: Coverage criteria, Coverage criteria on inheritance graph, Data flow at the design level, Inter-procedural DU pairs, Coupling du- pairs example. Example - Quadratic Root. Case Study - Graph Based testing using JUnit Framework Unit Testing - Black Box Approaches : Domain Testing / Input Spac e Partitioning - Partitions of a set. Input domain modelling - Interface-based IV approach, Functionality-based approach. Identifying values. Multiple 12 partitions of the inputdomain - All Combinations Coverage (ACoC), Each Choice Coverage (ECC), Pair-wise Coverage, T-wise Coverage, Base 153 Choice Coverage, Multiple Base Choices Coverage. TriTyp example. Functional Testing - Functional Testing Concepts of Howden. Functional MARK testing - Important Steps. Types of Functional testing - Equivalence Class Partitioning, Boundary Value Analysis, Decision Tables, Random Testing. Case Study - Black Box testing approaches using Junit. Grey Box Testing Approaches : Introduction to Grey Box testing - Wh y Grey Box testing, Gray Box Methodology, Advantages and Disadvantages. Techniques of Grey Box Testing - Matrix Testing, Regression Testing, V 12 Orthogonal Array Testing or OAT, Pattern Testing. An Introduction to PEX - Parameterized Unit Testing, The Testing Problem. Symbolic Execution ‚Äì Example, Symbolic execution tree. PEX application Case Study ‚Äì PEX. 60T otal Hou rs DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 154 Course Year of Course Name Category L T P J Credit Code Introduction CONCEPTS IN CS0M 30E VAC 3 1 0 4 2022 DEEP LEARNING COURSE OVERVIEW This course aims to introduce the learner to an overview of the concepts and algorithm s involved in deep learning. Deep learning is a subfield of machine learning, a subfield of artificial intelligence. Basic concepts and application areas of machine learning, deep networks, convolutional neural network and recurrent neural network are covered here. This is a foundational program that will help students understand the capabilities, challenges, and consequences of deep learning and prepare them to participate in the development of leading-edge AI technology. They will be able to gain the knowledge needed to take a definitive step in the world of AI. Prerequisite: Sound knowledge in Basics of linear algebra and probability theory. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Level Description Outcomes CO 1 Demonstrate basic concepts in machine learning. Understand Illustrate the validation process of machine learning models using hyper- CO 2 parameters and validation sets. Understand Demonstrate the concept of the feed forward neural network and its training Apply CO 3 process. Build CNN and Recurrent Neural Network (RNN) models for different use Apply CO 4 cases. Use different neural network/deep learning models for practical Apply CO 5 applications. SYLLABUS Neural Networks. Introduction to optimization‚Äì Convolutional Neural Networks Practic al challenges of common deep learning architectures- early stopping, parameter sharing, dropout. Case study: AlexNet, VGG, ResNet. Recurrent neural networks Applications ‚Äì computer vision, speech recognition, natural language processing, common word embedding: continuous Bag-of-Words, Word2Vec, global vectors for word representation (GloVe). Research Areas ‚Äì autoencoders, representation learning, boltzmann machines, deep belief networks. TEXT BOOKS Ian Goodfellow, YoshuaBengio, Aaron Courville, Deep Learning, MIT Press 20 15 1. ed. Aston Zhang, Zachary C. Lipton, Mu Li, and Alexander J. Smola, Dive into 2. Deep Learning, August 2019. 3. Neural Networks and Deep Learning, Aggarwal, Charu C., c Springer 155 International Publishing AG, part of Springer Nature 2018 REFERENCES 1. Neural Smithing: Supervised Learning in Feedforward Artificial Neural Networ ks by Russell Reed, Robert J MarksII, A Bradford Book,2014 2. Practical Convolutional Neural Networks by MohitSewak, Md. Rezaul Kari m, PradeepPujari,Packt Publishing 2018 3. Hands-On Deep Learning Algorithms with Python by SudharsanRavichandran,Packt Publishing 2019 4. Deep Learning with Python by Francois Chollet,Manning Publications Co.,2018 COURSE PLAN Module Contents Hours Introduction: Key components - Data, models, objective functions, optimization algorithms, Learning algorithm. Supervised learning- regression, classification, tagging, web search, page ranking, recommender I systems, sequence learning, Unsupervised learning, Reinforcement 12 learning, Historical Trends in Deep Learning. Other Concepts - overfitting, underfitting, hyperparameters and validation sets, estimators, bias and variance. Optimization and Neural Networks : Neural Networks ‚ÄìPerceptron, Gradient Descent solution for Perceptron, Multilayer perceptron, activation functions, architecture design, chain rule, back propagation, II 12 gradient based learning. Introduction to optimization‚Äì Gradient based optimization, linear least squares. Stochastic gradient descent, Building ML algorithms and challenges. Convolutional Neural Network : Convolutional Neural Networks ‚Äì convolution operation, motivation, pooling, Structure of CNN, Convolution and Pooling as an infinitely strong prior, variants of III convolution functions, structured outputs, data types, efficient convolution 12 algorithms. Practical challenges of common deep learning architectures- early stopping, parameter sharing, dropout. Case study: AlexNet, VGG, ResNet. Recurrent Neural Network : Recurrent neural networks ‚Äì Computational graphs, RNN design, encoder ‚Äì decoder sequence to sequence IV 12 architectures, deep recurrent networks, recursive neural networks, modern RNNs LSTM and GRU, Practical use cases for RNNs. Application Areas : Applications ‚Äì computer vision, speech recognition, natural language processing, common word embedding: continuous Bag- V of-Words, Word2Vec, global vectors for word representation (GloVe). 12 Research Areas ‚Äì autoencoders, representation learning, boltzmann machines, deep belief networks. Total Hours 60 156 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 157 Course Year of Course Name Category L T P J Credit Code Introduction WIRELESS NETWORKS AND CS0M 30F VAC 3 1 0 4 2022 IoT APPLICATIONS COURSE OVERVIEW This course equips the learners with fundamental wireless technologies for the Internet of Things(IoT) and the IoT ecosystem. It covers the underlying concepts in wireless networks, communication mechanisms, protocols, hardware, software, and the cloud platforms for IoT. The students will be able to design smart IoT applications for real world problems. Prerequisite: Sound knowledge in Data Communication, Computer Networks and Programming in C. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Outcomes Recognize wireless technologies required for IoT ecosystem (Cognitive CO 1 Knowledge Level : Understand) Perceive the concept of IoT and M2M architecture, IoT examples, and Data CO 2 Management in IoT (Cognitive Knowledge Level :Apply) Outline the hardware components used in IoT including Sensors, Actuators and CO 3 development boards (Cognitive Knowledge Level : understand) Explain the software components of IoT (Cognitive Knowledge Level CO 4 :Understand) Demonstrate the protocols used in IoT and build IoT Programs (Cognitive CO 5 Knowledge Level : Apply) Demonstrate the protocols used in IoT and build IoT Programs (Cognitive Knowledge CO 6 Level : Apply) SYLLABUS Module- 1 ( Introduction to IoT and wireless technologies required for IoT ) Internet of Things, Role of Things and the Internet, Wireless IoT. Wireless Networks - Network Topologies, Types of Networks. Role of Wireless Standards in IoT. Protocol Stack - OSI Model, TCP/IP Model, IEEE 802 Reference Model, Protocols for Wireless IoT. Bluetooth - Transceiver, Frequency Channels, Typical Range, Access and Spread Spectrum, Modulation and Data Rate, Error Correction and Detection, Network Topology. ITU G.9959, Zwave, IEEE 802.15.4, Zigbee Specification, Thread, WiFi, 6LowPAN, IPv6, LoRaWAN. Module- 2 (IoT architecture, Data and Device management) Internet of Things - IoT Architectural View, Technology Behind IoT - Server End Technology, Sources of Internet of Things, M2M Communication. IoT Application Areas. IoT Examples. IoT Data 158 Management - Device Management Gateways. Design Principles for Web Connectivity - Web Communication Protocols for Connected Devices, Web Connectivity for Connected Devices using Gateways. Internet Connectivity Principles ‚Äì Internet Connectivity, Internet based communication, IP addressing in the IoT. Module- 3 (Data Acquiring and Enabling Technologies) Data Acquiring and Storage for IoT Sevices- Organization of Data, Big data, Acquiring Methods, Management Techniques, Analytics, Storage Technologies. Cloud Computing for Data storage - IoT Cloud based Services using Xively, Nimbits, and Other Platforms. Sensor Technologies for IoT Devices - Sensor Technology, Participatory Sensing, Industrial IoT and Automotive IoT, Actuators for Various Devices, Sensor Data Communication Protocols, Wireless Sensor network Technology Module-4 (Prototyping the Embedded Devices for IoT) Embedded Computing Basics, Embedded Hardware Unit. Embedded Platforms for Prototyping - Arduino, Intel Galileo, Intel Edison, Raspberry Pi, BeagleBone, mBed. Prototyping and Designing the Software for IoT Applications- Introduction, Prototyping Embedded DeviceSoftware- Programming using Arduino, Programming for an Arduino Controlled Traffic Control Lights at a Road Junction, Basic Arduino Programs to Blink LED, Find the Distance using Ultrasonic Sensor, Estimate Room Temperature, Measuring Soil Moisture Level Module 5 (Business Models and Case Studies) Business Models and Processes using IoT. Value Creation in the Internet of Things. Cloud PaaS- Xively, Nimbits, IBM Bluemix, CISCO IoT, AWS IoT, TCS Connected AWS Platform, Case studies- Smart Home, Smart Environment, Smart healthcare, Smart agriculture TEXT BOOKS Daniel Chew, ‚ÄúWireless Internet of Things -A Guide to the lower layers‚Äù, IEEE Standards 1. and Association, IEEE Press, Wiley Rajkamal, ‚ÄúInternet of Things : Architecture and Design Principles‚Äù, McGraw Hill 2. (India) Private Limited. REFERENCES 1. ArshadeepBahga, Vijay Madisetti, ‚ÄúInternet of Things: A hands-on approach‚Äù, University Press, 2015 (First edition) 2. Dieter Uckelmann, Mark Harrison, Michahelles Florian (Ed.), Architecting the internet of things, Springer, 2011 3. Dr. Ovidiu Vermesan, Dr. Peter Friess, Internet of Things: Converging Technologies for Smart Environments and Integrated Ecosystems, River Publishers, 2013 4. Simon Monk, ‚ÄúProgramming Arduino: Getting Started with Sketches‚Äù, McGraw Hill Publications COURSE PLAN Module Contents Hours Introduction to IoT and wireless technologies required for IoT : Internet of I Things, Role of Things and the Internet, Wireless IoT. Wireless Networks - 12 Network Topologies, Types of Networks. Role of Wireless Standards in IoT. 159 Protocol Stack - OSI Model, TCP/IP Model, IEEE 802 Reference Model, Protocols for Wireless IoT. Bluetooth - Transceiver, Frequency Channels, Typical Range, Access and Spread Spectrum, Modulation and Data Rate, Error Correction and Detection, Network Topology. ITU G.9959, Zwave, IEEE 802.15.4, Zigbee Specification, Thread, WiFi, 6LowPAN, IPv6, LoRaWAN. IoT architecture, Data and Device management : Internet of Things - IoT Architectural View, Technology Behind IoT - Server End Technology, Sources of Internet of Things, M2M Communication. IoT Application Areas. IoT Examples. IoT Data Management - Device Management Gateways. Design II 12 Principles for Web Connectivity - Web Communication Protocols for Connected Devices, Web Connectivity for Connected Devices using Gateways. Internet Connectivity Principles ‚Äì Internet Connectivity, Internet based communication, IP addressing in the IoT. Data Acquiring and Enabling Technologies : Data Acquiring and Storage for IoT Sevices- Organization of Data, Big data, Acquiring Methods, Management Techniques, Analytics, Storage Technologies. Cloud Computing for Data III storage - IoT Cloud based Services using Xively, Nimbits, and Other Platforms. 12 Sensor Technologies for IoT Devices - Sensor Technology, Participatory Sensing, Industrial IoT and Automotive IoT, Actuators for Various Devices, Sensor Data Communication Protocols, Wireless Sensor network Technology Prototyping the Embedded Devices for IoT : Embedded Computing Basics, Embedded Hardware Unit. Embedded Platforms for Prototyping - Arduino, Intel Galileo, Intel Edison, Raspberry Pi, BeagleBone, mBed. Prototyping and Designing the Software for IoT Applications- Introduction, Prototyping IV 12 Embedded DeviceSoftware- Programming using Arduino, Programming for an Arduino Controlled Traffic Control Lights at a Road Junction, Basic Arduino Programs to Blink LED, Find the Distance using Ultrasonic Sensor, Estimate Room Temperature, Measuring Soil Moisture Level Business Models and Case Studies : Business Models and Processes using IoT. Value Creation in the Internet of Things. Cloud PaaS- Xively, Nimbits, IBM V 12 Bluemix, CISCO IoT, AWS IoT, TCS Connected AWS Platform, Case studies- Smart Home, Smart Environment, Smart healthcare, Smart agriculture Total Hours 60 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks 160 Continuous Assessment Assignment : 15 marks 161 Honour Basket 1: SECURITY IN COMPUTING Course Year of Course Name Category L T P J Credit Code Introduction NETWORK CS1H30D VAC 3 1 0 4 2022 SECURITY COURSE OVERVIEW The purpose of this course is to create a better understanding of the network security concepts. This course covers network security standards, email security services, web security mechanisms, firewalls and wireless security mechanisms. This course helps the learner to gain insight into the key aspects of secure network communication and enables to apply in real-life scenarios. Prerequisite: A sound background in Number Theory and Cryptographic Algorithms COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Outcomes Identify the key aspects of security, intrusion detection systems and digital signature CO 1 schemes (Cognitive Knowledge Level: Apply) Explain the security standards used in network communication (Cognitive Knowledge CO 2 Level:Understand) Identify the mechanisms in email security services (Cognitive Knowledge Level: CO 3 Apply) Summarize the protocols used to provide web security (Cognitive Knowledge Level: CO 4 Understand) Explain the fundamental concepts of wireless network security and firewalls (Cognitive CO 5 Knowledge Level: Understand) SYLLABUS Module ‚Äì 1 (Network Security Basics) Introduction to network security - Security requirements, Challenges of security, Network security model. Malicious programs ‚Äì Worms, Viruses, Trojans, Spyware, Adware. Intrusion Detection Systems (IDS) - Uses, Techniques. Digital signatures - ElGamal, Schnorr, Digital Signature Standard (DSS). Module ‚Äì 2 (Network Security Standards) Kerberos v4 ‚Äì Configuration, Authentication, Encryption, Message formats. Kerberos v5 ‚Äì Cryptographic algorithms, Message formats. Public Key Infrastructure (PKI) ‚Äì Trust models, Revocation. Real-time communication security ‚Äì Perfect Forward Secrecy (PFS), Denial-ofService protection, Endpoint identifier hiding, Live partner reassurance. Internet Protocol Security (IPSec) - Authentication Header (AH), Encapsulating Security Payload (ESP), Internet Key Exchange (IKE) phases. Module ‚Äì 3 (Email Security) Introduction to email security - Security services for email, Establishing keys, Privacy, Authentication, Message integrity, Non-repudiation. Privacy Enhanced Mail (PEM) ‚Äì Encryption, Source authentication and integrity protection, Message formats. Secure/Multipurpose Internet Mail Extensions (S/MIME) ‚Äì Messages, Differences from PEM. Pretty Good Privacy (PGP) - Encoding, Certificate and key revocation, Anomalies, Object formats. 162 Module ‚Äì 4 (Web Security) Introduction to web security - Web security considerations, Threats. Secure Sockets Layer (SSL) ‚Äì Architecture, Protocols, Transport Layer Security (TLS) ‚Äì Differences from SSL. Hypertext Transfer Protocol Secure (HTTPS) ‚Äì Connection initiation, Closure. Secure Shell (SSH) ‚Äì Transport layer protocol, User authentication protocol, Connection protocol. Module ‚Äì 5 (Wireless Network Security and Firewalls) IEEE 802.11 Wireless LAN - Network components, Architectural model, Services. IEEE 802.11i wireless LAN security - Services, Phases of operation. Wired Equivalent Privacy (WEP), Wi-Fi Protected Access (WPA), WPA2, Wireless Application Protocol (WAP) ‚Äì Services, Protocol architecture. Firewalls ‚Äì Need for firewalls, Packet filters, Circuit-level firewalls, Application layer firewalls. TEXT BOOKS 1. C. Kaufman, R. Perlman and M. Speciner, ‚ÄúNetwork Security: Private Communication in a Public World‚Äù, 2/e, PHI. 2. William Stallings, ‚ÄúCryptography and Network Security Principles and Practice‚Äù, 5/e, Pearson REFERENCES 1. Behrouz A. Forouzan, Debdeep Mukhopadhyay, ‚ÄúCryptography and Network Security‚Äù, 3/e, Tata McGraw Hill. 2. Tyler Wrightson, ‚ÄúWireless Network Security A Beginner‚Äôs Guide‚Äù, 2012, Tata McGraw Hill. 3. William Stallings, ‚ÄúNetwork Security Essentials: Applications and Standards‚Äù, 4/e, Prentice Hall. 3. Schiller J., Mobile Communications, 2/e, Pearson Education. 4. Roberta Bragg et. al., ‚ÄúNetwork Security: The Complete Reference‚Äù, Tata McGraw Hill. COURSE PLAN Module Contents Hours Introduction to network security - Security requirements, Challenges of security, Network security model. Malicious programs ‚Äì Worms, Viruses, Trojans, Spyware, I 12 Adware. Intrusion Detection Systems (IDS) - Uses, Techniques. Digital signatures - ElGamal, Schnorr, Digital Signature Standard (DSS). Module ‚Äì 2 (Network Security Standards) Kerberos v4 ‚Äì Configuration, Authentication, Encryption, Message formats. Kerberos v5 ‚Äì Cryptographic algorithms, Message formats. Public Key Infrastructure (PKI) ‚Äì Trust models, II Revocation. Real-time communication security ‚Äì Perfect Forward Secrecy (PFS), 12 Denial-ofService protection, Endpoint identifier hiding, Live partner reassurance. Internet Protocol Security (IPSec) - Authentication Header (AH), Encapsulating Security Payload (ESP), Internet Key Exchange (IKE) phases. Module ‚Äì 3 (Email Security) Introduction to email security - Security services for email, Establishing keys, Privacy, Authentication, Message integrity, Non- repudiation. Privacy Enhanced Mail (PEM) ‚Äì Encryption, Source authentication and III 12 integrity protection, Message formats. Secure/Multipurpose Internet Mail Extensions (S/MIME) ‚Äì Messages, Differences from PEM. Pretty Good Privacy (PGP) - Encoding, Certificate and key revocation, Anomalies, Object formats. 163 Module ‚Äì 4 (Web Security) Introduction to web security - Web security considerations, Threats. Secure Sockets Layer (SSL) ‚Äì Architecture, Protocols, IV Transport Layer Security (TLS) ‚Äì Differences from SSL. Hypertext Transfer 12 Protocol Secure (HTTPS) ‚Äì Connection initiation, Closure. Secure Shell (SSH) ‚Äì Transport layer protocol, User authentication protocol, Connection protocol. Module ‚Äì 5 (Wireless Network Security and Firewalls) IEEE 802.11 Wireless LAN - Network components, Architectural model, Services. IEEE 802.11i wireless LAN security - Services, Phases of operation. Wired Equivalent Privacy (WEP), Wi-Fi V 12 Protected Access (WPA), WPA2, Wireless Application Protocol (WAP) ‚Äì Services, Protocol architecture. Firewalls ‚Äì Need for firewalls, Packet filters, Circuit-level firewalls, Application layer firewalls. Total Hours 60 164 Honour Basket 2: COMPUTATIONAL BIOLOGY Course Year of Course Name Category L T P J Credit Code Introduction MACHINE LEARNING IN CS2H30C VAC 3 1 0 4 2022 COMPUTATIONAL BIOLOGY COURSE OVERVIEW This course is intended to provide the learners a outlook towards application of Machine learning algorithms in the field of computational biology. This course helps the learners to apply the Machine learning methods - clustering algorithms, dimensionality reduction, decision drees, Artificial Neural Network, Support Vector Machine to the computational biology problems. Also the course discuss Challenges of Machine Learning in Computational Biology and Future directions of Machine Learning in Computational Biology Prerequisite: Basic background in Bioinformatics and Machine Leaning COURSE OUTCOMES After the completion of the course, the student will be able to: Course Level Description Outcomes Describe the basic concepts of Machine Leaning, Classification, regression and Under CO 1 clustering problems, parameters and measures stand Apply CO 2 Demonstrate the clustering algorithm on computational biology problems Explain Dimensionality reduction techniques and Decision Trees in computational Apply CO 3 biology Illustrate Feature Extraction and Pattern recognition and Classification in the domain of Apply CO 4 Computational Biology analysis Under CO 5 Explain the role and challenges of Machine Learning in Computational stand SYLLABUS TEXT BOOKS 1. Statistical Modelling and Machine Learning Principles for Bioinformatics Techniques, Tools, and Applications. Germany, Springer Singapore, 2020. 2. Yang, ZhengRong. Machine Learning Approaches to Bioinformatics. Singapore, World Scientific Publishing Company, 2010. REFERENCES 165 1. Izadkhah, Habib. Deep Learning in Bioinformatics: Techniques and Applications in Practice. Netherlands, Elsevier Science, 2022. 2. Agapito, Giuseppe, et al. Artificial Intelligence in Bioinformatics: From Omics Analysis to Deep Learning and Network Mining. Netherlands, Elsevier Science, 2022. 3. Data Analytics in Bioinformatics: A Machine Learning Perspective. United States, Wiley, 2021. 4. Michailidis, George, et al. Introduction to Machine Learning and Bioinformatics. United Kingdom, CRC Press, 2008. 5. Zhang, Yanqing, and Rajapakse, Jagath C, Machine Learning in Bioinformatics, Germany, Wiley, 2009. 6. Baldi, Professor Pierre, et al. Bioinformatics, Second Edition: The Machine Learning Approach. India, Bradford, 2001. COURSE PLAN Module Contents Hours Overview of Machine Learning- Overview of Machine Learning, fitting predictive models to data, Supervised and unsupervised learning, Classification, regression and I clustering problems, Loss or cost functions. Parameters and hyperparameters, 12 Training. validation and testing, Inductive bias and the bias variance trade-off, Use of clustering models. Clustering problems Computational Biology Hierarchical Clustering, Partition Clustering, Overview Model-Based Clustering, k-Means clustering, k-Means clustering algorithm, Advantages, Disadvantages, illustrative example of kMeans II 12 clustering, Clustering for creating phylogenetic trees, Using Clustering Approach to Identify Patients‚Äô Subtypes, Application of clustering algorithms on gene expression data. Supervised techniques for Computational Biology- Proteomics Dataset, Data Pre- processing Algorithms, Dimension and Feature Subset Selection, Dimensionality reduction - Principal Component Analysis (PCA), Partial Least Square (PLS), Linear III 12 Discriminant Analysis (LDA), Protein Classification, Decision Trees in Bioinformatics, Proteomic Mass Spectra Classification Using Decision Tree Technique. Machine-Learning Algorithms for Computational Biology- Machine-Learning Algorithms for Feature Selection from Gene Expression Data, Feature Extraction and Pattern recognition from sequence data, measures of a Feature. Artificial Neural IV 12 Network (ANN) in Bioinformatics, Genetic Algorithms (GA) in Bioinformatics, Designing ANN for Bioinformatics, ANN in Protein Bioinformatics, Support Vector Machine with Feature Elimination. Scope of Machine Learning in Computational Biology-Role of Machine Learning in Computational Biology, Creation and analysis of sequence data, Challenges of Machine Learning in Computational Biology, Data Errors, Mean Square Error V 12 Generative versus Discriminative, Approximation Versus Explanation, Single Versus Multiple Methods, Future directions of Machine Learning in Computational Biology. Total Hours 60 166 167 Honour Basket 3: COMPUTER VISION Course Year of Course Name Category L T P J Credit Code Introduction IMAGE AND CS2H30D VIDEO VAC 3 1 0 4 2022 PROCESSING COURSE OVERVIEW This course enables the learners to understand how digital images are stored and processed. The learners are exposed to different spatial and frequency domain methods for image enhancement, image restoration techniques, morphological operations that could be performed on digital images and also various image and video compression techniques. The course also gives an introduction to the basics of video processing and video segmentation. Prerequisite: Advanced Computer Graphics, Advanced Concepts in Computer Vision COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Understan CO 1 Summarize the steps of digital image processing and pixel relationships. d CO 2 Apply spatial and frequency domain methods for image enhancement. Apply Apply restoration techniques and morphological operations on digital CO 3 Apply images. CO 4 Compare different methods for digital image and video compression. Apply Understan CO 5 Understand the basics of video and video segmentation d SYLLABUS pocessing Image Enhancement: Spatial Domain methods - Gray level transformations, Histogram Processing, Fundamentals of Spatial Filtering, ), Discrete Wavelet transforms. Frequency Domain methods: Basics of filtering in frequency domain, image smoothing, image sharpening, homomorphic filtering, , Periodic Noise reduction by frequency domain filtering. Morphological Operations: Erosion, Dilation, Video processing TEXT BOOKS 1. Gonzalez and Woods , ‚ÄúDigital Image Processing‚Äù, 3rd edition , Pearson, 2009. 2. Li, Ze-Nian, Mark S. Drew, and Jiangchuan Liu. ‚ÄúFundamentals of multimedia‚Äù, Pearson Prentice Hall, 2004. 3. Bovik, Alan C. ‚ÄúHandbook of image and video processing‚Äù, Academic press, 2010. REFERENCES 1. David A. Forsyth & Jean Ponce, Computer vision ‚Äì A Modern Approach, Prentice Hall, 2002. 168 2. Richard Szeliski, Computer Vision: Algorithms and Applications, Springer. 3. Maheshkumar H Kolekar, ‚ÄúIntelligent Video Surveillance Systems: An Algorithmic Approach‚Äù, CRC Press. 4. Francesco Camastra, Alessandro Vinciarelli, ‚ÄúMachine Learning for Audio, Image and Video Analysis: Theory and Applications‚Äù, Springer 2015. 5. M. Tekalp ,‚ÄùDigital video Processing‚Äù, Prentice Hall International 6. Relf, Christopher G.,\"Image acquisition and processing with LabVIEW\", CRC press Chris Solomon, Toby Breckon ,\"Fundamentals of Digital Image Processing A Practical Approach with Examples in Matlab\", John Wiley & Sons, 7. Yao wang, Joem Ostarmann and Ya ‚Äì quin Zhang, ‚ÄùVideo processing and communication ‚Äú,1st edition , PHI COURSE PLAN Module Contents Hours Module ‚Äì 1 Fundamentals of Image processing: Basic steps of Image processing system, sampling and quantization of an Image, basic relationship between pixels I and connectivity. Image Enhancement: Spatial Domain methods - Gray level 12 transformations, Histogram Processing, Fundamentals of Spatial Filtering, Smoothing Spatial filters, Sharpening Spatial filters. Module -2 Image Transforms: Unitary transforms, 2D Discrete Fourier Transform, Discrete Cosine Transform (DCT), Discrete Wavelet transforms. Frequency Domain II 12 methods: Basics of filtering in frequency domain, image smoothing, image sharpening, homomorphic filtering Module - 3 Image Restoration: Image degradation/Restoration model, Noise models, Restoration in presence of noise only - spatial filtering, Periodic Noise reduction by III 2 frequency domain filtering. Morphological Operations: Erosion, Dilation, Opening, Closing, Hit-or-miss transformation, Boundary extraction. Module - 4 Image compression fundamentals ‚Äì Coding Redundancy, spatial and temporal redundancy. Compression models : Lossy and Lossless, Huffman coding, IV 12 Arithmetic coding, LZW coding, run length coding, Bit Plane coding, JPEG standards. Module - 5 Video processing: Basics of Video Processing: Analog video, Digital Video. Video segmentation: Introduction to video segmentation, Change detection. COMPUTER SCIENCE AND ENGINEERING(ARTIFICIAL INTELLIGENCE) V 12 Video Compression: Introduction to video compression, video compression based on motion compensation, Search for motion vectors, H.261 standard, Transform coding, predictive codingMPEG. Total Hours 60 169 PROGRAM ELECTIVE I 170 Course Cate Year of Course Name L T P J Credit Code gory Introduction FOUNDATIONS OF CS1U31C SECURITY IN PEC 2 1 0 3 2022 COMPUTING PRE-REQUISITE:MA0U20B- Discrete Mathematical Structures, CS1U20F-Operating Systems and CS1U20E-Database Systems."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to create awareness among learners about the fundamentals of security and number theory. This course covers Integer & Modular Arithmetic, Primes & Congruences, Discrete Logarithms & Elliptic Curve Arithmetic and an overview of computer security. The concepts covered in this course enable the learners in effective use of cryptographic algorithms and to identify the security threats in computing.",
                    "outcomes": ": After the completion of the course, the student will be able to CO1 Illustrate the operations and properties of algebraic struc tures, integer arithmetic and modular arithmetic. Understand Use the concepts of prime numbers and factorization for Apply ensuring security in computing CO2 Illustrate the concepts of Linear Congruence, Primitive Roots, Apply Discrete Logarithms and Elliptic Curve Arithmetic CO3 CO4 Summarize the threats and attacks related to computer and Understand program security CO5 Outline the key aspects of operating system and database Understand security",
                    "syllabus": "Integer arithmetic-Modular arithmetic-Algebraic structures-Prime numbers-Fermat‚Äôs theorem-Primality testing-Euler‚Äôs theorem- Factorization-Linear congruence-Simultaneous linear congruence-Solving congruence modulo prime powers-Primitive roots-Elliptic curve arithmetic-Prime curves, Binary curves- Introduction to computer security-Browser attack types-Web attacks -Email attack types-Introduction to program security-Operating system security -Database security.",
                    "textbooks": "1. Behrouz A Forouzan, Cryptography and Network Security, 3/e, Tata McGraw-Hill. 2. Charles P Pfleeger, Shari Lawrence Pfleeger, Jonathan Margulies, Security in Computing, 5/e, Prentice Hall. 3. G.A. Jones & J.M. Jones, Elementary Number Theory, Springer UTM, 2007 REFERENCE MATERIALS 1. William Stallings, Cryptography and Network Security Principles and Practices, 4/e, Pearson Ed. 171 COURSE PLAN Modul Contents No. of e hours I 8 Integer arithmetic - Integer division, Divisibility, Greatest Common Divisor (GCD), Euclid's algorithm for GCD, Extended Euclid‚Äôs algorithm, Linear Diophantine Equations. Modular arithmetic - Operations, Properties. Algebraic structures - Groups, Rings, Fields, Finite fields, GF(p), GF (2n). II 10 Prime numbers - Prime numbers and prime-power factorization, Fermat and Mersenne primes, Fermat‚Äôs theorem, Applications, Euler‚Äôs theorem, Euler‚Äôs totient function, Applications. Primality testing ‚Äì Deterministic algorithms and Probabilistic algorithms. Factorization - Fermat‚Äôs factorization, Pollard p-1 method. III 10 Linear congruence - Simultaneous linear congruence, Chinese Remainder Theorem (CRT). Congruence with a prime - Power modulus, Arithmetic modulo p, Pseudoprimes and Carmichael numbers, Solving congruence modulo prime powers. Primitive roots - Existence of primitive roots for primes, Discrete logarithms. Elliptic curve arithmetic ‚Äì Prime curves, Binary curves, Addition of two points, Multiplication of a point by a constant. IV 9 Introduction to computer security ‚Äì Threats, Vulnerabilities, Controls. Browser attack types, Web attacks targeting users, Email attack types. Introduction to program security - Non-malicious programming oversights, Malware. V 8 Operating system security ‚Äì Security in operating system, Security in design of operating system. Database security ‚Äì Security requirements of databases, Reliability and integrity, Database disclosure. 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 172 Course Categ Course Name L T P J Credit Year of Introduction Code ory CS1U31G Applied Data Science with Python PEC 2 0 2 3 2022 Industry elective PRE-REQUISITES Python Basics: Basic Python syntax, Control structures (loops, conditionals), Functions and lambda functions, Basic data structures (lists, dictionaries, tuples, sets Mathematics: Linear Algebra, Calculus, Probability and Statistics, General Computing Knowledge: Familiarity with the command line or terminal, Basic understanding of how databases work, including SQL, Experience with a code editor or an Integrated Development Environment(IDE) like PyCharm or Visual Studio Code. COURSE OVERVIEW Applied Data Science with Python course, a comprehensive journey designed to equip you with the knowledge, skills, and tools necessary to thrive in today‚Äôs data-driven world. This course serves as a bridge between theoretical foundations and real-world applications, offering you the hands-on experience required to tackle actual data challenges. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Make use of Pandas library to effectively process complex datasets. Apply CO 1 Create effective data visualization using Python libraries Apply CO 2 Build machine learning and deep learning models using Python libraries Apply CO 3 Apply Natural Language Processing techniques in data analysis. Apply CO 4 Develop models using Time series data to solve real world problems Apply CO 5 SYLLABUS Introduction to Data Science and Python ,Data Manipulation with Pandas, Advanced Pandas-Merging, Joining and Concatenating, Pivot Tables, Time Series Analysis in Pandas, Data Visualization with Matplotlib and Seaborn, Seaborn for Statistical Visualization, Advanced Visualization Techniques, Exploratory Data Analysis (EDA),Visual EDA , Introduction to Machine Learning with Scikit-learn, Regression Techniques ,Classification Techniques, Model Evaluation ,Advanced Machine Learning Techniques, Ensemble Methods ,Unsupervised Learning ,Hyperparameter Tuning, Introduction to Deep Learning with TensorFlow/Keras. Understanding Neural Networks, Implementing Neural Networks, Introduction to Convolutional Neural Networks, Natural Language Processing with NLTK and SpaCy, Text Classification and Sentiment Analysis, Named Entity Recognition, Time Series Forecasting with Python, Forecasting Models, Data Science Project. 173 TEXT BOOKS 1. McKinney, W., 2022. Python for data analysis. \" O'Reilly Media, Inc.\". 2. Goodfellow, I., Bengio, Y. and Courville, A., 2016. Deep learning. MIT press. 3. G√©ron, A., 2022. Hands-on machine learning with Scikit-Learn, Keras . and TensorFlow. \" O'Reilly Media, Inc.\". 4. Hapke, H., Howard, C. and Lane, H., 2019. Natural Language Processing in Action: Understanding, analyzing, and generating text with Python. Simon and Schuster.",
                    "references": "1. VanderPla, 2016. Jake. Python Data Science Handbook. 2. Andrew Park, 2021, Data Science for Beginners 3. M√ºller, A.C. and Guido, S., 2016. Introduction to machine learning with Python: a guide for data scientists. \" O'Reilly Media, Inc.\". 4. Muller, A.C. and Guido, S., 2017. Introduction to machine learning with Python. O‚ÄôReilly.",
                    "course_plan": "Modul Contents No. of e hours I 8 Integer arithmetic - Integer division, Divisibility, Greatest Common Divisor (GCD), Euclid's algorithm for GCD, Extended Euclid‚Äôs algorithm, Linear Diophantine Equations. Modular arithmetic - Operations, Properties. Algebraic structures - Groups, Rings, Fields, Finite fields, GF(p), GF (2n). II 10 Prime numbers - Prime numbers and prime-power factorization, Fermat and Mersenne primes, Fermat‚Äôs theorem, Applications, Euler‚Äôs theorem, Euler‚Äôs totient function, Applications. Primality testing ‚Äì Deterministic algorithms and Probabilistic algorithms. Factorization - Fermat‚Äôs factorization, Pollard p-1 method. III 10 Linear congruence - Simultaneous linear congruence, Chinese Remainder Theorem (CRT). Congruence with a prime - Power modulus, Arithmetic modulo p, Pseudoprimes and Carmichael numbers, Solving congruence modulo prime powers. Primitive roots - Existence of primitive roots for primes, Discrete logarithms. Elliptic curve arithmetic ‚Äì Prime curves, Binary curves, Addition of two points, Multiplication of a point by a constant. IV 9 Introduction to computer security ‚Äì Threats, Vulnerabilities, Controls. Browser attack types, Web attacks targeting users, Email attack types. Introduction to program security - Non-malicious programming oversights, Malware. V 8 Operating system security ‚Äì Security in operating system, Security in design of operating system. Database security ‚Äì Security requirements of databases, Reliability and integrity, Database disclosure. 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 172 Course Categ Course Name L T P J Credit Year of Introduction Code ory CS1U31G Applied Data Science with Python PEC 2 0 2 3 2022 Industry elective PRE-REQUISITES Python Basics: Basic Python syntax, Control structures (loops, conditionals), Functions and lambda functions, Basic data structures (lists, dictionaries, tuples, sets Mathematics: Linear Algebra, Calculus, Probability and Statistics, General Computing Knowledge: Familiarity with the command line or terminal, Basic understanding of how databases work, including SQL, Experience with a code editor or an Integrated Development Environment(IDE) like PyCharm or Visual Studio Code. COURSE OVERVIEW Applied Data Science with Python course, a comprehensive journey designed to equip you with the knowledge, skills, and tools necessary to thrive in today‚Äôs data-driven world. This course serves as a bridge between theoretical foundations and real-world applications, offering you the hands-on experience required to tackle actual data challenges. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Make use of Pandas library to effectively process complex datasets. Apply CO 1 Create effective data visualization using Python libraries Apply CO 2 Build machine learning and deep learning models using Python libraries Apply CO 3 Apply Natural Language Processing techniques in data analysis. Apply CO 4 Develop models using Time series data to solve real world problems Apply CO 5 SYLLABUS Introduction to Data Science and Python ,Data Manipulation with Pandas, Advanced Pandas-Merging, Joining and Concatenating, Pivot Tables, Time Series Analysis in Pandas, Data Visualization with Matplotlib and Seaborn, Seaborn for Statistical Visualization, Advanced Visualization Techniques, Exploratory Data Analysis (EDA),Visual EDA , Introduction to Machine Learning with Scikit-learn, Regression Techniques ,Classification Techniques, Model Evaluation ,Advanced Machine Learning Techniques, Ensemble Methods ,Unsupervised Learning ,Hyperparameter Tuning, Introduction to Deep Learning with TensorFlow/Keras. Understanding Neural Networks, Implementing Neural Networks, Introduction to Convolutional Neural Networks, Natural Language Processing with NLTK and SpaCy, Text Classification and Sentiment Analysis, Named Entity Recognition, Time Series Forecasting with Python, Forecasting Models, Data Science Project. 173 TEXT BOOKS 1. McKinney, W., 2022. Python for data analysis. \" O'Reilly Media, Inc.\". 2. Goodfellow, I., Bengio, Y. and Courville, A., 2016. Deep learning. MIT press. 3. G√©ron, A., 2022. Hands-on machine learning with Scikit-Learn, Keras . and TensorFlow. \" O'Reilly Media, Inc.\". 4. Hapke, H., Howard, C. and Lane, H., 2019. Natural Language Processing in Action: Understanding, analyzing, and generating text with Python. Simon and Schuster. REFERENCES 1. VanderPla, 2016. Jake. Python Data Science Handbook. 2. Andrew Park, 2021, Data Science for Beginners 3. M√ºller, A.C. and Guido, S., 2016. Introduction to machine learning with Python: a guide for data scientists. \" O'Reilly Media, Inc.\". 4. Muller, A.C. and Guido, S., 2017. Introduction to machine learning with Python. O‚ÄôReilly. COURSE PLAN Modu Contents Hours le Introduction to Data Science and Python, What is Data Science, 8 Introduction to Python, Why Python for Data Science?, Data I Manipulation with Pandas, Introduction to Pandas ,Data Frames and Series, Basic Operations, Advanced Pandas 8 Data Visualization with Matplotlib and Seaborn, Matplotlib Basics ,Seaborn for Statistical Visualization ,Advanced Visualization Techniques II Exploratory Data Analysis (EDA) Understanding EDA , Visual EDA -Univariate, Bivariate, and Multivariate Analysis- Correlation and Heatmaps Regression Techniques: Fundamentals and advanced methods in regression analysis, 10 Linear Regression, including its assumptions and performance evaluation using metrics like R¬≤ and RMSE. Multiple Linear Regression, emphasizing handling multicollinearity, interaction terms, and practical feature selection strategies like stepwise regression. Logistic Regression for binary classification problems with metrics such as accuracy, III precision, and recall, along with a hands-on case study. Naive Bayes for Regression and Regularization Techniques such as Ridge, Lasso, and Elastic Net for addressing overfitting and multicollinearity. Polynomial Regression for modelling non-linear relationships(Optional) Machine Learning: Decision Trees and Random Forests, covering concepts 11 like splitting criteria, feature importance, and ensemble methods. Advanced IV boosting techniques, including XGBoost and LightGBM, along with practical hyperparameter tuning using GridSearchCV and RandomizedSearchCV. Support Vector Machines (SVM) for regression (SVR), including kernel tricks 174 for linear and non-linear patterns. Unsupervised learning with k-means Clustering for pattern recognition and segmentation, and Dimensionality Reduction using Principal Component Analysis (PCA) for visualizing high-dimensional data and preprocessing tasks. Time Series Forecasting with Python, Basics of Time Series Analysis 8 Forecasting Models - ARIMA, Exponential Smoothing, Prophet Practical V Data Science Project-Complete End-to-End Project Walkthrough Basics of NLP and Deep Learning (only one hour) Total Hours 45 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 175 Course Categor Year of Course Name L T P J Credit Code y Introduction CONCEPTS IN COMPUTER GRAPHICS CS2U31B PEC 2 1 0 3 2022 AND IMAGE PROCESSING PRE-REQUISITE: Nil"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to make awareness about strong theoretical relationships between computer graphics and image processing. This course helps the learner to understand three- dimensional environment representation in a computer, transformation of 2D/3D objects, basic mathematical techniques and algorithms used to build useful applications, imaging, and image processing techniques. The study of computer graphics and image processing develops the ability to create image processing frameworks for different domains and develops algorithms for emerging display technologies.",
                    "outcomes": ": After the completion of the course the student will be able to Course Description Level Outcomes CO1 Describe the working principles of graphics devices Understand CO2 Illustrate line drawing, circle drawing and polygon filling Apply algorithms CO3 Demonstrate geometric representations, transformations on 2D Apply & 3D objects, clipping algorithms and projection algorithms CO4 Summarize visible surface detection methods Understand CO5 Summarize the concepts of digital image representation, Apply processing and demonstrate pixel relationships CO6 Solve image enhancement and segmentation problems using Apply spatial domain techniques",
                    "syllabus": "Basics of Computer Graphics and its applications. Video Display devices. Line drawing algorithms. Circle drawing algorithms. Filled Area Primitives. Two dimensional transformations, Matrix representations and homogeneous coordinates. Basic 3D transformations. Window to viewport transformation. Cohen Sutherland Line clipping algorithm. Sutherland Hodgeman Polygon clipping algorithm. Three dimensional viewing pipeline. Projections- Parallel and Perspective projections. Visible surface detection algorithms- Depth buffer algorithm, Scan line algorithm. Introduction to Image processing and applications. Fundamental steps in image processing. Components of image processing system. Coordinate conventions. Sampling and quantization. Spatial and Gray Level Resolution. Basic relationship between pixels‚Äì neighbourhood, adjacency, connectivity. Fundamentals of spatial domain-convolution operation. Basic gray level transformation functions. Histogram equalization. Basics of spatial filtering - Sharpening spatial filters. Fundamentals of Image Segmentation. Thresholding. Region based Approach - Region Growing, Region Splitting and Merging. Edge Detection - Edge Operators- Sobel and Prewitt. 176",
                    "textbooks": "1. Donald Hearn and M. Pauline Baker, Computer Graphics, PHI, 2e, 1996 2. Rafael C. Gonzalez and Richard E. Woods, Digital Image Processing. Pearson, 4e, 2017 REFERENCE MATERIALS 1. William M. Newman and Robert F. Sproull, Principles of Interactive Computer Graphics. McGraw Hill, 2001. 2. Zhigang Xiang and Roy Plastock, Computer Graphics (Schaum‚Äôs outline Series), McGraw Hill 2019. 3. David F. Rogers , Procedural Elements for Computer Graphics, Tata McGraw Hill,2001. 4. M. Sonka, V. Hlavac, and R. Boyle, Image Processing, Analysis, and Machine Vision, Thomson India Edition, 4e, 2017. COURSE PLAN Module Contents No. of hours I Basics of Computer Graphics and its applications. Video Display 9 devices- Refresh Cathode Ray Tubes, Random Scan Displays and systems, Raster scan displays and systems. Line drawing algorithms- DDA, Bresenham‚Äôs algorithm. Circle drawing algorithms- Midpoint Circle generation algorithm, Bresenham‚Äôs algorithm. II 9 Filled Area Primitives- Scan line polygon filling, Boundary filling and flood filling. Two dimensional transformations-Translation, Rotation, Scaling, Reflection and Shearing, Composite transformations, Matrix representations and homogeneous coordinates. Basic 3D transformations. III 9 Window to viewport transformation. Cohen Sutherland Line clipping algorithm. Sutherland Hodgeman Polygon clipping algorithm. Three dimensional viewing pipeline. Projections- Parallel and Perspective projections. Visible surface detection algorithms- Depth buffer algorithm, Scan line algorithm. IV 9 Introduction to Image processing and applications. Image as 2D data. Image representation in Gray scale, Binary and Colour images. Fundamental steps in image processing. Components of image processing system. Coordinate conventions. Sampling and quantization. Spatial and Gray Level Resolution. Basic relationship between pixels‚Äì neighbourhood, adjacency, connectivity. Fundamentals of spatial domain-convolution operation. V 9 Basic gray level transformation functions - Log transformations, Power-Law transformations, Contrast stretching. Histogram equalization. Basics of spatial filtering - Smoothing spatial filter- 177 Linear and nonlinear filters, and Sharpening spatial filters-Gradient and Laplacian. Fundamentals of Image Segmentation. Thresholding - Basics of Intensity thresholding and Global Thresholding. Region based Approach - Region Growing, Region Splitting and Merging. Edge Detection - Edge Operators- Sobel and Prewitt 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 178 Course Year of Course Name Category L T P J Credit Code Introduction Object Oriented CS2U31C Programming using PEC 2 1 0 0 3 2022 Java PRE-REQUISITE: Nil COURSE OVERVIEW Aim of the course is to introduce Object oriented concepts in programming. The course introduces Object Oriented Principles, Object Oriented Programming in Java, Exception handling, Event handling, multithreaded programming and graphical user interface programming. The course will enable learners to solve problems by breaking it down to object level while designing software and implementing it using Java. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Summarize the Basic features and architecture of Java Understand CO 1 Construct Object Oriented Design using Unified Modelling Apply CO 2 Language (UML) Apply the object-oriented concepts - classes, objects, Apply CO 3 constructors, data hiding, inheritance, and polymorphism to write Java programs. Utilize packages & interfaces, input/output streams, files and Apply CO 4 string-handling mechanisms to develop programs Utilize exception handling, multithreading and database Apply CO 5 connectivity to develop java applications. Apply event handling features and swing to develop Graphical Apply CO 6 User Interface based Java application programs SYLLABUS Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. Introduction to Java - Java programming Environment and Runtime Environment, Java Virtual Machine (JVM), Java compiler, Bytecode. Core Java Fundamentals: Data types, Operators, Control Statements, Object Oriented Programming in Java - Class Fundamentals, Constructors, Method Overloading, Access Control, Command Line Arguments, Inheritance - Method Overriding, Abstract Classes and Methods. Packages and Interfaces, Interfaces, String Handling, Comparison of String Buffer and String, Input/ Output - Reading Console Input, Writing Console Output, Object Streams and Serialization, Working with Files. Exception Handling, Collections framework, Collections Class, Event handling - Delegation Event 179 Model, Multithreaded Programming. Swings fundamentals - Model View Controller (MVC), Event Handling in Swings, Exploring Swings, Java Database Connectivity (JDBC). TEXTBOOKS 1. Herbert Schildt, Java: The Complete Reference, 8/e, Tata McGraw Hill, 2011. Bahrami A., Object Oriented Systems Development using the Unified Modeling 2. Language, McGraw Hill, 1999. Paul Deitel, Harvey Deitel, Java How to Program, Early Objects 11th Edition, Pearson, 3. 2018.",
                    "references": "1. Y. Daniel Liang, Introduction to Java Programming, 7/e, Pearson, 2013. 2. Nageswararao R., Core Java: An Integrated Approach, Dreamtech Press, 2008 3. Balaguruswamy E., Programming JAVA a Primer, 5/e, McGraw Hill, 2014.",
                    "course_plan": "Module Contents No. of hours I Basics of Computer Graphics and its applications. Video Display 9 devices- Refresh Cathode Ray Tubes, Random Scan Displays and systems, Raster scan displays and systems. Line drawing algorithms- DDA, Bresenham‚Äôs algorithm. Circle drawing algorithms- Midpoint Circle generation algorithm, Bresenham‚Äôs algorithm. II 9 Filled Area Primitives- Scan line polygon filling, Boundary filling and flood filling. Two dimensional transformations-Translation, Rotation, Scaling, Reflection and Shearing, Composite transformations, Matrix representations and homogeneous coordinates. Basic 3D transformations. III 9 Window to viewport transformation. Cohen Sutherland Line clipping algorithm. Sutherland Hodgeman Polygon clipping algorithm. Three dimensional viewing pipeline. Projections- Parallel and Perspective projections. Visible surface detection algorithms- Depth buffer algorithm, Scan line algorithm. IV 9 Introduction to Image processing and applications. Image as 2D data. Image representation in Gray scale, Binary and Colour images. Fundamental steps in image processing. Components of image processing system. Coordinate conventions. Sampling and quantization. Spatial and Gray Level Resolution. Basic relationship between pixels‚Äì neighbourhood, adjacency, connectivity. Fundamentals of spatial domain-convolution operation. V 9 Basic gray level transformation functions - Log transformations, Power-Law transformations, Contrast stretching. Histogram equalization. Basics of spatial filtering - Smoothing spatial filter- 177 Linear and nonlinear filters, and Sharpening spatial filters-Gradient and Laplacian. Fundamentals of Image Segmentation. Thresholding - Basics of Intensity thresholding and Global Thresholding. Region based Approach - Region Growing, Region Splitting and Merging. Edge Detection - Edge Operators- Sobel and Prewitt 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 178 Course Year of Course Name Category L T P J Credit Code Introduction Object Oriented CS2U31C Programming using PEC 2 1 0 0 3 2022 Java PRE-REQUISITE: Nil COURSE OVERVIEW Aim of the course is to introduce Object oriented concepts in programming. The course introduces Object Oriented Principles, Object Oriented Programming in Java, Exception handling, Event handling, multithreaded programming and graphical user interface programming. The course will enable learners to solve problems by breaking it down to object level while designing software and implementing it using Java. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Summarize the Basic features and architecture of Java Understand CO 1 Construct Object Oriented Design using Unified Modelling Apply CO 2 Language (UML) Apply the object-oriented concepts - classes, objects, Apply CO 3 constructors, data hiding, inheritance, and polymorphism to write Java programs. Utilize packages & interfaces, input/output streams, files and Apply CO 4 string-handling mechanisms to develop programs Utilize exception handling, multithreading and database Apply CO 5 connectivity to develop java applications. Apply event handling features and swing to develop Graphical Apply CO 6 User Interface based Java application programs SYLLABUS Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. Introduction to Java - Java programming Environment and Runtime Environment, Java Virtual Machine (JVM), Java compiler, Bytecode. Core Java Fundamentals: Data types, Operators, Control Statements, Object Oriented Programming in Java - Class Fundamentals, Constructors, Method Overloading, Access Control, Command Line Arguments, Inheritance - Method Overriding, Abstract Classes and Methods. Packages and Interfaces, Interfaces, String Handling, Comparison of String Buffer and String, Input/ Output - Reading Console Input, Writing Console Output, Object Streams and Serialization, Working with Files. Exception Handling, Collections framework, Collections Class, Event handling - Delegation Event 179 Model, Multithreaded Programming. Swings fundamentals - Model View Controller (MVC), Event Handling in Swings, Exploring Swings, Java Database Connectivity (JDBC). TEXTBOOKS 1. Herbert Schildt, Java: The Complete Reference, 8/e, Tata McGraw Hill, 2011. Bahrami A., Object Oriented Systems Development using the Unified Modeling 2. Language, McGraw Hill, 1999. Paul Deitel, Harvey Deitel, Java How to Program, Early Objects 11th Edition, Pearson, 3. 2018. REFERENCES 1. Y. Daniel Liang, Introduction to Java Programming, 7/e, Pearson, 2013. 2. Nageswararao R., Core Java: An Integrated Approach, Dreamtech Press, 2008 3. Balaguruswamy E., Programming JAVA a Primer, 5/e, McGraw Hill, 2014. COURSE PLAN Module Contents Hours Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Basic Object Oriented concepts, UML diagrams, Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. I 8 Introduction to Java - Java programming Environment and Runtime Environment, Development Platforms -Standard, Enterprise. Java Virtual Machine (JVM), Java compiler, Bytecode, Java Buzzwords, Java program structure, Comments, Garbage Collection. Primitive Data types - Integers, Floating Point Types, Characters, Boolean. Literals, Type Conversion and Casting, Variables, Arrays, Strings, Vector class. Object Oriented Programming in Java - Class Fundamentals, Declaring Objects, Object Reference, Introduction to Methods, Constructors, this Keyword, Method Overloading, Using Objects as Parameters, Returning II 12 Objects, Recursion, Access Control, Static Members, Final Variables, Inner Classes, Command Line Arguments, Inheritance - Super Class, Sub Class, The Keyword super, protected Members, Calling Order of Constructors, Method Overriding, the Object class, Abstract Classes and Methods, using final with Inheritance. Java Library - String Handling ‚Äì String Constructors, String Length, Special String Operations - Character Extraction, String Comparison, Searching Strings, Modifying Strings, using value Of(), Comparison of String Buffer and String. III 8 Packages and Interfaces - Defining Package, CLASSPATH, Access Protection, Importing Packages, Interfaces. Input/ Output - I/O Basics, Reading Console Input, Writing Console Output, PrintWriter Class, Object Streams and Serialization, Working with Files. IV Exception Handling - Checked Exceptions, Unchecked Exceptions, try Block 9 and catch Clause, Multiple catch Clauses, Nested try Statements, throw, 180 throws and finally. Collections framework - Collections overview, Collections Interfaces- Collection Interface, List Interface. Collections Class ‚Äì Array List class. Accessing a Collection via an Iterator. Event handling - Event Handling Mechanisms, Delegation Event Model, Event Classes, Sources of Events, and Event Listener Interfaces, Using the Delegation Model. Multithreaded Programming - The Java Thread Model, The Main Thread, Creating Thread, Creating Multiple Threads, Synchronization, Suspending, Resuming and Stopping Threads. Graphical User Interface and Database support of Java: Swings fundamentals - Swing Key Features, Model View Controller (MVC), Swing Controls, Components and Containers, Swing Packages, Event Handling in Swings, V Swing Layout Managers, Exploring Swings ‚ÄìJFrame, JLabel, The Swing 8 Buttons, JTextField. Java Database Connectivity (JDBC) - JDBC overview, Creating and Executing Queries ‚Äì create table, delete, insert, select. Total Hours 45 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 181 Year of Course Course Name Category L T P J Credit Introductio Code n Machine Learning Models and CS2U31F PEC 2 1 0 0 3 2022 Storage Management COURSE OVERVIEW This course enables the learners to understand the advanced concepts and algorithms in machine learning. The course covers the standard and most popular supervised learning algorithms. This course aims to provide the basics for developing deployable machine learning systems. The course helps the students to provide machine learning based solutions to real world problems. Prerequisite : Nil COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes CO 1 Explain the basic concepts and techniques of Machine Learning. Understand Demonstrate supervised learning techniques of classification and CO 2 Apply regression Illustrate the concepts of kernel functions, support vector machines CO 3 Apply and Markov model. Apply the techniques of clustering and multilayer neural networks. CO 4 Apply Summarize the process of development of a machine learning CO 5 Understand model in real-world applications. SYLLABUS Examples of Machine Learning applications - Learning associations, Classification, Regression, Unsupervised Learning, Reinforcement Learning. Supervised learning- Input representation, Cross validation and re-sampling methods- K- fold cross validation, Boot strapping, Measuring classifier performance. Support Vector Machine, Hidden Markov models, Evaluation problem, finding state sequence, Learning model parameters. Clustering Methods Requirements for ML Systems - Iterative process for developing ML systems in production ‚Äì Data Systems Fundamentals: data sources, data formats , data models, data storage engines and processing ‚Äì Training data: Sampling techniques, Labelling, Handling class imbalance - Model Development and Training: Evaluating ML Models, Ensembles - Model Offline Evaluation: Baselines, Evaluation Methods ‚Äì Model Deployment: Batch Prediction vs. Online Prediction, Model Compression, Model Optimization TEXT BOOKS 1. Ethem Alpaydƒ±n, Introduction to Machine Learning (Adaptive Computation and Machine 182 Learning), MIT Press, 2004. 2. Huyen, Chip. Designing machine learning systems. \" O'Reilly Media, Inc.\", 2022. REFERENCES 1. Christopher Bishop. Neural Networks for Pattern Recognition, Oxford University Press, 1995. 2. Kevin P. Murphy. Machine Learning: A Probabilistic Perspective, MIT Press 2012. 3. Trevor Hastie, Robert Tibshirani, Jerome Friedman, The Elements Of Statistical Learning, Second edition Springer 2007. 4. P. Langley, Elements of Machine Learning, Morgan Kaufmann, 1995. COURSE PLAN Modul Contents Hours e Introduction to Machine Learning: Examples of Machine Learning applications - Learning associations, Classification, Regression, Unsupervised Learning, Reinforcement Learning. Supervised learning- Input representation, I Hypothesis class, Version space, Vapnik-Chervonenkis (VC) Dimension. 9 Probably Approximately Learning (PAC), Noise, Learning Multiple classes, Model Selection and Generalization, Dimensionality reduction- Subset selection, Principal Component Analysis. Classification: Cross validation and re-sampling methods- K- fold cross validation, Boot strapping, Measuring classifier performance- Precision, recall, ROC curves. Bayes Theorem, Bayesian classifier, Maximum Likelihood II estimation, Density functions, Regression. Decision Trees- Entropy, 9 Information Gain, Tree construction, ID3, Issues in Decision Tree learning- Avoiding Over-fitting, Reduced Error Pruning, The problem of Missing Attributes, Gain Ratio, Classification by Regression (CART). Kernel Machines: Support Vector Machine- Optimal Separating hyper plane, Soft-margin hyperplane, Kernel trick, Kernel functions. Discrete Markov Processes, Hidden Markov models, Three basic problems of HMMs- Evaluation III 6 problem, finding state sequence, Learning model parameters. Combining multiple learners, Ways to achieve diversity, Model combination schemes, Voting, Bagging, Booting. Unsupervised Learning: Clustering Methods - K-means, Expectation- Maximization Algorithm, Hierarchical Clustering Methods, Density based clustering. Neural Networks- The Perceptron, Activation Functions, Training IV Feed Forward Network by Back Propagation- Multi-Layer Perceptron in 6 Practice ‚Äì Examples of using the MLP- Radial Basis Functions and Splines ‚Äì Concepts ‚Äì RBF Network ‚Äì Curse of Dimensionality ‚Äì Interpolations and Basis Functions. Designing ML Systems in Production: Requirements for ML Systems - Iterative process for developing ML systems in production ‚Äì Data Systems Fundamentals: data sources, data formats , data models, data storage engines and V processing ‚Äì Training data: Sampling techniques, Labelling, Handling class 15 imbalance - Model Development and Training: Evaluating ML Models, Ensembles - Model Offline Evaluation: Baselines, Evaluation Methods ‚Äì Model Deployment: Batch Prediction vs. Online Prediction, Model Compression, 183 Model Optimization. Total Hours 45 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 184 YEAR OF COMPREHENSIVE CATEGORY L T P CREDIT CS2U30I INTRODUCTION COURSE WORK PCC 1 0 0 1 2022 Preamble: The objective of this Course work is to ensure the comprehensive knowledge of each student in the most fundamental core courses in the curriculum. Five core courses credited from semesters 3, 4 and 5 are chosen for the detailed study in this course work. This course helps the learner to become competent in cracking GATE, placement tests and other competitive examinations Prerequisite: 1. Data Structures 2. Operating Systems 3. Computer Organization And Architecture 4. Database Management Systems 5. Introduction to Machine Learning Course Outcomes: After the completion of the course the student will be able to Course Outcomes Description Level CO1 Comprehend the concepts and applications of data Understand structures CO2 Comprehend the concepts, functions and algorithms in Understand Operating System CO3 Comprehend the organization and architecture of computer Understand systems CO4 Comprehend the fundamental principles of database design and Understand manipulation CO5 Comprehend the concepts in Machine Learning Understand Mark distribution Total Marks CIE ESE ESE Duration 50 0 50 1 hour End Semester Examination Pattern: Objective Questions with multiple choice, a maximum of four options. Question paper includes fifty questions of one mark each, distributed equally from all the five identified courses. 185 Course Categ Credi Year of Course Name L T P J Code ory t Introduction CS2U38C Robotics lab PCC 0 0 3 2 2022 COURSE OVERVIEW Robotics lab provides students with exposure to the common sensor and actuator interfacing, setting up mobile robots and familiarizing intelligent systems. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Interface different peripherals to arduino board CO 1 Apply Assemble a mobile robot with different sensors and actuators Apply CO 2 Familiarise about localisation of mobile robots Apply CO 3 Impart intelligence to robot using standard algorithms Apply CO 4 Apply CO 5 Familiarise the robot navigation SYLLABUS ROS Essentials ‚Ä¢ Installing and Configuring Your ROS Environment‚ÄîROS Kinetic/Melodic/Compatible versions ‚Ä¢ Familiarisation with ROS (Master, nodes, topics, messages, services, parameters and actions) ‚Ä¢ Familiarisation with ROS Tools ‚Äì Gazebo , Moveit , Rviz ‚Ä¢ Creating Workspace and Package in ROS LIST OF EXPERIMENTS Any 4 experiments from each group are mandatory Part A: Interfacing sensors and actuators 1.Familiarisation of Arduino IDE, Arduino microcontroller I/O interfacing(LED, LCD, Serial Monitor) 2. Interfacing IR and Ultrasonic sensor with Arduino 3. Interfacing DC motors with arduino - speed and direction control 4. Interfacing Servo Motors with Arduino - angle of rotation 186 5. Calibration of sensors-sonar, IR sensors and obtain the calibration curve 6. Mobile Robot assembly 7. Networking with Arduino: GSM and Bluetooth Part B: Intelligent systems 8. Writing a Simple Publisher and Subscriber, Simple Service and Client, Recording and playing back data, Reading messages from a bag file(Python/C++) 9. Localization of a mobile robot using LIDAR (ROS) 10. Touch Sensors interfacing and feedback system 11. Line following Robot using IR sensor 12. Obstacle avoidance of a mobile robot while moving to a point. 13. Object detection using any one standard algorithm 14. Navigation simulation using turtlebot using ROS REFERENCES 7. Siegwart, Roland, Introduction to Autonomous Mobile Robots, Cambridge, Mass. : MIT Press, 2nd ed. 8. Peter Corke, Robotics, Vision and Control: Fundamental Algorithms in MATLAB, Springer 2021 9. John. J. Craig, Introduction to Robotics ( Mechanics and control), Pearson Education Asia 2002. 10. S K Saha, Introduction to Robotics by Mc Graw Hill Education, 2014. 11. R K Mittal and I J Nagrath, ‚ÄúRobotics and Control‚Äù, Tata McGraw Hill, New Delhi,2003. 12. Dahiya, Ravinder S., Valle, Maurizio, Robotic Tactile Sensing, Springer, 2013. https://emanual.robotis.com/docs/en/platform/turtlebot3/simulation MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 75 75 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 15 marks Continuous Evaluation in Lab : 30 marks Continuous Assessment Test : 15 marks Viva-voce : 15 marks 187 Year of Category L T P Credit CS2U39A MINI Introduction PROJECT PCC 0 0 3 2 2022 PRE-REQUISITE: A sound knowledge in any programming language and fundamental concepts of Software Engineering."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The objective of this course is to apply the fundamental concepts of Software Engineering principles for the effective development of an application/research project. This course helps the learners to practice the different steps to be followed in the software development process such as literature review and problem identification, preparation of Software Requirement Specification &Software Design Document (SDD), testing, development and deployment. Mini project enables the students to boost their skills, widen the horizon of thinking and their ability to resolve real life problems.",
                    "outcomes": ": After the completion of the course the student will be able to Course Description Level Outcomes Identify technically and economically feasible problems Apply CO1 Identify and survey the relevant literature for getting exposed to Apply CO2 related solutions and get familiarized with software development processes Perform requirement analysis, identify design methodologies and Apply CO3 develop adaptable & reusable solutions of minimal complexity by using modern tools & advanced programming techniques Prepare technical report and deliver presentation Apply CO4 Apply engineering and management principles to achieve the Apply CO5 goal of the project Guidelines Student Groups with 3 or 4 members should identify a topic of interest in consultation with a Faculty/Advisor. Review the literature and gather information pertaining to the chosen topic. State the objectives and develop a methodology to achieve the objectives. Carryout the design/fabrication or develop codes/programs to achieve the objectives by strictly following steps specified in the teaching plan. Innovative design concepts, 188 performance, scalability, reliability considerations, aesthetics/ergonomic, user experience and security aspects taken care of in the project shall be given due weight. The progress of the mini project is evaluated based on a minimum of two reviews. The review committee may be constituted by the Head of the Department comprising HoD or a senior faculty member, Mini Project coordinator and project guide. The internal evaluation shall be made based on the progress/outcome of the project, reports and a viva-voce examination, conducted internally by a 3-member committee. A project report is required at the end of the semester. The project has to be demonstrated for its full design specifications. MARK DISTRIBUTION Total Marks CIE Marks ESE Marks 150 75 75 CONTINOUS ASSESSMENT EVALUATION PATTERN Attendance 10 marks Project Guide 15 marks Project Report 10 marks 189 Minors Course Year of Course Name Category L T P J Credit Code Introduction INTRODUCTION CS0M 30D TO SOFTWARE VAC 3 1 0 4 2022 TESTING COURSE OVERVIEW This is a course in theoretical computer science th at includes test cases for white-box, black- box, and grey-box approaches. This course describes the various techniques for test case design used to test software artifacts, including requirements, design, and code. The course includes different techniques for test case design based on graphs, programming language syntaxes and inputs. The course also covers symbolic execution using PEX tool. Prerequisite: NIL COURSE OUTCOMES After the completion of the course, the student will b e able to: Course Description Outcomes List a range of different software testin g techniques and be able to apply CO 1 specific unit testing method to the projects using Junit. Understand Explain mutation testing method for a given piece of code to identify CO 2 hidden defects that can‚Äôt be detected using other testing methods. Understand Explain graph coverage criteria in term s of control flow graph and data CO 3 flow graph for a given program Understand Demonstrate the importance of black-b ox approaches in terms of domain CO 4 and functional testing. Understand Understand CO 5 Illustrate the use of PEX tool with symbolic execution. Understand",
                    "syllabus": "Software testing, Types of Testing- Unit testing, integration testing, System testing, Acceptance testing, Beta testing, Concept of Unit testing. Static Unit testing. Dynamic Unit testing - Control Flow testing, Data Flow testing, Domain testing, Overview of Graph Coverage Criteria. Structural Graph Coverage Criteria - Node/vertex coverage, Edge coverage, Edge pair coverage, Path coverage, Complete path coverage, Prime path coverage, Complete round trip coverage, Simple round trip coverage. Data Flow Criteria - du paths, du pairs., Coverage criteria on inheritance graph, Data flow at the design level, Inter-procedural DU pairs, Coupling du-pairs example. Example - Quadratic Root. Case Study - Graph Based testing using JUnit Framework. Domain Testing / Input Space Partitioning - Partitions of a set. Input domain modelling - Interface-based approach, Introduction to Grey Box testing 190",
                    "textbooks": "1. Paul Ammann and JeffOffutt ,Introduction t o Software Testing. KshirasagarNaik and PriyadarshiTripathy, S oftware Testing And Quality 2. Assurance: Theory And Practice.",
                    "references": "1. https://www.csc.ncsu.edu/academics/underg rad/honors/thesis/muclipsebinder.pdf - Muclipse tutorial. 2. King, James C, ‚ÄúSymbolic Execution and Program Testing‚Äù, Association for Computing Machinery, July 1976.",
                    "course_plan": "Module Contents Hours Introduction to Software Testing : Some Popular Errors ‚Äì Ariane 5, Therac 25, Intel Pentium Bug. What is Software testing? Why should it be tested? Software Quality, Role of Testing. Testing Process - Level 0 thinking, Level 1 thinking, Level 2 thinking, Level 3 thinking, Level 4 thinking. Software Testing Terminologies - Verification, Validation and I 12 Testing, Faults, Error and Bug, Test cases, Coverage Criteria. Types of Testing- Unit testing, integration testing, System testing, Acceptance testing, Beta testing, Functional testing, Stress testing, Performance testing, Usability testing and Regression testing. Testing Methods - Black Box testing, White Box testing, Grey Box testing. Unit Testing : Concept of Unit testing. Static Unit testing. Dynamic Un it testing - Control Flow testing, Data Flow testing, Domain testing, II Functional Program testing. Mutation testing - Mutation and Mutants, 12 Mutation operators, Mutation score. Junit - Framework for Unit testing. Case Study - Mutation testing using Junit and Muclipse. Unit Testing - White Box Approaches : Overview of Graph Coverag e Criteria. Structural Graph Coverage Criteria - Node/vertex coverage, Edge coverage, Edge pair coverage, Path coverage, Complete path coverage, Prime path coverage, Complete round trip coverage, Simple round trip coverage. Data Flow Criteria - du paths, du pairs. Subsumption Relationships among Graph Coverage Criteria. Graph Coverage for Source Code - Control flow III graphs for code, CFG: If statement, CFG: If statement with return, CFG: 12 Switch-case, CFG: Loops, CFG: Exceptions (try-catch). Example program ‚Äì Statistics. Graph Coverage for Design Elements - Call graphs and classes, Class inheritance testing: Coverage criteria, Coverage criteria on inheritance graph, Data flow at the design level, Inter-procedural DU pairs, Coupling du- pairs example. Example - Quadratic Root. Case Study - Graph Based testing using JUnit Framework Unit Testing - Black Box Approaches : Domain Testing / Input Spac e Partitioning - Partitions of a set. Input domain modelling - Interface-based IV approach, Functionality-based approach. Identifying values. Multiple 12 partitions of the inputdomain - All Combinations Coverage (ACoC), Each Choice Coverage (ECC), Pair-wise Coverage, T-wise Coverage, Base 191 Choice Coverage, Multiple Base Choices Coverage. TriTyp example. Functional Testing - Functional Testing Concepts of Howden. Functional MARK testing - Important Steps. Types of Functional testing - Equivalence Class Partitioning, Boundary Value Analysis, Decision Tables, Random Testing. Case Study - Black Box testing approaches using Junit. Grey Box Testing Approaches : Introduction to Grey Box testing - Wh y Grey Box testing, Gray Box Methodology, Advantages and Disadvantages. Techniques of Grey Box Testing - Matrix Testing, Regression Testing, V 12 Orthogonal Array Testing or OAT, Pattern Testing. An Introduction to PEX - Parameterized Unit Testing, The Testing Problem. Symbolic Execution ‚Äì Example, Symbolic execution tree. PEX application Case Study ‚Äì PEX. 60T otal Hou rs DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 192 Course Year of Course Name Category L T P J Credit Code Introduction CONCEPTS IN CS0M 30E VAC 3 1 0 4 2022 DEEP LEARNING COURSE OVERVIEW This course aims to introduce the learner to an overview of the concepts and algorithm s involved in deep learning. Deep learning is a subfield of machine learning, a subfield of artificial intelligence. Basic concepts and application areas of machine learning, deep networks, convolutional neural network and recurrent neural network are covered here. This is a foundational program that will help students understand the capabilities, challenges, and consequences of deep learning and prepare them to participate in the development of leading-edge AI technology. They will be able to gain the knowledge needed to take a definitive step in the world of AI. Prerequisite: Sound knowledge in Basics of linear algebra and probability theory. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Level Description Outcomes CO 1 Demonstrate basic concepts in machine learning. Understand Illustrate the validation process of machine learning models using hyper- CO 2 parameters and validation sets. Understand Demonstrate the concept of the feed forward neural network and its training Apply CO 3 process. Build CNN and Recurrent Neural Network (RNN) models for different use Apply CO 4 cases. Use different neural network/deep learning models for practical Apply CO 5 applications. SYLLABUS Neural Networks. Introduction to optimization‚Äì Convolutional Neural Networks Practic al challenges of common deep learning architectures- early stopping, parameter sharing, dropout. Case study: AlexNet, VGG, ResNet. Recurrent neural networks Applications ‚Äì computer vision, speech recognition, natural language processing, common word embedding: continuous Bag-of-Words, Word2Vec, global vectors for word representation (GloVe). Research Areas ‚Äì autoencoders, representation learning, boltzmann machines, deep belief networks. TEXT BOOKS Ian Goodfellow, YoshuaBengio, Aaron Courville, Deep Learning, MIT Press 20 15 1. ed. Aston Zhang, Zachary C. Lipton, Mu Li, and Alexander J. Smola, Dive into 2. Deep Learning, August 2019. 3. Neural Networks and Deep Learning, Aggarwal, Charu C., c Springer 193 International Publishing AG, part of Springer Nature 2018 REFERENCES 1. Neural Smithing: Supervised Learning in Feedforward Artificial Neural Networ ks by Russell Reed, Robert J MarksII, A Bradford Book,2014 2. Practical Convolutional Neural Networks by MohitSewak, Md. Rezaul Kari m, PradeepPujari,Packt Publishing 2018 3. Hands-On Deep Learning Algorithms with Python by SudharsanRavichandran,Packt Publishing 2019 4. Deep Learning with Python by Francois Chollet,Manning Publications Co.,2018 COURSE PLAN Module Contents Hours Introduction: Key components - Data, models, objective functions, optimization algorithms, Learning algorithm. Supervised learning- regression, classification, tagging, web search, page ranking, recommender I systems, sequence learning, Unsupervised learning, Reinforcement 12 learning, Historical Trends in Deep Learning. Other Concepts - overfitting, underfitting, hyperparameters and validation sets, estimators, bias and variance. Optimization and Neural Networks : Neural Networks ‚ÄìPerceptron, Gradient Descent solution for Perceptron, Multilayer perceptron, activation functions, architecture design, chain rule, back propagation, II 12 gradient based learning. Introduction to optimization‚Äì Gradient based optimization, linear least squares. Stochastic gradient descent, Building ML algorithms and challenges. Convolutional Neural Network : Convolutional Neural Networks ‚Äì convolution operation, motivation, pooling, Structure of CNN, Convolution and Pooling as an infinitely strong prior, variants of III convolution functions, structured outputs, data types, efficient convolution 12 algorithms. Practical challenges of common deep learning architectures- early stopping, parameter sharing, dropout. Case study: AlexNet, VGG, ResNet. Recurrent Neural Network : Recurrent neural networks ‚Äì Computational graphs, RNN design, encoder ‚Äì decoder sequence to sequence IV 12 architectures, deep recurrent networks, recursive neural networks, modern RNNs LSTM and GRU, Practical use cases for RNNs. Application Areas : Applications ‚Äì computer vision, speech recognition, natural language processing, common word embedding: continuous Bag- V of-Words, Word2Vec, global vectors for word representation (GloVe). 12 Research Areas ‚Äì autoencoders, representation learning, boltzmann machines, deep belief networks. Total Hours 60 194 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 195 Course Year of Course Name Category L T P J Credit Code Introduction WIRELESS NETWORKS AND CS0M 30F VAC 3 1 0 4 2022 IoT APPLICATIONS COURSE OVERVIEW This course equips the learners with fundamental wireless technologies for the Internet of Things(IoT) and the IoT ecosystem. It covers the underlying concepts in wireless networks, communication mechanisms, protocols, hardware, software, and the cloud platforms for IoT. The students will be able to design smart IoT applications for real world problems. Prerequisite: Sound knowledge in Data Communication, Computer Networks and Programming in C. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Outcomes Recognize wireless technologies required for IoT ecosystem (Cognitive CO 1 Knowledge Level : Understand) Perceive the concept of IoT and M2M architecture, IoT examples, and Data CO 2 Management in IoT (Cognitive Knowledge Level :Apply) Outline the hardware components used in IoT including Sensors, Actuators and CO 3 development boards (Cognitive Knowledge Level : understand) Explain the software components of IoT (Cognitive Knowledge Level CO 4 :Understand) Demonstrate the protocols used in IoT and build IoT Programs (Cognitive CO 5 Knowledge Level : Apply) Demonstrate the protocols used in IoT and build IoT Programs (Cognitive Knowledge CO 6 Level : Apply) SYLLABUS Module- 1 ( Introduction to IoT and wireless technologies required for IoT ) Internet of Things, Role of Things and the Internet, Wireless IoT. Wireless Networks - Network Topologies, Types of Networks. Role of Wireless Standards in IoT. Protocol Stack - OSI Model, TCP/IP Model, IEEE 802 Reference Model, Protocols for Wireless IoT. Bluetooth - Transceiver, Frequency Channels, Typical Range, Access and Spread Spectrum, Modulation and Data Rate, Error Correction and Detection, Network Topology. ITU G.9959, Zwave, IEEE 802.15.4, Zigbee Specification, Thread, WiFi, 6LowPAN, IPv6, LoRaWAN. Module- 2 (IoT architecture, Data and Device management) Internet of Things - IoT Architectural View, Technology Behind IoT - Server End Technology, Sources of Internet of Things, M2M Communication. IoT Application Areas. IoT Examples. IoT Data 196 Management - Device Management Gateways. Design Principles for Web Connectivity - Web Communication Protocols for Connected Devices, Web Connectivity for Connected Devices using Gateways. Internet Connectivity Principles ‚Äì Internet Connectivity, Internet based communication, IP addressing in the IoT. Module- 3 (Data Acquiring and Enabling Technologies) Data Acquiring and Storage for IoT Sevices- Organization of Data, Big data, Acquiring Methods, Management Techniques, Analytics, Storage Technologies. Cloud Computing for Data storage - IoT Cloud based Services using Xively, Nimbits, and Other Platforms. Sensor Technologies for IoT Devices - Sensor Technology, Participatory Sensing, Industrial IoT and Automotive IoT, Actuators for Various Devices, Sensor Data Communication Protocols, Wireless Sensor network Technology Module-4 (Prototyping the Embedded Devices for IoT) Embedded Computing Basics, Embedded Hardware Unit. Embedded Platforms for Prototyping - Arduino, Intel Galileo, Intel Edison, Raspberry Pi, BeagleBone, mBed. Prototyping and Designing the Software for IoT Applications- Introduction, Prototyping Embedded DeviceSoftware- Programming using Arduino, Programming for an Arduino Controlled Traffic Control Lights at a Road Junction, Basic Arduino Programs to Blink LED, Find the Distance using Ultrasonic Sensor, Estimate Room Temperature, Measuring Soil Moisture Level Module 5 (Business Models and Case Studies) Business Models and Processes using IoT. Value Creation in the Internet of Things. Cloud PaaS- Xively, Nimbits, IBM Bluemix, CISCO IoT, AWS IoT, TCS Connected AWS Platform, Case studies- Smart Home, Smart Environment, Smart healthcare, Smart agriculture TEXT BOOKS Daniel Chew, ‚ÄúWireless Internet of Things -A Guide to the lower layers‚Äù, IEEE Standards 1. and Association, IEEE Press, Wiley Rajkamal, ‚ÄúInternet of Things : Architecture and Design Principles‚Äù, McGraw Hill 2. (India) Private Limited. REFERENCES 1. ArshadeepBahga, Vijay Madisetti, ‚ÄúInternet of Things: A hands-on approach‚Äù, University Press, 2015 (First edition) 2. Dieter Uckelmann, Mark Harrison, Michahelles Florian (Ed.), Architecting the internet of things, Springer, 2011 3. Dr. Ovidiu Vermesan, Dr. Peter Friess, Internet of Things: Converging Technologies for Smart Environments and Integrated Ecosystems, River Publishers, 2013 4. Simon Monk, ‚ÄúProgramming Arduino: Getting Started with Sketches‚Äù, McGraw Hill Publications COURSE PLAN Module Contents Hours Introduction to IoT and wireless technologies required for IoT : Internet of I Things, Role of Things and the Internet, Wireless IoT. Wireless Networks - 12 Network Topologies, Types of Networks. Role of Wireless Standards in IoT. 197 Protocol Stack - OSI Model, TCP/IP Model, IEEE 802 Reference Model, Protocols for Wireless IoT. Bluetooth - Transceiver, Frequency Channels, Typical Range, Access and Spread Spectrum, Modulation and Data Rate, Error Correction and Detection, Network Topology. ITU G.9959, Zwave, IEEE 802.15.4, Zigbee Specification, Thread, WiFi, 6LowPAN, IPv6, LoRaWAN. IoT architecture, Data and Device management : Internet of Things - IoT Architectural View, Technology Behind IoT - Server End Technology, Sources of Internet of Things, M2M Communication. IoT Application Areas. IoT Examples. IoT Data Management - Device Management Gateways. Design II 12 Principles for Web Connectivity - Web Communication Protocols for Connected Devices, Web Connectivity for Connected Devices using Gateways. Internet Connectivity Principles ‚Äì Internet Connectivity, Internet based communication, IP addressing in the IoT. Data Acquiring and Enabling Technologies : Data Acquiring and Storage for IoT Sevices- Organization of Data, Big data, Acquiring Methods, Management Techniques, Analytics, Storage Technologies. Cloud Computing for Data III storage - IoT Cloud based Services using Xively, Nimbits, and Other Platforms. 12 Sensor Technologies for IoT Devices - Sensor Technology, Participatory Sensing, Industrial IoT and Automotive IoT, Actuators for Various Devices, Sensor Data Communication Protocols, Wireless Sensor network Technology Prototyping the Embedded Devices for IoT : Embedded Computing Basics, Embedded Hardware Unit. Embedded Platforms for Prototyping - Arduino, Intel Galileo, Intel Edison, Raspberry Pi, BeagleBone, mBed. Prototyping and Designing the Software for IoT Applications- Introduction, Prototyping IV 12 Embedded DeviceSoftware- Programming using Arduino, Programming for an Arduino Controlled Traffic Control Lights at a Road Junction, Basic Arduino Programs to Blink LED, Find the Distance using Ultrasonic Sensor, Estimate Room Temperature, Measuring Soil Moisture Level Business Models and Case Studies : Business Models and Processes using IoT. Value Creation in the Internet of Things. Cloud PaaS- Xively, Nimbits, IBM V 12 Bluemix, CISCO IoT, AWS IoT, TCS Connected AWS Platform, Case studies- Smart Home, Smart Environment, Smart healthcare, Smart agriculture Total Hours 60 MARK DISTRIBUTION Total Marks CIE ESE ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 198 Honour Basket 1: SECURITY IN COMPUTING Course Year of Course Name Category L T P J Credit Code Introduction NETWORK CS1H30D VAC 3 1 0 4 2022 SECURITY COURSE OVERVIEW The purpose of this course is to create a better understanding of the network security concepts. This course covers network security standards, email security services, web security mechanisms, firewalls and wireless security mechanisms. This course helps the learner to gain insight into the key aspects of secure network communication and enables to apply in real-life scenarios. Prerequisite: A sound background in Number Theory and Cryptographic Algorithms COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Outcomes Identify the key aspects of security, intrusion detection systems and digital signature CO 1 schemes (Cognitive Knowledge Level: Apply) Explain the security standards used in network communication (Cognitive Knowledge CO 2 Level:Understand) Identify the mechanisms in email security services (Cognitive Knowledge Level: CO 3 Apply) Summarize the protocols used to provide web security (Cognitive Knowledge Level: CO 4 Understand) Explain the fundamental concepts of wireless network security and firewalls (Cognitive CO 5 Knowledge Level: Understand) SYLLABUS Module ‚Äì 1 (Network Security Basics) Introduction to network security - Security requirements, Challenges of security, Network security model. Malicious programs ‚Äì Worms, Viruses, Trojans, Spyware, Adware. Intrusion Detection Systems (IDS) - Uses, Techniques. Digital signatures - ElGamal, Schnorr, Digital Signature Standard (DSS). Module ‚Äì 2 (Network Security Standards) Kerberos v4 ‚Äì Configuration, Authentication, Encryption, Message formats. Kerberos v5 ‚Äì Cryptographic algorithms, Message formats. Public Key Infrastructure (PKI) ‚Äì Trust models, Revocation. Real-time communication security ‚Äì Perfect Forward Secrecy (PFS), Denial-ofService protection, Endpoint identifier hiding, Live partner reassurance. Internet Protocol Security (IPSec) - Authentication Header (AH), Encapsulating Security Payload (ESP), Internet Key Exchange (IKE) phases. Module ‚Äì 3 (Email Security) Introduction to email security - Security services for email, Establishing keys, Privacy, Authentication, Message integrity, Non-repudiation. Privacy Enhanced Mail (PEM) ‚Äì Encryption, Source authentication and integrity protection, Message formats. Secure/Multipurpose Internet Mail Extensions (S/MIME) ‚Äì Messages, Differences from PEM. Pretty Good Privacy (PGP) - Encoding, Certificate and key revocation, Anomalies, Object formats. 199 Module ‚Äì 4 (Web Security) Introduction to web security - Web security considerations, Threats. Secure Sockets Layer (SSL) ‚Äì Architecture, Protocols, Transport Layer Security (TLS) ‚Äì Differences from SSL. Hypertext Transfer Protocol Secure (HTTPS) ‚Äì Connection initiation, Closure. Secure Shell (SSH) ‚Äì Transport layer protocol, User authentication protocol, Connection protocol. Module ‚Äì 5 (Wireless Network Security and Firewalls) IEEE 802.11 Wireless LAN - Network components, Architectural model, Services. IEEE 802.11i wireless LAN security - Services, Phases of operation. Wired Equivalent Privacy (WEP), Wi-Fi Protected Access (WPA), WPA2, Wireless Application Protocol (WAP) ‚Äì Services, Protocol architecture. Firewalls ‚Äì Need for firewalls, Packet filters, Circuit-level firewalls, Application layer firewalls. TEXT BOOKS 3. C. Kaufman, R. Perlman and M. Speciner, ‚ÄúNetwork Security: Private Communication in a Public World‚Äù, 2/e, PHI. 4. William Stallings, ‚ÄúCryptography and Network Security Principles and Practice‚Äù, 5/e, Pearson REFERENCES 5. Behrouz A. Forouzan, Debdeep Mukhopadhyay, ‚ÄúCryptography and Network Security‚Äù, 3/e, Tata McGraw Hill. 6. Tyler Wrightson, ‚ÄúWireless Network Security A Beginner‚Äôs Guide‚Äù, 2012, Tata McGraw Hill. 3. William Stallings, ‚ÄúNetwork Security Essentials: Applications and Standards‚Äù, 4/e, Prentice Hall. 7. Schiller J., Mobile Communications, 2/e, Pearson Education. 8. Roberta Bragg et. al., ‚ÄúNetwork Security: The Complete Reference‚Äù, Tata McGraw Hill. COURSE PLAN Module Contents Hours Introduction to network security - Security requirements, Challenges of security, Network security model. Malicious programs ‚Äì Worms, Viruses, Trojans, Spyware, I 12 Adware. Intrusion Detection Systems (IDS) - Uses, Techniques. Digital signatures - ElGamal, Schnorr, Digital Signature Standard (DSS). Module ‚Äì 2 (Network Security Standards) Kerberos v4 ‚Äì Configuration, Authentication, Encryption, Message formats. Kerberos v5 ‚Äì Cryptographic algorithms, Message formats. Public Key Infrastructure (PKI) ‚Äì Trust models, II Revocation. Real-time communication security ‚Äì Perfect Forward Secrecy (PFS), 12 Denial-ofService protection, Endpoint identifier hiding, Live partner reassurance. Internet Protocol Security (IPSec) - Authentication Header (AH), Encapsulating Security Payload (ESP), Internet Key Exchange (IKE) phases. Module ‚Äì 3 (Email Security) Introduction to email security - Security services for email, Establishing keys, Privacy, Authentication, Message integrity, Non- repudiation. Privacy Enhanced Mail (PEM) ‚Äì Encryption, Source authentication and III 12 integrity protection, Message formats. Secure/Multipurpose Internet Mail Extensions (S/MIME) ‚Äì Messages, Differences from PEM. Pretty Good Privacy (PGP) - Encoding, Certificate and key revocation, Anomalies, Object formats. 200 Module ‚Äì 4 (Web Security) Introduction to web security - Web security considerations, Threats. Secure Sockets Layer (SSL) ‚Äì Architecture, Protocols, IV Transport Layer Security (TLS) ‚Äì Differences from SSL. Hypertext Transfer 12 Protocol Secure (HTTPS) ‚Äì Connection initiation, Closure. Secure Shell (SSH) ‚Äì Transport layer protocol, User authentication protocol, Connection protocol. Module ‚Äì 5 (Wireless Network Security and Firewalls) IEEE 802.11 Wireless LAN - Network components, Architectural model, Services. IEEE 802.11i wireless LAN security - Services, Phases of operation. Wired Equivalent Privacy (WEP), Wi-Fi V 12 Protected Access (WPA), WPA2, Wireless Application Protocol (WAP) ‚Äì Services, Protocol architecture. Firewalls ‚Äì Need for firewalls, Packet filters, Circuit-level firewalls, Application layer firewalls. Total Hours 60 201 Honour Basket 2: COMPUTATIONAL BIOLOGY Course Year of Course Name Category L T P J Credit Code Introduction MACHINE LEARNING IN CS2H30C VAC 3 1 0 4 2022 COMPUTATIONAL BIOLOGY COURSE OVERVIEW This course is intended to provide the learners a outlook towards application of Machine learning algorithms in the field of computational biology. This course helps the learners to apply the Machine learning methods - clustering algorithms, dimensionality reduction, decision drees, Artificial Neural Network, Support Vector Machine to the computational biology problems. Also the course discuss Challenges of Machine Learning in Computational Biology and Future directions of Machine Learning in Computational Biology Prerequisite: Basic background in Bioinformatics and Machine Leaning COURSE OUTCOMES After the completion of the course, the student will be able to: Course Level Description Outcomes Describe the basic concepts of Machine Leaning, Classification, regression and Under CO 1 clustering problems, parameters and measures stand Apply CO 2 Demonstrate the clustering algorithm on computational biology problems Explain Dimensionality reduction techniques and Decision Trees in computational Apply CO 3 biology Illustrate Feature Extraction and Pattern recognition and Classification in the domain of Apply CO 4 Computational Biology analysis Under CO 5 Explain the role and challenges of Machine Learning in Computational stand SYLLABUS TEXT BOOKS 3. Statistical Modelling and Machine Learning Principles for Bioinformatics Techniques, Tools, and Applications. Germany, Springer Singapore, 2020. 4. Yang, ZhengRong. Machine Learning Approaches to Bioinformatics. Singapore, World Scientific Publishing Company, 2010. REFERENCES 202 7. Izadkhah, Habib. Deep Learning in Bioinformatics: Techniques and Applications in Practice. Netherlands, Elsevier Science, 2022. 8. Agapito, Giuseppe, et al. Artificial Intelligence in Bioinformatics: From Omics Analysis to Deep Learning and Network Mining. Netherlands, Elsevier Science, 2022. 9. Data Analytics in Bioinformatics: A Machine Learning Perspective. United States, Wiley, 2021. 10. Michailidis, George, et al. Introduction to Machine Learning and Bioinformatics. United Kingdom, CRC Press, 2008. 11. Zhang, Yanqing, and Rajapakse, Jagath C, Machine Learning in Bioinformatics, Germany, Wiley, 2009. 12. Baldi, Professor Pierre, et al. Bioinformatics, Second Edition: The Machine Learning Approach. India, Bradford, 2001. COURSE PLAN Module Contents Hours Overview of Machine Learning- Overview of Machine Learning, fitting predictive models to data, Supervised and unsupervised learning, Classification, regression and I clustering problems, Loss or cost functions. Parameters and hyperparameters, 12 Training. validation and testing, Inductive bias and the bias variance trade-off, Use of clustering models. Clustering problems Computational Biology Hierarchical Clustering, Partition Clustering, Overview Model-Based Clustering, k-Means clustering, k-Means clustering algorithm, Advantages, Disadvantages, illustrative example of kMeans II 12 clustering, Clustering for creating phylogenetic trees, Using Clustering Approach to Identify Patients‚Äô Subtypes, Application of clustering algorithms on gene expression data. Supervised techniques for Computational Biology- Proteomics Dataset, Data Pre- processing Algorithms, Dimension and Feature Subset Selection, Dimensionality reduction - Principal Component Analysis (PCA), Partial Least Square (PLS), Linear III 12 Discriminant Analysis (LDA), Protein Classification, Decision Trees in Bioinformatics, Proteomic Mass Spectra Classification Using Decision Tree Technique. Machine-Learning Algorithms for Computational Biology- Machine-Learning Algorithms for Feature Selection from Gene Expression Data, Feature Extraction and Pattern recognition from sequence data, measures of a Feature. Artificial Neural IV 12 Network (ANN) in Bioinformatics, Genetic Algorithms (GA) in Bioinformatics, Designing ANN for Bioinformatics, ANN in Protein Bioinformatics, Support Vector Machine with Feature Elimination. Scope of Machine Learning in Computational Biology-Role of Machine Learning in Computational Biology, Creation and analysis of sequence data, Challenges of Machine Learning in Computational Biology, Data Errors, Mean Square Error V 12 Generative versus Discriminative, Approximation Versus Explanation, Single Versus Multiple Methods, Future directions of Machine Learning in Computational Biology. Total Hours 60 203 204 Honour Basket 3: COMPUTER VISION Course Year of Course Name Category L T P J Credit Code Introduction IMAGE AND CS2H30D VIDEO VAC 3 1 0 4 2022 PROCESSING COURSE OVERVIEW This course enables the learners to understand how digital images are stored and processed. The learners are exposed to different spatial and frequency domain methods for image enhancement, image restoration techniques, morphological operations that could be performed on digital images and also various image and video compression techniques. The course also gives an introduction to the basics of video processing and video segmentation. Prerequisite: Advanced Computer Graphics, Advanced Concepts in Computer Vision COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Understan CO 1 Summarize the steps of digital image processing and pixel relationships. d CO 2 Apply spatial and frequency domain methods for image enhancement. Apply Apply restoration techniques and morphological operations on digital CO 3 Apply images. CO 4 Compare different methods for digital image and video compression. Apply Understan CO 5 Understand the basics of video and video segmentation d SYLLABUS pocessing Image Enhancement: Spatial Domain methods - Gray level transformations, Histogram Processing, Fundamentals of Spatial Filtering, ), Discrete Wavelet transforms. Frequency Domain methods: Basics of filtering in frequency domain, image smoothing, image sharpening, homomorphic filtering, , Periodic Noise reduction by frequency domain filtering. Morphological Operations: Erosion, Dilation, Video processing TEXT BOOKS 4. Gonzalez and Woods , ‚ÄúDigital Image Processing‚Äù, 3rd edition , Pearson, 2009. 5. Li, Ze-Nian, Mark S. Drew, and Jiangchuan Liu. ‚ÄúFundamentals of multimedia‚Äù, Pearson Prentice Hall, 2004. 6. Bovik, Alan C. ‚ÄúHandbook of image and video processing‚Äù, Academic press, 2010. REFERENCES 8. David A. Forsyth & Jean Ponce, Computer vision ‚Äì A Modern Approach, Prentice Hall, 2002. 205 9. Richard Szeliski, Computer Vision: Algorithms and Applications, Springer. 10. Maheshkumar H Kolekar, ‚ÄúIntelligent Video Surveillance Systems: An Algorithmic Approach‚Äù, CRC Press. 11. Francesco Camastra, Alessandro Vinciarelli, ‚ÄúMachine Learning for Audio, Image and Video Analysis: Theory and Applications‚Äù, Springer 2015. 12. M. Tekalp ,‚ÄùDigital video Processing‚Äù, Prentice Hall International 13. Relf, Christopher G.,\"Image acquisition and processing with LabVIEW\", CRC press Chris Solomon, Toby Breckon ,\"Fundamentals of Digital Image Processing A Practical Approach with Examples in Matlab\", John Wiley & Sons, 14. Yao wang, Joem Ostarmann and Ya ‚Äì quin Zhang, ‚ÄùVideo processing and communication ‚Äú,1st edition , PHI COURSE PLAN Module Contents Hours Module ‚Äì 1 Fundamentals of Image processing: Basic steps of Image processing system, sampling and quantization of an Image, basic relationship between pixels I and connectivity. Image Enhancement: Spatial Domain methods - Gray level 12 transformations, Histogram Processing, Fundamentals of Spatial Filtering, Smoothing Spatial filters, Sharpening Spatial filters. Module -2 Image Transforms: Unitary transforms, 2D Discrete Fourier Transform, Discrete Cosine Transform (DCT), Discrete Wavelet transforms. Frequency Domain II 12 methods: Basics of filtering in frequency domain, image smoothing, image sharpening, homomorphic filtering Module - 3 Image Restoration: Image degradation/Restoration model, Noise models, Restoration in presence of noise only - spatial filtering, Periodic Noise reduction by III 2 frequency domain filtering. Morphological Operations: Erosion, Dilation, Opening, Closing, Hit-or-miss transformation, Boundary extraction. Module - 4 Image compression fundamentals ‚Äì Coding Redundancy, spatial and temporal redundancy. Compression models : Lossy and Lossless, Huffman coding, IV 12 Arithmetic coding, LZW coding, run length coding, Bit Plane coding, JPEG standards. Module - 5 Video processing: Basics of Video Processing: Analog video, Digital Video. Video segmentation: Introduction to video segmentation, Change detection. COMPUTER SCIENCE AND ENGINEERING(ARTIFICIAL INTELLIGENCE) V 12 Video Compression: Introduction to video compression, video compression based on motion compensation, Search for motion vectors, H.261 standard, Transform coding, predictive codingMPEG. Total Hours 60 206 PROGRAM ELECTIVE I 207 Course Cate Year of Course Name L T P J Credit Code gory Introduction FOUNDATIONS OF CS1U31C SECURITY IN PEC 2 1 0 3 2022 COMPUTING PRE-REQUISITE:MA0U20B- Discrete Mathematical Structures, CS1U20F-Operating Systems and CS1U20E-Database Systems."
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to create awareness among learners about the fundamentals of security and number theory. This course covers Integer & Modular Arithmetic, Primes & Congruences, Discrete Logarithms & Elliptic Curve Arithmetic and an overview of computer security. The concepts covered in this course enable the learners in effective use of cryptographic algorithms and to identify the security threats in computing.",
                    "outcomes": ": After the completion of the course, the student will be able to CO1 Illustrate the operations and properties of algebraic struc tures, integer arithmetic and modular arithmetic. Understand Use the concepts of prime numbers and factorization for Apply ensuring security in computing CO2 Illustrate the concepts of Linear Congruence, Primitive Roots, Apply Discrete Logarithms and Elliptic Curve Arithmetic CO3 CO4 Summarize the threats and attacks related to computer and Understand program security CO5 Outline the key aspects of operating system and database Understand security",
                    "syllabus": "Integer arithmetic-Modular arithmetic-Algebraic structures-Prime numbers-Fermat‚Äôs theorem-Primality testing-Euler‚Äôs theorem- Factorization-Linear congruence-Simultaneous linear congruence-Solving congruence modulo prime powers-Primitive roots-Elliptic curve arithmetic-Prime curves, Binary curves- Introduction to computer security-Browser attack types-Web attacks -Email attack types-Introduction to program security-Operating system security -Database security.",
                    "textbooks": "4. Behrouz A Forouzan, Cryptography and Network Security, 3/e, Tata McGraw-Hill. 5. Charles P Pfleeger, Shari Lawrence Pfleeger, Jonathan Margulies, Security in Computing, 5/e, Prentice Hall. 6. G.A. Jones & J.M. Jones, Elementary Number Theory, Springer UTM, 2007 REFERENCE MATERIALS 1. William Stallings, Cryptography and Network Security Principles and Practices, 4/e, Pearson Ed. 208 COURSE PLAN Modul Contents No. of e hours I 8 Integer arithmetic - Integer division, Divisibility, Greatest Common Divisor (GCD), Euclid's algorithm for GCD, Extended Euclid‚Äôs algorithm, Linear Diophantine Equations. Modular arithmetic - Operations, Properties. Algebraic structures - Groups, Rings, Fields, Finite fields, GF(p), GF (2n). II 10 Prime numbers - Prime numbers and prime-power factorization, Fermat and Mersenne primes, Fermat‚Äôs theorem, Applications, Euler‚Äôs theorem, Euler‚Äôs totient function, Applications. Primality testing ‚Äì Deterministic algorithms and Probabilistic algorithms. Factorization - Fermat‚Äôs factorization, Pollard p-1 method. III 10 Linear congruence - Simultaneous linear congruence, Chinese Remainder Theorem (CRT). Congruence with a prime - Power modulus, Arithmetic modulo p, Pseudoprimes and Carmichael numbers, Solving congruence modulo prime powers. Primitive roots - Existence of primitive roots for primes, Discrete logarithms. Elliptic curve arithmetic ‚Äì Prime curves, Binary curves, Addition of two points, Multiplication of a point by a constant. IV 9 Introduction to computer security ‚Äì Threats, Vulnerabilities, Controls. Browser attack types, Web attacks targeting users, Email attack types. Introduction to program security - Non-malicious programming oversights, Malware. V 8 Operating system security ‚Äì Security in operating system, Security in design of operating system. Database security ‚Äì Security requirements of databases, Reliability and integrity, Database disclosure. 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 209 Course Categ Course Name L T P J Credit Year of Introduction Code ory CS1U31 Applied Data Science G with Python PEC 2 0 2 3 2022 Industry elective PRE-REQUISITES Python Basics: Basic Python syntax, Control structures (loops, conditionals), Functions and lambda functions, Basic data structures (lists, dictionaries, tuples, sets Mathematics: Linear Algebra, Calculus, Probability and Statistics, General Computing Knowledge: Familiarity with the command line or terminal, Basic understanding of how databases work, including SQL, Experience with a code editor or an Integrated Development Environment(IDE) like PyCharm or Visual Studio Code. COURSE OVERVIEW Applied Data Science with Python course, a comprehensive journey designed to equip you with the knowledge, skills, and tools necessary to thrive in today‚Äôs data-driven world. This course serves as a bridge between theoretical foundations and real-world applications, offering you the hands-on experience required to tackle actual data challenges. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Outcom Description Level es Make use of Pandas library to effectively process complex datasets. Apply CO 1 Create effective data visualization using Python libraries Apply CO 2 Build machine learning and deep learning models using Python Apply CO 3 libraries Apply Natural Language Processing techniques in data analysis. Apply CO 4 Develop models using Time series data to solve real world problems A p ply CO 5 SYLLABUS Introduction to Data Science and Python ,Data Manipulation with Pandas, Advanced Pandas- Merging, Joining and Concatenating, Pivot Tables, Time Series Analysis in Pandas, Data Visualization with Matplotlib and Seaborn, Seaborn for Statistical Visualization, Advanced Visualization Techniques, Exploratory Data Analysis (EDA),Visual EDA , Introduction to Machine Learning with Scikit-learn, Regression Techniques ,Classification Techniques, Model Evaluation ,Advanced Machine Learning Techniques, Ensemble Methods ,Unsupervised Learning ,Hyperparameter Tuning, Introduction to Deep Learning with TensorFlow/Keras. Understanding Neural Networks, Implementing Neural Networks, Introduction to Convolutional Neural Networks, 210 Natural Language Processing with NLTK and SpaCy, Text Classification and Sentiment Analysis, Named Entity Recognition, Time Series Forecasting with Python, Forecasting Models, Data Science Project. TEXT BOOKS 5. McKinney, W., 2022. Python for data analysis. \" O'Reilly Media, Inc.\". 6. Goodfellow, I., Bengio, Y. and Courville, A., 2016. Deep learning. MIT press. 7. G√©ron, A., 2022. Hands-on machine learning with Scikit-Learn, Keras . and TensorFlow. \" O'Reilly Media, Inc.\". 8. Hapke, H., Howard, C. and Lane, H., 2019. Natural Language Processing in Action: Understanding, analyzing, and generating text with Python. Simon and Schuster.",
                    "references": "1. VanderPla, 2016. Jake. Python Data Science Handbook. 2. Andrew Park, 2021, Data Science for Beginners 3. M√ºller, A.C. and Guido, S., 2016. Introduction to machine learning with Python: a guide for data scientists. \" O'Reilly Media, Inc.\". 4. Muller, A.C. and Guido, S., 2017. Introduction to machine learning with Python. O‚ÄôReilly.",
                    "course_plan": "Modul Contents No. of e hours I 8 Integer arithmetic - Integer division, Divisibility, Greatest Common Divisor (GCD), Euclid's algorithm for GCD, Extended Euclid‚Äôs algorithm, Linear Diophantine Equations. Modular arithmetic - Operations, Properties. Algebraic structures - Groups, Rings, Fields, Finite fields, GF(p), GF (2n). II 10 Prime numbers - Prime numbers and prime-power factorization, Fermat and Mersenne primes, Fermat‚Äôs theorem, Applications, Euler‚Äôs theorem, Euler‚Äôs totient function, Applications. Primality testing ‚Äì Deterministic algorithms and Probabilistic algorithms. Factorization - Fermat‚Äôs factorization, Pollard p-1 method. III 10 Linear congruence - Simultaneous linear congruence, Chinese Remainder Theorem (CRT). Congruence with a prime - Power modulus, Arithmetic modulo p, Pseudoprimes and Carmichael numbers, Solving congruence modulo prime powers. Primitive roots - Existence of primitive roots for primes, Discrete logarithms. Elliptic curve arithmetic ‚Äì Prime curves, Binary curves, Addition of two points, Multiplication of a point by a constant. IV 9 Introduction to computer security ‚Äì Threats, Vulnerabilities, Controls. Browser attack types, Web attacks targeting users, Email attack types. Introduction to program security - Non-malicious programming oversights, Malware. V 8 Operating system security ‚Äì Security in operating system, Security in design of operating system. Database security ‚Äì Security requirements of databases, Reliability and integrity, Database disclosure. 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 209 Course Categ Course Name L T P J Credit Year of Introduction Code ory CS1U31 Applied Data Science G with Python PEC 2 0 2 3 2022 Industry elective PRE-REQUISITES Python Basics: Basic Python syntax, Control structures (loops, conditionals), Functions and lambda functions, Basic data structures (lists, dictionaries, tuples, sets Mathematics: Linear Algebra, Calculus, Probability and Statistics, General Computing Knowledge: Familiarity with the command line or terminal, Basic understanding of how databases work, including SQL, Experience with a code editor or an Integrated Development Environment(IDE) like PyCharm or Visual Studio Code. COURSE OVERVIEW Applied Data Science with Python course, a comprehensive journey designed to equip you with the knowledge, skills, and tools necessary to thrive in today‚Äôs data-driven world. This course serves as a bridge between theoretical foundations and real-world applications, offering you the hands-on experience required to tackle actual data challenges. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Outcom Description Level es Make use of Pandas library to effectively process complex datasets. Apply CO 1 Create effective data visualization using Python libraries Apply CO 2 Build machine learning and deep learning models using Python Apply CO 3 libraries Apply Natural Language Processing techniques in data analysis. Apply CO 4 Develop models using Time series data to solve real world problems A p ply CO 5 SYLLABUS Introduction to Data Science and Python ,Data Manipulation with Pandas, Advanced Pandas- Merging, Joining and Concatenating, Pivot Tables, Time Series Analysis in Pandas, Data Visualization with Matplotlib and Seaborn, Seaborn for Statistical Visualization, Advanced Visualization Techniques, Exploratory Data Analysis (EDA),Visual EDA , Introduction to Machine Learning with Scikit-learn, Regression Techniques ,Classification Techniques, Model Evaluation ,Advanced Machine Learning Techniques, Ensemble Methods ,Unsupervised Learning ,Hyperparameter Tuning, Introduction to Deep Learning with TensorFlow/Keras. Understanding Neural Networks, Implementing Neural Networks, Introduction to Convolutional Neural Networks, 210 Natural Language Processing with NLTK and SpaCy, Text Classification and Sentiment Analysis, Named Entity Recognition, Time Series Forecasting with Python, Forecasting Models, Data Science Project. TEXT BOOKS 5. McKinney, W., 2022. Python for data analysis. \" O'Reilly Media, Inc.\". 6. Goodfellow, I., Bengio, Y. and Courville, A., 2016. Deep learning. MIT press. 7. G√©ron, A., 2022. Hands-on machine learning with Scikit-Learn, Keras . and TensorFlow. \" O'Reilly Media, Inc.\". 8. Hapke, H., Howard, C. and Lane, H., 2019. Natural Language Processing in Action: Understanding, analyzing, and generating text with Python. Simon and Schuster. REFERENCES 1. VanderPla, 2016. Jake. Python Data Science Handbook. 2. Andrew Park, 2021, Data Science for Beginners 3. M√ºller, A.C. and Guido, S., 2016. Introduction to machine learning with Python: a guide for data scientists. \" O'Reilly Media, Inc.\". 4. Muller, A.C. and Guido, S., 2017. Introduction to machine learning with Python. O‚ÄôReilly. COURSE PLAN Module Contents Hours Introduction to Data Science and Python, What is Data 8 Science, Introduction to Python, Why Python for Data I Science?, Data Manipulation with Pandas, Introduction to Pandas ,Data Frames and Series, Basic Operations, Advanced Pandas Data Visualization with Matplotlib and Seaborn, 8 Matplotlib Basics ,Seaborn for Statistical Visualization ,Advanced Visualization Techniques II Exploratory Data Analysis (EDA) Understanding EDA , Visual EDA -Univariate, Bivariate, and Multivariate Analysis- Correlation and Heatmaps Introduction to Machine Learning with Scikit-learn , 10 Understanding Machine Learning Regression Techniques, Classification Techniques Logistic III Regression Model Evaluation, Advanced Machine Learning Techniques, Ensemble Methods Unsupervised Learning, Hyperparameter Tuning Introduction to Deep Learning with TensorFlow/Keras, 11 Understanding Neural Networks, Implementing Neural Networks ,Introduction to Convolutional Neural IV Networks Natural Language Processing with NLTK and SpaCy, Basics of NLP, Text Classification and Sentiment 211 Analysis, Named Entity Recognition Time Series Forecasting with Python, Basics of Time 8 Series Analysis V Forecasting Models - ARIMA, Exponential Smoothing Practical Data Science Project-Complete End-to-End Project Walkthrough Total Hours 45 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 212 Course Categor Year of Course Name L T P J Credit Code y Introduction CONCEPTS IN COMPUTER GRAPHICS CS2U31A PEC 2 1 0 3 2022 AND IMAGE PROCESSING PRE-REQUISITE: Nil"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The purpose of this course is to make awareness about strong theoretical relationships between computer graphics and image processing. This course helps the learner to understand three- dimensional environment representation in a computer, transformation of 2D/3D objects, basic mathematical techniques and algorithms used to build useful applications, imaging, and image processing techniques. The study of computer graphics and image processing develops the ability to create image processing frameworks for different domains and develops algorithms for emerging display technologies.",
                    "outcomes": ": After the completion of the course the student will be able to Course Description Level Outcomes CO1 Describe the working principles of graphics devices Understand CO2 Illustrate line drawing, circle drawing and polygon filling Apply algorithms CO3 Demonstrate geometric representations, transformations on 2D Apply & 3D objects, clipping algorithms and projection algorithms CO4 Summarize visible surface detection methods Understand CO5 Summarize the concepts of digital image representation, Apply processing and demonstrate pixel relationships CO6 Solve image enhancement and segmentation problems using Apply spatial domain techniques",
                    "syllabus": "Basics of Computer Graphics and its applications. Video Display devices. Line drawing algorithms. Circle drawing algorithms. Filled Area Primitives. Two dimensional transformations, Matrix representations and homogeneous coordinates. Basic 3D transformations. Window to viewport transformation. Cohen Sutherland Line clipping algorithm. Sutherland Hodgeman Polygon clipping algorithm. Three dimensional viewing pipeline. Projections- Parallel and Perspective projections. Visible surface detection algorithms- Depth buffer algorithm, Scan line algorithm. Introduction to Image processing and applications. Fundamental steps in image processing. Components of image processing system. Coordinate conventions. Sampling and quantization. Spatial and Gray Level Resolution. Basic relationship between pixels‚Äì neighbourhood, adjacency, connectivity. Fundamentals of spatial domain-convolution operation. Basic gray level transformation functions. Histogram equalization. Basics of spatial filtering - Sharpening spatial filters. Fundamentals of Image Segmentation. Thresholding. Region based Approach - Region Growing, Region Splitting and Merging. Edge Detection - Edge Operators- Sobel and Prewitt. 213",
                    "textbooks": "3. Donald Hearn and M. Pauline Baker, Computer Graphics, PHI, 2e, 1996 4. Rafael C. Gonzalez and Richard E. Woods, Digital Image Processing. Pearson, 4e, 2017 REFERENCE MATERIALS 5. William M. Newman and Robert F. Sproull, Principles of Interactive Computer Graphics. McGraw Hill, 2001. 6. Zhigang Xiang and Roy Plastock, Computer Graphics (Schaum‚Äôs outline Series), McGraw Hill 2019. 7. David F. Rogers , Procedural Elements for Computer Graphics, Tata McGraw Hill,2001. 8. M. Sonka, V. Hlavac, and R. Boyle, Image Processing, Analysis, and Machine Vision, Thomson India Edition, 4e, 2017. COURSE PLAN Module Contents No. of hours I Basics of Computer Graphics and its applications. Video Display 9 devices- Refresh Cathode Ray Tubes, Random Scan Displays and systems, Raster scan displays and systems. Line drawing algorithms- DDA, Bresenham‚Äôs algorithm. Circle drawing algorithms- Midpoint Circle generation algorithm, Bresenham‚Äôs algorithm. II 9 Filled Area Primitives- Scan line polygon filling, Boundary filling and flood filling. Two dimensional transformations-Translation, Rotation, Scaling, Reflection and Shearing, Composite transformations, Matrix representations and homogeneous coordinates. Basic 3D transformations. III 9 Window to viewport transformation. Cohen Sutherland Line clipping algorithm. Sutherland Hodgeman Polygon clipping algorithm. Three dimensional viewing pipeline. Projections- Parallel and Perspective projections. Visible surface detection algorithms- Depth buffer algorithm, Scan line algorithm. IV 9 Introduction to Image processing and applications. Image as 2D data. Image representation in Gray scale, Binary and Colour images. Fundamental steps in image processing. Components of image processing system. Coordinate conventions. Sampling and quantization. Spatial and Gray Level Resolution. Basic relationship between pixels‚Äì neighbourhood, adjacency, connectivity. Fundamentals of spatial domain-convolution operation. V 9 Basic gray level transformation functions - Log transformations, Power-Law transformations, Contrast stretching. Histogram equalization. Basics of spatial filtering - Smoothing spatial filter- 214 Linear and nonlinear filters, and Sharpening spatial filters-Gradient and Laplacian. Fundamentals of Image Segmentation. Thresholding - Basics of Intensity thresholding and Global Thresholding. Region based Approach - Region Growing, Region Splitting and Merging. Edge Detection - Edge Operators- Sobel and Prewitt 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 215 Course Year of Course Name Category L T P J Credit Code Introduction Object Oriented CS2U31B Programming using PEC 2 1 0 0 3 2022 Java PRE-REQUISITE: Nil COURSE OVERVIEW Aim of the course is to introduce Object oriented concepts in programming. The course introduces Object Oriented Principles, Object Oriented Programming in Java, Exception handling, Event handling, multithreaded programming and graphical user interface programming. The course will enable learners to solve problems by breaking it down to object level while designing software and implementing it using Java. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Summarize the Basic features and architecture of Java Understand CO 1 Construct Object Oriented Design using Unified Modelling Apply CO 2 Language (UML) Apply the object-oriented concepts - classes, objects, Apply CO 3 constructors, data hiding, inheritance, and polymorphism to write Java programs. Utilize packages & interfaces, input/output streams, files and Apply CO 4 string-handling mechanisms to develop programs Utilize exception handling, multithreading and database Apply CO 5 connectivity to develop java applications. Apply event handling features and swing to develop Graphical Apply CO 6 User Interface based Java application programs SYLLABUS Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. Introduction to Java - Java programming Environment and Runtime Environment, Java Virtual Machine (JVM), Java compiler, Bytecode. Core Java Fundamentals: Data types, Operators, Control Statements, Object Oriented Programming in Java - Class Fundamentals, Constructors, Method Overloading, Access Control, Command Line Arguments, Inheritance - Method Overriding, Abstract Classes and Methods. Packages and Interfaces, Interfaces, String Handling, Comparison of String Buffer and String, Input/ Output - Reading Console Input, Writing Console Output, Object Streams and Serialization, Working with Files. Exception Handling, Collections framework, Collections Class, Event handling - Delegation Event 216 Model, Multithreaded Programming. Swings fundamentals - Model View Controller (MVC), Event Handling in Swings, Exploring Swings, Java Database Connectivity (JDBC). TEXTBOOKS 1. Herbert Schildt, Java: The Complete Reference, 8/e, Tata McGraw Hill, 2011. Bahrami A., Object Oriented Systems Development using the Unified Modeling 2. Language, McGraw Hill, 1999. Paul Deitel, Harvey Deitel, Java How to Program, Early Objects 11th Edition, Pearson, 3. 2018.",
                    "references": "1. Y. Daniel Liang, Introduction to Java Programming, 7/e, Pearson, 2013. 2. Nageswararao R., Core Java: An Integrated Approach, Dreamtech Press, 2008 3. Balaguruswamy E., Programming JAVA a Primer, 5/e, McGraw Hill, 2014.",
                    "course_plan": "Module Contents No. of hours I Basics of Computer Graphics and its applications. Video Display 9 devices- Refresh Cathode Ray Tubes, Random Scan Displays and systems, Raster scan displays and systems. Line drawing algorithms- DDA, Bresenham‚Äôs algorithm. Circle drawing algorithms- Midpoint Circle generation algorithm, Bresenham‚Äôs algorithm. II 9 Filled Area Primitives- Scan line polygon filling, Boundary filling and flood filling. Two dimensional transformations-Translation, Rotation, Scaling, Reflection and Shearing, Composite transformations, Matrix representations and homogeneous coordinates. Basic 3D transformations. III 9 Window to viewport transformation. Cohen Sutherland Line clipping algorithm. Sutherland Hodgeman Polygon clipping algorithm. Three dimensional viewing pipeline. Projections- Parallel and Perspective projections. Visible surface detection algorithms- Depth buffer algorithm, Scan line algorithm. IV 9 Introduction to Image processing and applications. Image as 2D data. Image representation in Gray scale, Binary and Colour images. Fundamental steps in image processing. Components of image processing system. Coordinate conventions. Sampling and quantization. Spatial and Gray Level Resolution. Basic relationship between pixels‚Äì neighbourhood, adjacency, connectivity. Fundamentals of spatial domain-convolution operation. V 9 Basic gray level transformation functions - Log transformations, Power-Law transformations, Contrast stretching. Histogram equalization. Basics of spatial filtering - Smoothing spatial filter- 214 Linear and nonlinear filters, and Sharpening spatial filters-Gradient and Laplacian. Fundamentals of Image Segmentation. Thresholding - Basics of Intensity thresholding and Global Thresholding. Region based Approach - Region Growing, Region Splitting and Merging. Edge Detection - Edge Operators- Sobel and Prewitt 45 Total Hours MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 215 Course Year of Course Name Category L T P J Credit Code Introduction Object Oriented CS2U31B Programming using PEC 2 1 0 0 3 2022 Java PRE-REQUISITE: Nil COURSE OVERVIEW Aim of the course is to introduce Object oriented concepts in programming. The course introduces Object Oriented Principles, Object Oriented Programming in Java, Exception handling, Event handling, multithreaded programming and graphical user interface programming. The course will enable learners to solve problems by breaking it down to object level while designing software and implementing it using Java. COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes Summarize the Basic features and architecture of Java Understand CO 1 Construct Object Oriented Design using Unified Modelling Apply CO 2 Language (UML) Apply the object-oriented concepts - classes, objects, Apply CO 3 constructors, data hiding, inheritance, and polymorphism to write Java programs. Utilize packages & interfaces, input/output streams, files and Apply CO 4 string-handling mechanisms to develop programs Utilize exception handling, multithreading and database Apply CO 5 connectivity to develop java applications. Apply event handling features and swing to develop Graphical Apply CO 6 User Interface based Java application programs SYLLABUS Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. Introduction to Java - Java programming Environment and Runtime Environment, Java Virtual Machine (JVM), Java compiler, Bytecode. Core Java Fundamentals: Data types, Operators, Control Statements, Object Oriented Programming in Java - Class Fundamentals, Constructors, Method Overloading, Access Control, Command Line Arguments, Inheritance - Method Overriding, Abstract Classes and Methods. Packages and Interfaces, Interfaces, String Handling, Comparison of String Buffer and String, Input/ Output - Reading Console Input, Writing Console Output, Object Streams and Serialization, Working with Files. Exception Handling, Collections framework, Collections Class, Event handling - Delegation Event 216 Model, Multithreaded Programming. Swings fundamentals - Model View Controller (MVC), Event Handling in Swings, Exploring Swings, Java Database Connectivity (JDBC). TEXTBOOKS 1. Herbert Schildt, Java: The Complete Reference, 8/e, Tata McGraw Hill, 2011. Bahrami A., Object Oriented Systems Development using the Unified Modeling 2. Language, McGraw Hill, 1999. Paul Deitel, Harvey Deitel, Java How to Program, Early Objects 11th Edition, Pearson, 3. 2018. REFERENCES 1. Y. Daniel Liang, Introduction to Java Programming, 7/e, Pearson, 2013. 2. Nageswararao R., Core Java: An Integrated Approach, Dreamtech Press, 2008 3. Balaguruswamy E., Programming JAVA a Primer, 5/e, McGraw Hill, 2014. COURSE PLAN Module Contents Hours Approaches to Software Design - Functional Oriented Design, Object Oriented Design, Object Modeling Using Unified Modeling Language (UML) ‚Äì Basic Object Oriented concepts, UML diagrams, Use case model, Class diagram, Interaction diagram, Activity diagram, State chart diagram. I 8 Introduction to Java - Java programming Environment and Runtime Environment, Development Platforms -Standard, Enterprise. Java Virtual Machine (JVM), Java compiler, Bytecode, Java Buzzwords, Java program structure, Comments, Garbage Collection. Primitive Data types - Integers, Floating Point Types, Characters, Boolean. Literals, Type Conversion and Casting, Variables, Arrays, Strings, Vector class. Object Oriented Programming in Java - Class Fundamentals, Declaring Objects, Object Reference, Introduction to Methods, Constructors, this Keyword, Method Overloading, Using Objects as Parameters, Returning II 12 Objects, Recursion, Access Control, Static Members, Final Variables, Inner Classes, Command Line Arguments, Inheritance - Super Class, Sub Class, The Keyword super, protected Members, Calling Order of Constructors, Method Overriding, the Object class, Abstract Classes and Methods, using final with Inheritance. Java Library - String Handling ‚Äì String Constructors, String Length, Special String Operations - Character Extraction, String Comparison, Searching Strings, Modifying Strings, using value Of(), Comparison of String Buffer and String. III 8 Packages and Interfaces - Defining Package, CLASSPATH, Access Protection, Importing Packages, Interfaces. Input/ Output - I/O Basics, Reading Console Input, Writing Console Output, PrintWriter Class, Object Streams and Serialization, Working with Files. IV Exception Handling - Checked Exceptions, Unchecked Exceptions, try Block 9 and catch Clause, Multiple catch Clauses, Nested try Statements, throw, 217 throws and finally. Collections framework - Collections overview, Collections Interfaces- Collection Interface, List Interface. Collections Class ‚Äì Array List class. Accessing a Collection via an Iterator. Event handling - Event Handling Mechanisms, Delegation Event Model, Event Classes, Sources of Events, and Event Listener Interfaces, Using the Delegation Model. Multithreaded Programming - The Java Thread Model, The Main Thread, Creating Thread, Creating Multiple Threads, Synchronization, Suspending, Resuming and Stopping Threads. Graphical User Interface and Database support of Java: Swings fundamentals - Swing Key Features, Model View Controller (MVC), Swing Controls, Components and Containers, Swing Packages, Event Handling in Swings, V Swing Layout Managers, Exploring Swings ‚ÄìJFrame, JLabel, The Swing 8 Buttons, JTextField. Java Database Connectivity (JDBC) - JDBC overview, Creating and Executing Queries ‚Äì create table, delete, insert, select. Total Hours 45 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 218 Year of Course Course Name Category L T P J Credit Introductio Code n Machine Learning Models and CS2U31C PEC 2 1 0 0 3 2022 Storage Management COURSE OVERVIEW This course enables the learners to understand the advanced concepts and algorithms in machine learning. The course covers the standard and most popular supervised learning algorithms. This course aims to provide the basics for developing deployable machine learning systems. The course helps the students to provide machine learning based solutions to real world problems. Prerequisite : Nil COURSE OUTCOMES After the completion of the course, the student will be able to: Course Description Level Outcomes CO 1 Explain the basic concepts and techniques of Machine Learning. Understand Demonstrate supervised learning techniques of classification and CO 2 Apply regression Illustrate the concepts of kernel functions, support vector machines CO 3 Apply and Markov model. Apply the techniques of clustering and multilayer neural networks. CO 4 Apply Summarize the process of development of a machine learning CO 5 Understand model in real-world applications. SYLLABUS Examples of Machine Learning applications - Learning associations, Classification, Regression, Unsupervised Learning, Reinforcement Learning. Supervised learning- Input representation, Cross validation and re-sampling methods- K- fold cross validation, Boot strapping, Measuring classifier performance. Support Vector Machine, Hidden Markov models, Evaluation problem, finding state sequence, Learning model parameters. Clustering Methods Requirements for ML Systems - Iterative process for developing ML systems in production ‚Äì Data Systems Fundamentals: data sources, data formats , data models, data storage engines and processing ‚Äì Training data: Sampling techniques, Labelling, Handling class imbalance - Model Development and Training: Evaluating ML Models, Ensembles - Model Offline Evaluation: Baselines, Evaluation Methods ‚Äì Model Deployment: Batch Prediction vs. Online Prediction, Model Compression, Model Optimization TEXT BOOKS 1. Ethem Alpaydƒ±n, Introduction to Machine Learning (Adaptive Computation and Machine 219 Learning), MIT Press, 2004. 2. Huyen, Chip. Designing machine learning systems. \" O'Reilly Media, Inc.\", 2022. REFERENCES 1. Christopher Bishop. Neural Networks for Pattern Recognition, Oxford University Press, 1995. 2. Kevin P. Murphy. Machine Learning: A Probabilistic Perspective, MIT Press 2012. 3. Trevor Hastie, Robert Tibshirani, Jerome Friedman, The Elements Of Statistical Learning, Second edition Springer 2007. 4. P. Langley, Elements of Machine Learning, Morgan Kaufmann, 1995. COURSE PLAN Modul Contents Hours e Introduction to Machine Learning: Examples of Machine Learning applications - Learning associations, Classification, Regression, Unsupervised Learning, Reinforcement Learning. Supervised learning- Input representation, I Hypothesis class, Version space, Vapnik-Chervonenkis (VC) Dimension. 9 Probably Approximately Learning (PAC), Noise, Learning Multiple classes, Model Selection and Generalization, Dimensionality reduction- Subset selection, Principal Component Analysis. Classification: Cross validation and re-sampling methods- K- fold cross validation, Boot strapping, Measuring classifier performance- Precision, recall, ROC curves. Bayes Theorem, Bayesian classifier, Maximum Likelihood II estimation, Density functions, Regression. Decision Trees- Entropy, 9 Information Gain, Tree construction, ID3, Issues in Decision Tree learning- Avoiding Over-fitting, Reduced Error Pruning, The problem of Missing Attributes, Gain Ratio, Classification by Regression (CART). Kernel Machines: Support Vector Machine- Optimal Separating hyper plane, Soft-margin hyperplane, Kernel trick, Kernel functions. Discrete Markov Processes, Hidden Markov models, Three basic problems of HMMs- Evaluation III 6 problem, finding state sequence, Learning model parameters. Combining multiple learners, Ways to achieve diversity, Model combination schemes, Voting, Bagging, Booting. Unsupervised Learning: Clustering Methods - K-means, Expectation- Maximization Algorithm, Hierarchical Clustering Methods, Density based clustering. Neural Networks- The Perceptron, Activation Functions, Training IV Feed Forward Network by Back Propagation- Multi-Layer Perceptron in 6 Practice ‚Äì Examples of using the MLP- Radial Basis Functions and Splines ‚Äì Concepts ‚Äì RBF Network ‚Äì Curse of Dimensionality ‚Äì Interpolations and Basis Functions. Designing ML Systems in Production: Requirements for ML Systems - Iterative process for developing ML systems in production ‚Äì Data Systems Fundamentals: data sources, data formats , data models, data storage engines and V processing ‚Äì Training data: Sampling techniques, Labelling, Handling class 15 imbalance - Model Development and Training: Evaluating ML Models, Ensembles - Model Offline Evaluation: Baselines, Evaluation Methods ‚Äì Model Deployment: Batch Prediction vs. Online Prediction, Model Compression, 220 Model Optimization. Total Hours 45 MARK DISTRIBUTION Total Marks CIE Marks ESE Marks ESE Duration 150 50 100 3 hours CONTINOUS INTERNAL EVALUATION PATTERN Attendance : 10 marks Continuous Assessment Tests : 25 marks Continuous Assessment Assignment : 15 marks 221"
                }
            ]
        },
        "SEMESTER VII": {
            "courses": []
        },
        "SEMESTER VIII": {
            "courses": [
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course introduces students to some basic mathematical ideas and tools which are at the core of any engineering course. A brief course in Linear Algebra familiarizes students with some basic techniques in matrix theory which are essential for analyzing linear systems. The calculus of functions of one or more variables taught in this course are useful in modelling and analyzing physical phenomena involving continuous change of variables or parameters and have applications across all branches of engineering.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Solve systems of linear equations. Apply CO 2 Compute maxima and minima using partial derivatives. Apply CO 3 Compute areas and volumes of geometrical shapes using multiple Apply integrals. CO 4 Identify the convergence or divergence of an infinite series. Apply CO 5 Determine the Taylor and Fourier series expansion of functions Apply and learn their applications.",
                    "syllabus": "Basics of Linear Algebra ‚Äì Solution of systems of linear equations, row echelon form, rank, eigenvalues and eigenvectors, diagonalization of matrices, orthogonal transformation, quadratic forms. Partial Differentiation and Applications ‚Äì Limit and continuity of functions of two or more variables, partial derivatives, chain rule, total derivatives, maxima and minima. Multiple Integrals ‚Äì Double and triple integrals, double integrals over rectangular and non- rectangular regions, changing the order of integration, finding areas and volume, mass and center of gravity. Infinite series - Convergence and divergence of Infinite series, geometric series and p-series, test of convergence, Alternating series, absolute and conditional convergence Taylor series, Binomial series and series representation of exponential, trigonometric, logarithmic Functions-Fourier Series- Euler‚Äôs formulas, Fourier sine and cosine series, Half range expansions",
                    "textbooks": "1) H. Anton, I. Biven, S. Davis, Calculus, Wiley, 10th Edition, 2015. BTech in Computer Science and Engineering(AI) 2) Erwin Kreyszig, Advanced Engineering Mathematics, John Wiley & Sons, 10thEdition, 2016.",
                    "references": "1) J.Stewart, Essential Calculus,Cengage,2ndEdition,2017. 2) G.B.Thomas and R.L.Finney, Calculus and Analytic geometry, 9thEdition,Pearson,Reprint,2002. 3) Peter V. O'Neil, Advanced Engineering Mathematics, Cengage, 7th Edition 2012.",
                    "course_plan": "Module Contents No. of hours Linear Algebra: Systems of linear equations, Solution by Gauss elimination, I 12 row echelon form and rank of a matrix, fundamental theorem for linear systems (homogeneous and non-homogeneous, without proof), Eigen values and Eigen vectors. Diagonalization of matrices, orthogonal transformation, quadratic forms and their canonical forms. Multivariable calculus-Differentiation: Concept of limit and continuity of II 12 functions of two variables, partial derivatives, Differentials, Local Linear approximations, chain rule, total derivative, Relative maxima and minima, Absolute maxima and minima on closed and bounded set. Multivariable Calculus-Integration: Double integrals (Cartesian), reversing the III 12 order of integration, change of coordinates (Cartesian to polar), finding areas and volume using double integrals, mass and centre of gravity of inhomogeneous laminas using double integral. Triple integrals, volume calculated as triple integral, triple integral in cylindrical and spherical coordinates (computations involving spheres, cylinders). Sequences and Series: Convergence of sequences and series, convergence of IV 12 geometric series and p-series(without proof), test of convergence (comparison, ratio and root tests without proof); Alternating series and Leibnitz test, absolute and conditional convergence. Series representation of functions: Taylor series (without proof, assuming the V 12 possibility of power series expansion in appropriate domains), Binomial series and series representation of exponential, trigonometric, logarithmic functions (without proofs of convergence); Fourier series, Euler formulas, Convergence of Fourier series (without proof), half range sine and cosine series, Perceval‚Äôs theorem (without proof). Total hours 60 BTech in Computer Science and Engineering(AI) Year of Course Code Course Name Category L T P Credit Introduction PH0U10C ENGINEERING PHYSICS-C BSC 2 1 0 3 2022"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of the course is to develop scientific attitude in students and offer them an understanding of physical concepts behind various engineering applications. It creates an urge in students to think creatively in emerging areas of Physics.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Describe the characteristics of different types of oscillations and waves Understand CO 2 Explain natural physical processes and related technological Understand advances using principles of optics CO 3 Generalize the principle of quantum mechanics to explain the Understand behavior of matter in the atomic and subatomic level CO 4 Relate the fundamental ideas of magnetism and vector calculus to Understand arrive at Maxell‚Äôs equations CO 5 Describe the fundamentals of superconductivity and fibre Understand optics for various engineering applications",
                    "syllabus": "Oscillations and Waves: Oscillations - Introduction, Forced oscillations, One dimensional and three-dimensional wave equations, Transverse vibrations along a stretched string Wave Optics: Interference of light- Air wedge, Newton‚Äôs rings, Antireflection coating, Diffraction- Grating equation, Rayleigh‚Äôs criterion Quantum Mechanics & Nano technology: Wave function, Time dependent and time independent Schrodinger wave equations, One-dimensional potential well, Introduction to nanoscience and technology, Quantum confinement, Applications Magnetism & Electro Magnetic Theory: Magnetic field and Magnetic flux density, magnetic permeability and susceptibility, classification of magnetic materials, fundamentals of vector calculus, equation of continuity, Maxwell‚Äôs equations in vacuum. Superconductivity & Fibre Optics: Super conductivity- Meissner effect, Type I & II superconductors, applications of superconductors, Optical fibre -Principle, Numerical aperture, Types of fibres, Applications (a)",
                    "textbooks": "1) M.N. Avadhanulu , P.G. Kshirsagar, T.V.S Arun Murthy, A Text book of Engineering Physics, S.Chand &Co., Revised Edition, 2014 2) H.K. Malik, A.K. Singh, Engineering Physics, McGraw Hill Education, 2nd Edition, 2017 (b)",
                    "references": "BTech in Computer Science and Engineering(AI) 1) Arthur Beiser, Concepts of Modern Physics, Tata McGraw Hill Publications, 6thEdition, 2003. 2) Aruldhas G., Engineering Physics, Prentice Hall of India Pvt. Ltd., 2015 3) Ajoy Ghatak, Optics, Mc Graw Hill Education, 6th Edition, 2017 4) David J. Griffiths, Introduction to Electrodynamics, Addison-Wesley publishing, 4th Edition, 1999. 5) Premlet B., Advanced Engineering Physics, Phasor Books,10thEdition, 2017.",
                    "course_plan": "No. of Module Contents hours Oscillations and Waves: Harmonic oscillations, forced oscillations- differential equation-derivation of expressions for amplitude and phase of forced oscillations, amplitude resonance-expression for resonant frequency, Quality factor and sharpness of resonance, electrical analogy of mechanical I oscillators 9 Wave motion- derivation of one-dimensional wave equation and its solution (no derivation), three-dimensional wave equation and its solution (no derivation), transverse vibration in a stretched string, statement of laws of vibration Wave Optics: Interference of light- theory of thin films - cosine law (no derivation), interference due to wedge shaped films -determination of thickness and test for optical planeness, Newton‚Äôs rings- measurement of wavelength and refractive index, antireflection coatings. II 9 Diffraction of light, Comparison of Fresnel and Fraunhofer classes of diffraction, diffraction grating-Grating equation, Rayleigh criterion for limit of resolution, resolving and dispersive power of a grating with expression (no derivation) Quantum Mechanics & Nanotechnology: Introduction for the need of Quantum mechanics, wave nature of Particles, uncertainty principle, Applications-absence of electrons inside a nucleus, formulation of time dependent and time- independent Schrodinger wave equations, Particle in a one dimensional box- derivation for normalised wave function and energy III eigen values, Quantum mechanical tunnelling (qualitative). Introduction to nanoscience and technology, surface to volume ratio for nanomaterials, quantum confinement in one dimension, two dimension and three dimension-nano sheets, nano wires and quantum dots, applications of 9 nanotechnology (qualitative ideas) Magnetism and Electromagnetic theory: Magnetic field and Magnetic flux density, Magnetic permeability and susceptibility, classification of magnetic materials-para, dia and ferromagnetic materials IV 9 Fundamentals of vector calculus, equation of continuity, derivation of Maxwell‚Äôs equations in vacuum, comparison of displacement current with conduction current Superconductivity: Superconducting phenomena, Meissner effect and perfect diamagnetism, types of Superconductors-Type I and Type II Optic fibre-principle of propagation of light, types of fibres-step index and V 9 graded index fibres, numerical aperture (derivation), fibre optic communication system (block diagram), industrial, medical and technological applications of optical fibre. Total hours 45 BTech in Computer Science and Engineering(AI) Course Name Category L T P Credi t Year of Introduction Course Code ES0U10A ENGINEERING ESC 2 1 0 3 2022 MECHANICS COURSE OVERVIEW Goal of this course is to expose the students to the fundamental concepts of mechanics and enhance their problem-solving skills. It introduces students to the influence of applied force system and the geometrical properties of the rigid bodies while stationary or in motion. After this course students will be able to recognize similar problems in real-world situations and respond accordingly. COURSE OUTCOMES After the completion of the course, the student will be able to: CO 1 Explain the principles and theorems related to rigid body mechanics. Understand CO 2 Describe the components of system of forces acting on the rigid body. Understand CO 3 Apply the properties of distributed areas and masses for solving Apply problems involving rigid bodies. CO 4 Apply the conditions of equilibrium to various practical problems Apply involving different force systems. CO 5 Apply appropriate principles to solve problems in rigid body mechanics. Apply SYLLABUS Statics of rigid bodies: Classification of force systems, Composition and resolution of forces, Resultant and equilibrium equations, Methods of projections, Varignon‚Äôs Theorem of moments. Friction: Analysis of single and connected bodies. Parallel coplanar forces, couple. Beam reactions. Properties of surfaces: Centroid of composite areas, Moment of inertia of areas, Polar moment of inertia, Theorem of Pappus-Guldinus, Forces in space. Dynamics: D‚ÄôAlembert‚Äôs principle, Motion on horizontal and inclined surfaces, Motion of connected bodies. Impulse momentum and work energy relation. Curvilinear translation. Rotation: Kinematics of rotation. Plane motion of rigid body: Instantaneous centre. Simple harmonic motion: Mechanical vibrations. TEXTBOOKS 1) Timoshenko, S., Young, D. H., Rao, J. V. and Pati, S., Engineering Mechanics, Mc-Graw Hill Publishers, 2017. 2) Beer, F. P. and Johnston, R., Vector Mechanics for Engineers: Statics and Dynamics, Tata Mc-Graw Hill Publishing Company Limited, New Delhi, 12thEdition, 2005. 3) Bansal, R. K., A Textbook of Engineering Mechanics, Laxmi Publications, 8thEdition, 2016. BTech in Computer Science and Engineering(AI) 4) Sharma, D. P., Hibbeler, R. C. and Shames, I. H., Engineering Mechanics, Pearson Publishers, 2011. REFERENCES 1) Bhavikkatti, S. S., Engineering Mechanics, New Age International Publishers, 2016. 2) Merriam, J. L. and Kraige, L. G., Engineering Mechanics - Vols. 1 and 2, John Wiley, 7thEdition, 2006. 3) Hibbeler, R. C. and Gupta, A., Engineering Mechanics, Vol. I Statics, Vol II Dynamics, Pearson Education, 2009. 4) Shames, I. H., Engineering Mechanics - Statics and Dynamics, Prentice Hall of India,4th Edition 2005. COURSE PLAN Module Contents No. of hours I Introduction to engineering mechanics - Introduction on statics and 9 dynamics - Basic principles of statics - Parallelogram law, Equilibrium law - Superposition and transmissibility, Law of action and reaction. Free body diagrams - Degree of Freedom-Types of supports and nature of reactions -Exercises for free body diagram preparation - Composition and resolution of forces, Resultant and equilibrium equations. Concurrent coplanar forces - Analysis of concurrent forces - Methods of projections - Methods of moment - Varignon‚Äôs Theorem of Moments. II Friction - Sliding friction - Coulomb‚Äôs laws of friction - Analysis of single 9 bodies - Analysis of connected bodies. Parallel coplanar forces - Couple - Resultant of parallel forces - Centre of parallel forces - Equilibrium of parallel forces - Simple beam subject to concentrated vertical loads. General coplanar force system - Resultant and equilibrium equations. III Centroid of regular geometrical shapes - Centroid of Composite areas. 9 Moment of inertia- Parallel axis theorem - Perpendicular axis theorem - Polar moment of inertia, Radius of gyration. Mass moment of inertia of ring, cylinder and uniform disc. Theorem of Pappus Guldinus. Introduction to forces in space -Vectorial representation of forces, moments and couples - Resultant and equilibrium equations for concurrent forces in space - Concurrent forces in space. IV Introduction to dynamics - Rectilinear translation - Equations of kinematics. 9 Introduction to kinetics - Equation of motion - D‚ÄôAlembert‚Äôs principle - Motion on horizontal and inclined surfaces - Motion of connected bodies. Curvilinear translation - Projectile motion - Introduction to kinetics - equation of motion. Impulse momentum equation and work energy equation. Moment of momentum and work energy equation (Curvilinear BTech in Computer Science and Engineering(AI) translation). V Rotation - Kinematics of rotation- Equation of motion for a rigid body 9 rotating about a fixed axis - Rotation under a constant moment. Plane motion of rigid body- Instantaneous Centre of rotation (concept only). Introduction to harmonic oscillation - Free vibrations - Simple harmonic motion ‚Äì Differential equation and solution. Degree of freedom - Examples of single degree of freedom (SDOF) systems -Idealisation of mechanical systems as spring-mass systems (concept only). SDOF spring mass system - Equation of motion -Undamped free vibration response - Concept of natural frequency. Effect of damping on free vibration response (concept only). Total hours 45 BTech in Computer Science and Engineering(AI) Course Course Name Category L T P Credi Year of Code t Introduction ES0U10C BASICS OF CIVIL AND ESC 4 0 0 4 2022 MECHANICAL ENGINEERING COURSE OVERVIEW The goal of this course is to provide an insight on the essentials of Civil and Mechanical Engineering discipline to the students of all branches of Engineering and to provide the students an illustration of the significance of the Civil and Mechanical Engineering Profession in satisfying the societal needs. COURSE OUTCOMES After the completion of the course, the student will be able to: CO 1 Explain different types of buildings, their components, materials, Understand construction techniques and basic infrastructure services. CO 2 Describe the importance, objectives and principles of surveying. Understand CO 3 Apply the principles of levelling to find the level difference between Apply points. CO 4 Summarise the different materials and systems in the context of green Understand buildings. CO 5 Analyse thermodynamic cycles and Illustrate the working and features Apply of IC Engines CO 6 Explain the basic principles of Refrigeration and Air Conditioning and Understand working of hydraulic machines CO 7 Explain the working of power transmission elements, basic Understand manufacturing, metal joining and machining processes SYLLABUS Introduction to Civil Engineering: Relevance and major disciplines of Civil Engineering, Introduction to buildings: Types and different components of buildings, building rules and regulations, Building area. Introduction to surveying: Objectives, Principle, Classification, Levelling, Introduction to modern surveying instrument- Total Station. Construction materials: Bricks, Stones, Sand, Timber, Cement, Cement mortar, Concrete, Steel, Modern construction materials. Building construction: Foundations, Brick masonry, Roofs and floors, Basic infrastructure services, Green buildings. Basics of Mechanical Engineering: Fundamental of thermodynamics. Analysis of thermodynamic cycles and working of internal combustion engines. CRDI, MPFI and concept of hybrid vehicles. Refrigeration and power transmission systems - Analysis of reversed Carnot cycle and vapour compression cycle. Introduction to psychometric. Layout of unit and central air conditioner. BTech in Computer Science and Engineering(AI) Description and basic analysis of hydraulic pump and turbine. Working of different power transmission devices. Manufacturing methods and machine tools - Description of various manufacturing, metal joining process and basic machining operations. Working of different machines tools and CNC machine. Introduction to CAD/CAM, additive and rapid manufacturing. TEXT BOOKS 1) Mamlouk, M. S., and Zaniewski, J. P., Materials for Civil and Construction Engineering, Pearson Publishers, 4th Edition, 2017. 2) Rangwala, S. C., Essentials of Civil Engineering, Charotar Publishing House, 1st Edition, 2012. 3) Clifford, M., Simmons, K. and Shipway, P., An Introduction to Mechanical Engineering Part I - CRC Press, 2009. 4) Kumar, P., Basic Mechanical Engineering, Pearson India, 2013. REFERENCES 1) Chen, W. F. and Liew, J. Y. R. (Eds), The Civil Engineering Handbook, CRC Press (Taylor and Francis), 2ndEdition, 2002 2) Punmia, B. C., Ashok, K. J. and Arun, K. J., Surveying, Vol. I, Laxmi Publications (P) ltd., New Delhi, 17thEdition, 2016 3) Kerala Municipal Building Rules, LSGD, Govt. of Kerala, 2019 4) SP 7: 2016, National Building Code of India, BIS, New Delhi, 2016. 5) Wylen, G. J. V., Sonntag, R. and Borgnakke, C., Fundamentals of Classical Thermodynamics, John Wiley & Sons,2012. 6) Sawhney, G. S., Fundamentals of Mechanical Engineering, PHI Learning; 3rd Revised Edition, 2015. COURSE PLAN Module Contents No. of hours I General Introduction to Civil Engineering: Relevance of Civil 10 Engineering in the overall infrastructure development of the Country. Responsibility of an engineer in ensuring the safety of built environment. Brief introduction to major disciplines of Civil Engineering like Structural Engineering, Transportation Engineering, Geotechnical Engineering, Water Resources Engineering and Environmental Engineering. Introduction to buildings: Types of buildings, selection of site for buildings, components of a residential building and their functions. Building rules and regulations: Relevance of NBC, KBR & CRZ norms BTech in Computer Science and Engineering(AI) (brief discussion only). Building area: Plinth area, built up area, floor area, carpet area and floor area ratio for a building as per KBR. Surveying: Importance, classification, objectives and principles, instruments used. Levelling- principles, dumpy level, simple levelling, differential levelling- problems. Introduction to modern surveying instruments-Total Station. II Construction materials: Conventional construction materials: types, 10 properties and uses of building materials: bricks, stones, cement, sand and timber. Cement Mortar: Materials and properties. Cement concrete: Constituent materials, properties and types. Steel: Steel sections and steel reinforcements, types and uses. Modern construction materials: Architectural glass, ceramics, plastics, composite materials, thermal and acoustic insulating materials, decorative panels, waterproofing materials. Modern uses of gypsum, pre-fabricated building components (brief discussion only). III Building Construction: Foundations: Bearing capacity of soil (definition 10 only), functions of foundations, types ‚Äì shallow and deep (brief discussion only). Load bearing and framed structures (concept only). Brick masonry: Header and stretcher bond, English bond and Flemish bond. Roofs and floors: Functions, types; flooring materials (brief discussion only). Basic infrastructure services: MEP, HVAC, elevators, escalators and ramps (Civil Engineering aspects only), fire safety for buildings. Green buildings: Materials, energy systems and water management and environment for green buildings (brief discussion only). IV Fundamentals of thermodynamics: Review of basics of thermodynamics- 10 system, surroundings, process, cycle- quasistatic process, laws of thermodynamics. Analysis of thermodynamic cycles: Carnot, Otto, Diesel cycles, Derivation of efficiency of these cycles, Problems to calculate heat added, heat rejected, net-work and efficiency. IC Engines: CI, SI, 2- Stroke, 4-Stroke engines. Listing the parts of different types of IC Engines. Efficiencies of IC Engines (Definitions only), Air, Fuel, cooling and lubricating systems in SI and CI Engines, CRDI, MPFI. Concept of hybrid engines. V Refrigeration: Unit of refrigeration, reversed Carnot cycle, COP, vapour 10 compression cycle (only description and no problems); Definitions of dry, wet & dew point temperatures, specific humidity and relative humidity, Cooling and dehumidification, Layout of unit and central air conditioners. BTech in Computer Science and Engineering(AI) Hydraulic machines: Working principle of Reciprocating pump, Centrifugal pump, Pelton turbine, Francis turbine and Kaplan turbine. Overall efficiency, Problems on calculation of input and output power of pumps and turbines (No velocity triangles) Power Transmission Devices: Belt and Chain drives, Gear and Gear trains, Single plate clutches. VI Manufacturing Process: Basic description of the manufacturing processes 10 ‚Äì Sand Casting, Forging, Rolling, Extrusion and their applications. Metal Joining Processes: List types of welding, Description with sketches of Arc Welding, Soldering and Brazing and their applications. Basic Machining Operations: Turning, Drilling, Milling and Grinding. Lathe, drilling machine, Milling machine. Computer Aided Machining: CNC Machine. Principle of CAD/CAM, Rapid and Additive manufacturing. 60 Total hours BTech in Computer Science and Engineering(AI) Course Course Name Category L T P Credi t Year of Code Introduction HS0U10A LIFE SKILLS HSC 2 0 2 - 2022"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "This course is designed to enhance the employability and maximize the potential of the students by introducing them to the principles that underly personal and professional success, and help them acquire the skills needed to apply these principles in their lives and careers.",
                    "outcomes": "After the completion of the course, the student will be able to: CO 1 Identify different skills required in personal and professional life. Understand CO 2 Apply well defined techniques to cope with emotions and stress and to Apply provide an awareness of the self. CO 3 Apply appropriate thinking tools and techniques for creative problem Apply solving. CO 4 Explain the importance of teamwork, team performance and team Understand conflicts. CO 5 Explain the basic mechanics of effective communication and Understand demonstrate these through presentations.",
                    "syllabus": "Overview of Life Skills: Meaning and significance of life skills, Life skills identified by WHO, Life skills for professionals, personality development, IQ, EQ, and SQ. Self-awareness & Stress Management: Definition and need for self-awareness; Tools and techniques of SA, Stress, reasons and effects, the four A's of stress management, Techniques and Approaches, PATH method and relaxation techniques. Critical Thinking & Problem Solving: Creativity, Lateral thinking, Critical thinking, Multiple Intelligence, Problem Solving, Six thinking hats, Mind Mapping & Analytical Thinking. Teamwork: Groups, Teams, Group Vs Teams, Team formation process, Stages of Group, Group Dynamics, Managing Team Performance & Team Conflicts. Leadership Skills: Leadership, Levels of Leadership, Making of a leader, Types of leadership, Transactions Vs Transformational Leadership, VUCA Leaders, Leadership Grid & leadership Formulation.",
                    "textbooks": "1. Remesh.S., VishnuR.G., Life Skills for Engineers, Ridhima Publications, 1stEdition,2016. 2. Life Skills for Engineers, Complied by ICT Academy of Kerala, McGraw Hill Education (India) Private Ltd., 2016. BTech in Computer Science and Engineering(AI)",
                    "references": "1. Shiv Khera, You Can Win, Macmillan Books, NewYork,2003. 2. Barun.K. Mitra, Personality Development & Soft Skills, Oxford Publishers, Third impression, 2017. 3. Caruso, D. R. and Salovey P, The Emotionally Intelligent Manager: Howto Develop and Use the Four Key Emotional Skills of Leadership, John Wiley & Sons,2004. 4. Larry James, The First Book of Life Skills; Embassy Books, 1stEdition,2016.",
                    "course_plan": "Module Contents No. of hours I Overview of Life Skills: Meaning and significance of life skills Life skills identified by WHO: Self- awareness, Empathy, Critical 6 thinking, Creative thinking, Decision making, problem solving, Effective communication, interpersonal relationship, coping with stress, coping with emotion. Life skills for professionals: positive thinking, right attitude, attention to detail, having the big picture, learning skills, research skills, perseverance, setting goals and achieving them, helping others, leadership, motivation, self-motivation, and motivating others, personality development, IQ, EQ, and SQ. Activities based on Creative thinking tools II Self-awareness: Definition, need for self-awareness; Coping with Stress 6 and Emotions, Human Values, tools and techniques of SA: questionnaires, journaling, reflective questions, meditation, mindfulness, psychometric tests, feedback. Stress Management: Stress, reasons and effects, identifying stress, stress diaries, the four A's of stress management, techniques, Approaches: action- oriented, emotion-oriented, acceptance- oriented, resilience, Gratitude Training, Coping with emotions: Identifying and managing emotions, harmful ways of dealing with emotions, PATH method and relaxation techniques. Morals, Values and Ethics: Integrity, Civic Virtue, Respect for Others, Living Peacefully. Caring, Sharing, Honesty, Courage, Valuing Time, Time management, Cooperation, Commitment, Empathy, Self- Confidence, Character, Spirituality, Avoiding Procrastination, Sense of Engineering Ethics. Case studies on Morals and Ethics III 21st century skills: Creativity, Critical Thinking, Collaboration, Problem Solving, Decision Making, Need for Creativity in the 21st century, Imagination, Intuition, Experience, Sources of Creativity, Lateral Thinking, Myths of creativity, Critical thinking Vs Creative thinking, Functions of Left Brain & Right brain, Convergent & Divergent BTech in Computer Science and Engineering(AI) Thinking, Critical reading & Multiple Intelligence. Steps in problem solving: Problem Solving Techniques, Six Thinking 6 Hats, Mind Mapping, Forced Connections. Analytical Thinking, Numeric, symbolic, and graphic reasoning. Scientific temperament and Logical thinking Thinking Hats, Mind Mapping, Forced Connections. Problem solving using Mind map/Six Thinking Hats IV Group and Team Dynamics: Introduction to Groups: Composition, 6 formation, Cycle, thinking, clarifying expectations, Problem Solving, Consensus, Dynamics techniques, Group vs Team, Team Dynamics, Virtual Teams. Managing team performance and managing conflicts, Intrapreneurship. Group Discussion: Differences between group discussion and debate; 6 Ensuring success in group discussions. V Leadership: Leadership framework, entrepreneurial and moral leadership, 6 vision, cultural dimensions. Growing as a leader, turnaround leadership, managing diverse stakeholders, crisis management. Types of Leadership, Traits, Styles, VUCA Leadership, Levels of Leadership, Transactional vs Transformational Leaders, Leadership Grid, Effective Leaders. Presentation Presentation Skills: Oral presentation and public speaking skills; business presentations Total hours 30 Life skills- Practical part 1. Activities based on Creative thinking tools 2. Case studies on Morals and Ethics 3. Problem solving using Mind map/Six Thinking Hats 4. Group Discussion: Differences between group discussion and debate; Ensuring success in group discussions. 5. Oral presentation and public speaking skills; business presentations. BTech in Computer Science and Engineering(AI) Course Year of Course Name Catego L T P Credit Code Introduction ry ES0U10G PROBLEM SOLVING & ESC 2 1 2 4 2022 PROGRAMMING IN C COURSE OVERVIEW This course aims to introduce the concepts of structured programming. It covers basic concepts of C programming language including arrays, functions, pointers and files. This course involves a lab component which equips the learner to solve computational problems through programming. COURSE OUTCOMES After the completion of the course, the student will be able to: Explain the fundamentals of computer architecture and types of CO 1 Understa nd software. Develop a solution using algorithm /flowchart to a computational CO 2 Apply problem. CO 3 Construct programs with control statements and arrays. Apply Make use of user defined data types or functions to solve CO4 Apply computational problems. CO5 Develop programs using files and pointers. Apply SYLLABUS Computer architecture & Programming Languages ‚Äì Basics of Computer architecture, Types of Programming Languages, System Software, Application Software, Introduction to structured programming, Algorithms, Flowcharts and Pseudo-codes C Programming Language ‚Äì Data Types, variables, keywords, Constants, Operators and Expressions, Control Flow Statements- Conditional statements, Iterative statements, programs Arrays and Strings‚Äì Multidimensional arrays and matrices, String processing, searching and sorting in 1D array. Functions ‚Äì Scope of variable, Pass by reference and value methods, Recursive functions. Structures and union, Storage Classes Pointers and Files- File Operations, Sequential access and random access, programs covering pointers and files. TEXT BOOKS 1) Byron Gottfried, Programming with C (Schaum's Outlines Series), Mcgraw Hill BTech in Computer Science and Engineering(AI) Education, 3rd Edition, 2017. 2) H. M. Deitel, P. J. Deitel, C: How to program, 7th Edition, Pearson Education, 2010. 3) Anita Goel, Computer Fundamentals, Pearson, 1st Edition, 2010. REFERENCES 1) Brian W. Kernighan and Dennis M. Ritchie, C Programming Language, Pearson, 2nd Edition, 2015. 2) Rajaraman V, PHI, Computer Basics and Programming in C, 1st Edition, 2007. 3) Anita Goel and Ajay Mittal, Computer fundamentals and Programming in C, 1st Edition, 2013. COURSE PLAN No. Module Contents of hour s Basics of Computer architecture. -Von-Neumann Architecture- Processor, Memory, Input and Output devices. Types of Programming Languages, System Software, Application I 8 Software: Compilers, Interpreters, high level and low level languages Introduction to structured programming, Algorithm, flowcharts and Pseudo-code ‚ÄìExamples Basic structure of C program: Character set, Tokens, Identifiers in C, Variables and Data Types, Constants, Console IO Operations, printf and scanf, Operators and Expressions: Expressions and Arithmetic Operators, Relational and Logical Operators, II Conditional operator, size of operator, Assignment operators and 9 Bitwise Operators. Operators Precedence. Control Flow Statements: If Statement, Switch Statement, Unconditional Branching using goto statement, While Loop, Do While Loop, For Loop, Break and Continue statements. Arrays. Strings-string handling functions. Multidimensional arrays and matrices. Linear search and Bubble Sort in array. String III 9 processing: In built string handling functions Simple programs covering arrays and strings Functions : The prototype declaration, Function definition. Function call: Passing arguments to a function, by value, by IV 8 reference. Scope of variable names. Recursive function calls. Storage Classes. Structure and union in C, Array of structures BTech in Computer Science and Engineering(AI) Pointers: Pointer variables. Declaring and dereferencing pointer variables. Accessing arrays through pointers. File Operations: open, close, read, write, append Sequential access and random V access to files: In built file handling functions (rewind (), fseek (), 11 ftell (), feof (), fread (), fwrite ()), simple programs covering pointers and files. Total hours 45 B. Tech in Computer Science and Engineering (AI) 2022-2023 C PROGRAMMING LAB (Practical Part of ES0U10E) 1. Familiarization of console I/O and operators in C i) Display ‚ÄúHello World‚Äù ii) Read two numbers, add them and display their sum iii) Read the radius of a circle, calculate its area and display it iv) Area of triangle after reading its sides 2. Read 3 integer values and find largest of three numbers. 3. Check whether given year is leap year. 4. Display the grade of a student after reading his mark for a subject. (Use switch) 5. Read a Natural Number and check whether the number is prime or not 6. Read a Natural Number and check whether the number is Armstrong or not 7. Display second largest number after reading n numbers from user. (Without array). 8. Read n integers, store them in an array and find their sum and average 9. Read n integers, store them in an array and search for an element in the array using an algorithm for Linear Search 10. Read n integers, store them in an array and sort the elements in the array using Bubble Sort algorithm 11. Write a menu driven program for performing matrix addition, multiplication and finding the transpose. Use functions to (i) read a matrix, (ii) find the sum of two matrices, (iii) find the product of two matrices, (i) find the transpose of a matrix and display a matrix. 12. Display sum of diagonal elements of a matrix 13. Read a string (word), store it in an array and check whether it is a palindrome word or not. 14. Read a string (ending with a $ symbol), store it in an array and count the number of vowels, consonants and spaces in it. 15. Display first n prime numbers using Function. 16. Program to find the sum of digits of a number using recursion 17. Using structure, read and print data of n employees (Name, Employee Id and Salary) 18. Read the marks of three subjects for n students of a class and display their names in the order of rank. (Use array of structure) 19. Input and Print the sum of elements of an array using pointers 20. Create a file and perform the following i) Write data to the file ii) Read the data in a given file & display the file content on console iii) append new data and display on console 21. Open a text input file and count number of characters, words and lines in it; and store the results in an output file. B. Tech in Computer Science and Engineering (AI) 2022-2023 Course Course Name Category L T P Credit Year of Code Introduction PH0U18A ENGINEERING PHYSICS BSC 0 0 2 1 2022 LAB"
                },
                {
                    "course_info": {
                        "Error": "Table not found"
                    },
                    "overview": "The aim of this course is to enable the students to gain practical knowledge in Physics to correlate with the theoretical studies. It equips the students to utilize the acquired skills in an appropriate way to explore the prospects of modern technology. It brings more confidence in students and develop the ability to fabricate engineering and technical tools.",
                    "outcomes": "Not Found",
                    "syllabus": "Not Found",
                    "textbooks": "Not Found",
                    "references": "Not Found",
                    "course_plan": "Not Found"
                }
            ]
        }
    }
}